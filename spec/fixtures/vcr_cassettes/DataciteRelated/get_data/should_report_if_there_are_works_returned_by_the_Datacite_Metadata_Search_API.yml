---
http_interactions:
- request:
    method: get
    uri: http://search.datacite.org/api?fl=doi,creator,title,publisher,publicationYear,resourceTypeGeneral,datacentre_symbol,relatedIdentifier,nameIdentifier,xml,minted,updated&fq=updated:%5B2015-04-07T00:00:00Z%20TO%202015-04-08T23:59:59Z%5D%20AND%20has_metadata:true%20AND%20is_active:true&q=relatedIdentifier:DOI%5C:*&rows=200&start=0&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - http://api.local
      Accept:
      - application/json
  response:
    status:
      code: 200
      message: ''
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Sat, 02 Jul 2016 17:05:23 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Content-Type,Accept,Accept-Encoding,Origin,User-Agent,Cache-Control,Keep-Alive
    body:
      encoding: UTF-8
      string: |
        {"responseHeader":{"status":0,"QTime":331},"response":{"numFound":715,"start":0,"docs":[{"minted":"2015-02-17T15:57:53Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuTU01TTEvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkhldGhlcmluZ3RvbiwgQWxleGFuZGVyIEouPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+U2hlcnJhdHQsIEVtbWE8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5SdXRhLCBNYXJjZWxsbzwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPldpbGtpbnNvbiwgTWFyazwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRlbGluZSwgQnJhZGxleTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRvbm9naHVlLCBQaGlsaXAgQy4gSi48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogIDwvY3JlYXRvcnM+CiAgPHRpdGxlcz4KICAgIDx0aXRsZT5IZXRoZXJpbmd0b25fQUpfZXRfYWxfRVNNPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkRyeWFkIERpZ2l0YWwgUmVwb3NpdG9yeTwvcHVibGlzaGVyPgogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgogIDxzdWJqZWN0cz4KICAgIDxzdWJqZWN0PmRpc3Bhcml0eTwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmV2b2x1dGlvbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm1vcnBob3NwYWNlPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+Y29uc3RyYWludDwvc3ViamVjdD4KICAgIDxzdWJqZWN0PkNhZWNpbGlhPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkFjY2VwdGVkIj4yMDE1LTA0LTA4PC9kYXRlPgogIDwvZGF0ZXM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhRmlsZTwvcmVzb3VyY2VUeXBlPgogIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuTU01TTE8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgogIDxzaXplcz4KICAgIDxzaXplPjE2NzkzNiBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+Q2xhZGlzdGljIGFuZCBnZW9tZXRyaWMgbW9ycGhvbWV0cmljIGRhdGFzZXRzIG9uIHdoaWNoIHRoaXMgc3R1ZHkgaXMgYmFzZWQuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T19:11:30Z","doi":"10.5061/DRYAD.MM5M1/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.MM5M1"],"creator":["Hetherington, Alexander J.","Sherratt, Emma","Ruta, Marcello","Wilkinson, Mark","Deline, Bradley","Donoghue, Philip C. J."],"publisher":"Dryad Digital Repository","title":["Hetherington_AJ_et_al_ESM"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-01-09T22:23:31Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuNjBQUTMvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkNoYXBtYW4sIEJlbiBCLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkh1bHRow6luLCBLYWo8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5CcsO2bm1hcmssIENocmlzdGVyPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+Tmlsc3NvbiwgQW5kZXJzIFAuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+U2tvdiwgQ2hyaXN0aWFuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+SGFuc3NvbiwgTGFycy1BbmRlcnM8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5Ccm9kZXJzZW4sIEpha29iPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+RGF0YSBmcm9tIENoYXBtYW4gZXQgYWwgKEpBRSk8L3RpdGxlPgogIDwvdGl0bGVzPgogIDxwdWJsaXNoZXI+RHJ5YWQgRGlnaXRhbCBSZXBvc2l0b3J5PC9wdWJsaXNoZXI+CiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+YW5pbWFsIG1pZ3JhdGlvbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmVjb21vcnBob2xvZ3k8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5maXNoPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+Z2VvbWV0cmljIG1vcnBob21ldHJpY3M8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5wYXJ0aWFsIG1pZ3JhdGlvbjwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELjYwUFEzPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT4xNzc3NTYgYnl0ZXM8L3NpemU+CiAgPC9zaXplcz4KICA8cmlnaHRzPmh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC88L3JpZ2h0cz4KICA8ZGVzY3JpcHRpb25zPgogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iT3RoZXIiPkFsbCBkYXRhLCByYXcgYW5kIHN1bW1hcml6ZWQuIEFsbCBhbmFseXNlcyB3ZXJlIHBlcmZvcm1lZCBpbiBTUFNTIChyZWxlYXNlIDIxLjAuMC4wKTwvZGVzY3JpcHRpb24+CiAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T20:16:28Z","doi":"10.5061/DRYAD.60PQ3/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.60PQ3"],"creator":["Chapman, Ben B.","Hulthén, Kaj","Brönmark, Christer","Nilsson, Anders P.","Skov, Christian","Hansson, Lars-Anders","Brodersen, Jakob"],"publisher":"Dryad Digital Repository","title":["Data from Chapman et al (JAE)"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T12:05:48Z","datacentre_symbol":"INIST.IRSTEA","xml":"PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPHJlc291cmNlIHhtbG5zPSdodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMycgeG1sbnM6eHNpPSdodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZScgeHNpOnNjaGVtYUxvY2F0aW9uPSdodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCc+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSdET0knPjEwLjE3MTgwL09CUy5BUkMtSVNFUkU8L2lkZW50aWZpZXI+CjxjcmVhdG9ycz4KCTxjcmVhdG9yPgoJCTxjcmVhdG9yTmFtZT5UaG9sbGV0LCBGYWJpZW48L2NyZWF0b3JOYW1lPgoJPC9jcmVhdG9yPgoJPGNyZWF0b3I+CgkJPGNyZWF0b3JOYW1lPkNhbWVuZW4sIEJlbm/DrnQ8L2NyZWF0b3JOYW1lPgoJPC9jcmVhdG9yPgoJPGNyZWF0b3I+CgkJPGNyZWF0b3JOYW1lPkxlIENveiwgSsOpcsO0bWU8L2NyZWF0b3JOYW1lPgoJPC9jcmVhdG9yPgoJPGNyZWF0b3I+CgkJPGNyZWF0b3JOYW1lPkRyYW1haXMsIEd1aWxsYXVtZTwvY3JlYXRvck5hbWU+Cgk8L2NyZWF0b3I+CjwvY3JlYXRvcnM+Cjx0aXRsZXM+Cgk8dGl0bGUgdGl0bGVUeXBlPSdBbHRlcm5hdGl2ZVRpdGxlJz5TdWl2aSBkdSB0cmFuc3BvcnQgc8OpZGltZW50YWlyZSBzdXIgbGVzIHJpdmnDqHJlcyBBcmMgZXQgSXPDqHJlPC90aXRsZT4KPC90aXRsZXM+CjxwdWJsaXNoZXI+SXJzdGVhPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgo8c3ViamVjdHM+Cgk8c3ViamVjdD5CYXNzaW4gdmVyc2FudCBleHBlcmltZW50YWw8L3N1YmplY3Q+Cgk8c3ViamVjdD5FeHBlcmltZW50YWwgY2F0Y2htZW50PC9zdWJqZWN0PgoJPHN1YmplY3Q+SHlkcmF1bGlxdWU8L3N1YmplY3Q+Cgk8c3ViamVjdD5IeWRyYXVsaWNzPC9zdWJqZWN0PgoJPHN1YmplY3Q+dHJhbnNwb3J0IHNvbGlkZTwvc3ViamVjdD4KCTxzdWJqZWN0PnNlZGltZW50IHRyYW5zcG9ydDwvc3ViamVjdD4KCTxzdWJqZWN0Pm1vcnBob2xvZ2llIGRlcyBjb3VycyBkJmFwb3M7ZWF1PC9zdWJqZWN0PgoJPHN1YmplY3Q+Zmx1dmlhbCBnZW9tb3JwaG9sb2d5PC9zdWJqZWN0PgoJPHN1YmplY3Q+bW9udGFnbmU8L3N1YmplY3Q+Cgk8c3ViamVjdD5tb3VudGFpbnM8L3N1YmplY3Q+Cgk8c3ViamVjdD5oeWRyb23DqXRyaWU8L3N1YmplY3Q+Cgk8c3ViamVjdD5oeWRyb21ldHJ5PC9zdWJqZWN0PgoJPHN1YmplY3Q+YW3DqW5hZ2VtZW50IGh5ZHJvw6lsZWN0cmlxdWU8L3N1YmplY3Q+Cgk8c3ViamVjdD5IeWRyb3Bvd2VyPC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8Y29udHJpYnV0b3JzPgoJPGNvbnRyaWJ1dG9yIGNvbnRyaWJ1dG9yVHlwZT0nUHJvZHVjZXInPgoJCTxjb250cmlidXRvck5hbWU+SXJzdGVhPC9jb250cmlidXRvck5hbWU+Cgk8L2NvbnRyaWJ1dG9yPgoJPGNvbnRyaWJ1dG9yIGNvbnRyaWJ1dG9yVHlwZT0nUHJvZHVjZXInPgoJCTxjb250cmlidXRvck5hbWU+U1BDIEFscGVzIGR1IG5vcmQ8L2NvbnRyaWJ1dG9yTmFtZT4KCTwvY29udHJpYnV0b3I+Cgk8Y29udHJpYnV0b3IgY29udHJpYnV0b3JUeXBlPSdQcm9kdWNlcic+CgkJPGNvbnRyaWJ1dG9yTmFtZT5FREY8L2NvbnRyaWJ1dG9yTmFtZT4KCTwvY29udHJpYnV0b3I+CjwvY29udHJpYnV0b3JzPgo8bGFuZ3VhZ2U+ZnItZW48L2xhbmd1YWdlPgo8ZGF0ZXM+Cgk8ZGF0ZSBkYXRlVHlwZT0nQ3JlYXRlZCc+MjAwNTwvZGF0ZT4KPC9kYXRlcz4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSdEYXRhc2V0Jz5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+CjxyZWxhdGVkSWRlbnRpZmllcnM+Cgk8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSdET0knIHJlbGF0aW9uVHlwZT0nSXNSZWZlcmVuY2VkQnknPmh0dHA6Ly9keC5kb2kub3JnLzEwLjEwNTEvbGhiLzIwMTMwMzM8L3JlbGF0ZWRJZGVudGlmaWVyPgoJPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0nVVJMJyByZWxhdGlvblR5cGU9J0lzUmVmZXJlbmNlZEJ5Jz5odHRwOi8vd3d3LmdyYWllLm9yZy96YWJyL2luZGV4Lmh0bTwvcmVsYXRlZElkZW50aWZpZXI+CjwvcmVsYXRlZElkZW50aWZpZXJzPgo8Zm9ybWF0cz4KCTxmb3JtYXQ+QVNDSUk8L2Zvcm1hdD4KPC9mb3JtYXRzPgo8cmlnaHRzTGlzdD4KCTxyaWdodHMgcmlnaHRzVVJJPSdodHRwczovL2Jkb2guaXJzdGVhLmZyL0FSQy1JU0VSRS8nPklyc3RlYS1CRE9IIGxpY2VuY2U8L3JpZ2h0cz4KPC9yaWdodHNMaXN0Pgo8ZGVzY3JpcHRpb25zPgoJPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0nTWV0aG9kcyc+JnF1b3Q7TGEgdmFsbMOpZSBkZSBsYSBNYXVyaWVubmUgZW4gYXZhbCBkZSBNb2RhbmUgZXN0IGNhcmFjdMOpcmlzw6llIHBhciBkZSBub21icmV1eCBhbcOpbmFnZW1lbnRzIGh5ZHJvw6lsZWN0cmlxdWVzIGV0IHZvaWVzIGRlIGNvbW11bmljYXRpb24gKHZvaWUgZmVycsOpZSwgcm91dGUgbmF0aW9uYWxlIGV0IGF1dG9yb3V0ZSkgZGFucyB1bmUgdmFsbMOpZSDDqXRyb2l0ZSBxdWkgcmXDp29pdCBkZXMgYXBwb3J0cyBzw6lkaW1lbnRhaXJlcyBhYm9uZGFudHMgZW4gcHJvdmVuYW5jZSBkZSBsJmFwb3M7ZW5zZW1ibGUgZHUgYmFzc2luIHZlcnNhbnQuIENlcyBhcHBvcnRzIHNvbnQgdHLDqHMgaW1wb3J0YW50cyB0b3V0IHBhcnRpY3VsacOocmVtZW50IGVuIHPDqWRpbWVudHMgZmlucyBkdSBmYWl0IGRlIGxhIGxpdGhvbG9naWUgZGUgY2VydGFpbnMgc291cy1iYXNzaW5zIHZlcnNhbnQgZW4gcml2ZSBnYXVjaGUgZGUgbCZhcG9zO0FyYyBlbiBNYXVyaWVubmUgKG1hcm5lcyBub2lyZXMgdHLDqHMgw6lyb2RhYmxlcyksIGVuIHBhcnRpY3VsaWVyIHBhciBsZSB0b3JyZW50IEFydmFuLiBBaW5zaSwgbGVzIGNvbmNlbnRyYXRpb25zIGVuIE1hdGnDqHJlIGVuIFN1c3BlbnNpb24gKE1FUykgb2JzZXJ2w6llcyBuYXR1cmVsbGVtZW50IGRhbnMgbGEgcml2acOocmUgc29udCB0csOocyDDqWxldsOpZXMsIHZhcmlhbnQgZGUgcXVlbHF1ZXMgZ3JhbW1lcyBwYXIgbGl0cmUgw6AgbOKAmcOpdGlhZ2Ugw6AgcGx1c2lldXJzIGRpemFpbmVzIGRlIGdyYW1tZXMgcGFyIGxpdHJlIGxvcnMgZOKAmcOpdsOpbmVtZW50cyBoeWRyb2xvZ2lxdWVzIG1hamV1cnMgb3UgZCZhcG9zO8OpdsOpbmVtZW50IGRlIHR5cGUgbGF2ZXMgdG9ycmVudGllbGxlcy4gQ2VzIGZvcnRlcyBjb25jZW50cmF0aW9ucyBwZXV2ZW50IGF2b2lyIHVuIGltcGFjdCBmb3J0IHN1ciBsYSBtb3JwaG9keW5hbWlxdWUgZGUgbGEgcml2acOocmUsIHBsdXMgcGFydGljdWxpw6hyZW1lbnQgc3VyIGxlIHBvdGVudGllbCBkZSBkw6lww7R0IHN1ciBsZXMgYmFuY3MgZGUgZ2FsZXRzLiBMZSBiYXNzaW4gZXhww6lyaW1lbnRhbCBBcmMtSXPDqHJlIHZpc2Ugw6AgbWlldXggY29tcHJlbmRyZSBsYSBkeW5hbWlxdWUgZGVzIE1FUyBldCDDoCBlc3RpbWVyIGxlcyBwb3NzaWJsZXMgw6l2b2x1dGlvbnMgZGUgbCZhcG9zO0FyYyBldCBkZSBs4oCZSXPDqHJlIGV0IGzigJlpbXBhY3QgZGVzIGFtw6luYWdlbWVudHMgaHlkcm/DqWxlY3RyaXF1ZXMuIFBvdXIgY2VsYSwgaWwgaW1wb3J0ZSBkZSBiaWVuIGNlcm5lciBsZXMgYXBwb3J0cyDDoCBsYSByaXZpw6hyZSBhdXNzaSBiaWVuIGVuIGVhdSBxdSZhcG9zO2VuIHPDqWRpbWVudHMgZXQgZCZhcG9zO8OpdmFsdWVyIGxlcyBpbnRlcmFjdGlvbnMgZW50cmUgbGVzIHPDqWRpbWVudHMgZW4gc3VzcGVuc2lvbiBldCBsZSBsaXQgZGUgbGEgcml2acOocmUuIExlcyByaXZpw6hyZSBkZSBsJmFwb3M7QXJjIGV0IGwmYXBvcztBcnZhbiwgc29uIGFmZmx1ZW50LCBzb250IMOpcXVpcMOpZXMgY2hhY3VuZSBkZSBkZXV4IHN0YXRpb25zIGRlIG1lc3VyZSBsaW1uaW3DqXRyaXF1ZSBldCB0dXJiaWRpbcOpdHJpcXVlIHBvdXIgZGUgZ3JhbmRlcyBnYW1tZXMgZGUgY29uY2VudHJhdGlvbi4gTGVzIGNocm9uaXF1ZXMgZGUgdHVyYmlkaXTDqSBzb250IGNvbnZlcnRpZXMgZW4gY2hyb25pcXVlcyBkZSBjb25jZW50cmF0aW9uIGVuIG1hdGnDqHJlcyBlbiBzdXNwZW5zaW9uIHBhciBhbmFseXNlcyBkJmFwb3M7w6ljaGFudGlsbG9ucyBjb2xsZWN0w6lzIG1hbnVlbGxlbWVudCBldCDDoCBsJmFwb3M7YWlkZSBkZSBwcsOpbGV2ZXVyIGF1dG9tYXRpcXVlcy4gTCZhcG9zO0lzw6hyZSBlc3Qgw6lnYWxlbWVudCDDqXF1aXDDqWUgZGUgcGx1c2lldXJzIHN0YXRpb25zIGRlIG1lc3VyZSBoeWRyby1zw6lkaW1lbnRhaXJlIGfDqXLDqWVzIHBhciBkZXMgcGFydGVuYWlyZXMgc2NpZW50aWZpcXVlcy4mcXVvdDs8L2Rlc2NyaXB0aW9uPgo8L2Rlc2NyaXB0aW9ucz4KPGdlb0xvY2F0aW9ucz4KCTxnZW9Mb2NhdGlvbj4KCQk8Z2VvTG9jYXRpb25Cb3g+NDUuMjAgNi4yMCA0NS41NyA3LjA4PC9nZW9Mb2NhdGlvbkJveD4KCQk8Z2VvTG9jYXRpb25QbGFjZT5TdCBKZWFuIGRlIE1hdXJpZW5uZSBGcmFuY2U8L2dlb0xvY2F0aW9uUGxhY2U+Cgk8L2dlb0xvY2F0aW9uPgo8L2dlb0xvY2F0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T12:05:48Z","doi":"10.17180/OBS.ARC-ISERE","publisher":"Irstea","creator":["Thollet, Fabien","Camenen, Benoît","Le Coz, Jérôme","Dramais, Guillaume"],"title":["Suivi du transport sédimentaire sur les rivières Arc et Isère"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["IsReferencedBy:DOI:http://dx.doi.org/10.1051/lhb/2013033","IsReferencedBy:URL:http://www.graie.org/zabr/index.htm"],"publicationYear":"2015"},{"minted":"2015-04-07T12:22:40Z","datacentre_symbol":"INIST.IRSTEA","xml":"PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPHJlc291cmNlIHhtbG5zPSdodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMycgeG1sbnM6eHNpPSdodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZScgeHNpOnNjaGVtYUxvY2F0aW9uPSdodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCc+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSdET0knPjEwLjE3MTgwL09CUy5ZWkVST048L2lkZW50aWZpZXI+CjxjcmVhdG9ycz4KCTxjcmVhdG9yPgoJCTxjcmVhdG9yTmFtZT5CcmFuZ2VyLCBGbG9yYTwvY3JlYXRvck5hbWU+Cgk8L2NyZWF0b3I+Cgk8Y3JlYXRvcj4KCQk8Y3JlYXRvck5hbWU+TGFnb3V5LCBNaWNrYcOrbDwvY3JlYXRvck5hbWU+Cgk8L2NyZWF0b3I+Cgk8Y3JlYXRvcj4KCQk8Y3JlYXRvck5hbWU+VGhvbGxldCwgRmFiaWVuPC9jcmVhdG9yTmFtZT4KCTwvY3JlYXRvcj4KCTxjcmVhdG9yPgoJCTxjcmVhdG9yTmFtZT5CcmVpbCwgUGFzY2FsPC9jcmVhdG9yTmFtZT4KCTwvY3JlYXRvcj4KCTxjcmVhdG9yPgoJCTxjcmVhdG9yTmFtZT5EcmFtYWlzLCBHdWlsbGF1bWU8L2NyZWF0b3JOYW1lPgoJPC9jcmVhdG9yPgo8L2NyZWF0b3JzPgo8dGl0bGVzPgoJPHRpdGxlIHRpdGxlVHlwZT0nQWx0ZXJuYXRpdmVUaXRsZSc+U3VpdmkgaHlkcm9sb2dpcXVlIGR1IGJhc3NpbiB2ZXJzYW50IHDDqXJpdXJiYWluIGRlIGwmYXBvcztZemVyb248L3RpdGxlPgo8L3RpdGxlcz4KPHB1Ymxpc2hlcj5JcnN0ZWE8L3B1Ymxpc2hlcj4KPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CjxzdWJqZWN0cz4KCTxzdWJqZWN0Pkh5ZG9sb2dpZSB1cmJhaW5lPC9zdWJqZWN0PgoJPHN1YmplY3Q+dXJiYW4gaHlkcm9sb2d5PC9zdWJqZWN0PgoJPHN1YmplY3Q+em9uZSBww6lyaXVyYmFpbmU8L3N1YmplY3Q+Cgk8c3ViamVjdD5wZXJpLXVyYmFuIGFyZWE8L3N1YmplY3Q+Cgk8c3ViamVjdD5oeWRvbG9naWU8L3N1YmplY3Q+Cgk8c3ViamVjdD5oeWRyb2xvZ3k8L3N1YmplY3Q+Cgk8c3ViamVjdD5CYXNzaW4gdmVyc2FudCBleHBlcmltZW50YWw8L3N1YmplY3Q+Cgk8c3ViamVjdD5leHBlcmltZW50YWwgY2F0Y2htZW50PC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8Y29udHJpYnV0b3JzPgoJPGNvbnRyaWJ1dG9yIGNvbnRyaWJ1dG9yVHlwZT0nUHJvZHVjZXInPgoJCTxjb250cmlidXRvck5hbWU+SXJzdGVhPC9jb250cmlidXRvck5hbWU+Cgk8L2NvbnRyaWJ1dG9yPgoJPGNvbnRyaWJ1dG9yIGNvbnRyaWJ1dG9yVHlwZT0nSG9zdGluZ0luc3RpdHV0aW9uJz4KCQk8Y29udHJpYnV0b3JOYW1lPk9USFU8L2NvbnRyaWJ1dG9yTmFtZT4KCTwvY29udHJpYnV0b3I+CjwvY29udHJpYnV0b3JzPgo8bGFuZ3VhZ2U+ZnItZW48L2xhbmd1YWdlPgo8ZGF0ZXM+Cgk8ZGF0ZSBkYXRlVHlwZT0nQ3JlYXRlZCc+MTk5NzwvZGF0ZT4KPC9kYXRlcz4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSdEYXRhc2V0Jz5EYXRhc2V0PC9yZXNvdXJjZVR5cGU+CjxyZWxhdGVkSWRlbnRpZmllcnM+Cgk8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSdVUkwnIHJlbGF0aW9uVHlwZT0nRG9jdW1lbnRzJz5odHRwOi8vd3d3LmdyYWllLm9yZy9vdGh1L2luZGV4Lmh0bTwvcmVsYXRlZElkZW50aWZpZXI+Cgk8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSdET0knIHJlbGF0aW9uVHlwZT0nSXNSZWZlcmVuY2VkQnknPmh0dHA6Ly9keC5kb2kub3JnLzEwLjEwMTYvai5qaHlkcm9sLjIwMTIuMDQuMDQ5PC9yZWxhdGVkSWRlbnRpZmllcj4KCTxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9J0RPSScgcmVsYXRpb25UeXBlPSdJc1JlZmVyZW5jZWRCeSc+aHR0cDovL2R4LmRvaS5vcmcvMTAuMTAxNi9qLmpoeWRyb2wuMjAxMy4wOS4wNTU8L3JlbGF0ZWRJZGVudGlmaWVyPgo8L3JlbGF0ZWRJZGVudGlmaWVycz4KPGZvcm1hdHM+Cgk8Zm9ybWF0PkFTQ0lJPC9mb3JtYXQ+CjwvZm9ybWF0cz4KPHJpZ2h0c0xpc3Q+Cgk8cmlnaHRzIHJpZ2h0c1VSST0naHR0cHM6Ly9iZG9oLmlyc3RlYS5mci9ZWkVST04vJz5JcnN0ZWEtQkRPSCBsaWNlbmNlPC9yaWdodHM+CjwvcmlnaHRzTGlzdD4KPGRlc2NyaXB0aW9ucz4KCTxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9J0Fic3RyYWN0Jz4mcXVvdDtMZSBiYXNzaW4gdmVyc2FudCBkZSBs4oCZWXplcm9uICgxNTAga23CsikgZXN0IHNpdHXDqSBlbiBww6lyaXBow6lyaWUgb3Vlc3QgZGUgbOKAmWFnZ2xvbcOpcmF0aW9uIGx5b25uYWlzZS4gSWwgc3ViaXQgZGVwdWlzIGxlIFhYZSBzacOoY2xlIGzigJlpbmZsdWVuY2UgZHUgZMOpdmVsb3BwZW1lbnQgZGUgbGEgdmlsbGUgZGUgTHlvbi4gQ2VsYSBzZSB0cmFkdWl0IHBhciB1bmUgYXVnbWVudGF0aW9uIGRlIGzigJlpbXBlcm3DqWFiaWxpc2F0aW9uIGRhbnMgc29uIGF2YWwgdXJiYWluIG1haXMgYXVzc2kgw6AgcGFydGlyIGRlcyB2aWxsYWdlcyBzYXRlbGxpdGVzLCBhaW5zaSBxdSZhcG9zO3VuZSBkw6lwcmlzZSBhZ3JpY29sZSBhdSBwcm9maXQgZGVzIGZvcsOqdHMgZGFucyBzYSBwYXJ0aWUgYW1vbnQuIExlcyBjb25zw6lxdWVuY2VzIGRlIGNlcyDDqXZvbHV0aW9ucyBzdXIgbGUgcsOpZ2ltZSBoeWRyb2xvZ2lxdWUgZHUgYmFzc2luIHNvbnQgY29tcGxleGVzIMOgIGFwcHLDqWhlbmRlci4gTGV1ciBjb25uYWlzc2FuY2UgZXN0IG7DqWFubW9pbnMgZCZhcG9zO2ltcG9ydGFuY2UgcG91ciByw6lwb25kcmUgYXV4IHF1ZXN0aW9ucyBvcMOpcmF0aW9ubmVsbGVzIGRlIGdlc3Rpb24gZXQgZGUgcGxhbmlmaWNhdGlvbi4gTGUgYmFzc2luIHZlcnNhbnQgZXN0IHN1aXZpIGRlcHVpcyAxOTk3IGRhbnMgbGUgY2FkcmUgZGUgbCZhcG9zO09ic2VydmF0b2lyZSBkZSBUZXJyYWluIGVuIEh5ZHJvbG9naWUgVXJiYWluZSAoT1RIVSkgcGFyIGxyc3RlYSAodW5pdMOpIGRlIHJlY2hlcmNoZSBIeWRyb2xvZ2llLUh5ZHJhdWxpcXVlIFVSIEhITFkpIGV0IHNlcyBwYXJ0ZW5haXJlcyBkZSBsJmFwb3M7T1RIVS4gTGUgcsOpc2VhdSBkZSBtZXN1cmVzIGV4cMOpcmltZW50YWwgZ8OpcsOpIGRhbnMgY2V0IG9ic2VydmF0b2lyZSBlc3QgY29tcGzDqW1lbnRhaXJlIGR1IHLDqXNlYXUgZGUgbWVzdXJlcyBvcMOpcmF0aW9ubmVsLCBjb25zdGl0dcOpIGRlIHBvc3RlcyBwbHV2aW9tw6l0cmlxdWVzIGR1IEdyYW5kIEx5b24sIGFpbnNpIHF1ZSBkZXMgc3RhdGlvbnMgaHlkcm9tw6l0cmlxdWVzIGRlIGxhIERSRUFMIFJow7RuZS1BbHBlcyBkZSBDcmFwb25uZSBldCBUYWZmaWdub24gc3VyIGxhIHJpdmnDqHJlIFl6ZXJvbi4gTGVzIG1lc3VyZXMgcsOpYWxpc8OpZXMgw6AgSXJzdGVhIHNvbnQgb3JnYW5pc8OpZXMgw6AgcGx1c2lldXJzIG5pdmVhdXg6IC0gc3VpdmkgaHlkcm9sb2dpcXVlIGfDqW7DqXJhbCBkZSBsb25nIHRlcm1lLCBjb25zdGl0dcOpIGRlIHBvc3RlcyBwbHV2aW9tw6l0cmlxdWVzIGV0IGRlIHN0YXRpb25zIGh5ZHJvbcOpdHJpcXVlcyBlbiBjb3VycyBkJmFwb3M7ZWF1IGV0IHLDqXNlYXUgZCZhcG9zO2Fzc2Fpbmlzc2VtZW50LCByw6lwYXJ0aXMgc3VyIGwmYXBvcztlbnNlbWJsZSBkdSBiYXNzaW4gdmVyc2FudCAtIHN1aXZpIHBsdXMgZMOpdGFpbGzDqSBzdXIgZGV1eCBwZXRpdHMgc291cy1iYXNzaW5zIHZlcnNhbnRzIGRlIHF1ZWxxdWVzIGttwrIsIGxlIE1lcmNpZXIgZXQgbGEgQ2hhdWRhbm5lLCBvw7kgc29udCDDqWdhbGVtZW50IHLDqWFsaXPDqWVzIGRlcyBleHDDqXJpbWVudGF0aW9ucyBzcMOpY2lmaXF1ZXMgc3VyIGRlcyBkdXLDqWVzIGxpbWl0w6llcy4mcXVvdDs8L2Rlc2NyaXB0aW9uPgo8L2Rlc2NyaXB0aW9ucz4KPGdlb0xvY2F0aW9ucz4KCTxnZW9Mb2NhdGlvbj4KCQk8Z2VvTG9jYXRpb25Cb3g+NDUuNzEgNC41NiA0NS44NSA0LjgxPC9nZW9Mb2NhdGlvbkJveD4KCQk8Z2VvTG9jYXRpb25QbGFjZT5MeW9uIEZyYW5jZTwvZ2VvTG9jYXRpb25QbGFjZT4KCTwvZ2VvTG9jYXRpb24+CjwvZ2VvTG9jYXRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T12:22:40Z","doi":"10.17180/OBS.YZERON","publisher":"Irstea","creator":["Branger, Flora","Lagouy, Mickaël","Thollet, Fabien","Breil, Pascal","Dramais, Guillaume"],"title":["Suivi hydrologique du bassin versant périurbain de l'Yzeron"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["Documents:URL:http://www.graie.org/othu/index.htm","IsReferencedBy:DOI:http://dx.doi.org/10.1016/j.jhydrol.2012.04.049","IsReferencedBy:DOI:http://dx.doi.org/10.1016/j.jhydrol.2013.09.055"],"publicationYear":"2015"},{"minted":"2015-04-07T12:27:27Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pwYWQuMjAxNS41NTwvaWRlbnRpZmllcj4KPGNyZWF0b3JzPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5CLiBWZWxsYXMNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlIuIEJhdGVtYW4NPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPksuIEJsZW5ub3cNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkcuIEZyaXNvbmkNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPksuIEpvaG5zb24NPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlIuIEthdHoNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkouIExhbmdiYXVtDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5ELiBNYXJzb24NPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlIuIFNwZXJsaW5nDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5BLiBXZXNzZWxzDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5TLiBTYWxsb3dheQ08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Ui4gRG9vZHkNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlAuIEFpc2VuDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5hbmQgVGFzayBGb3JjZSBNZW1iZXJzPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PC9jcmVhdG9ycz4KPHRpdGxlcz4KCTx0aXRsZT5FbmRwb2ludHMgZm9yIFByZS1EZW1lbnRpYSBBRCBUcmlhbHM6IEEgUmVwb3J0IGZyb20gdGhlIEVVL1VTL0NUQUQgVGFzayBGb3JjZTwvdGl0bGU+CjwvdGl0bGVzPgo8cHVibGlzaGVyPlRoZSBKb3VybmFsIG9mIFByZXZlbnRpb24gb2YgQWx6aGVpbWVy4oCZcyBEaXNlYXNlIChKUEFEKTwvcHVibGlzaGVyPgo8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KPHN1YmplY3RzPgoJCQk8c3ViamVjdD5QcmUtZGVtZW50aWEgQWx6aGVpbWVy4oCZcyBkaXNlYXNlDTwvc3ViamVjdD48c3ViamVjdD5jb2duaXRpdmUgb3V0Y29tZSBhc3Nlc3NtZW50cw08L3N1YmplY3Q+PHN1YmplY3Q+ZnVuY3Rpb25hbCBvdXRjb21lIGFzc2Vzc21lbnRzDTwvc3ViamVjdD48c3ViamVjdD5iaW9tYXJrZXJzPC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5Kb3VybmFsQXJ0aWNsZSA8L3Jlc291cmNlVHlwZT4KPHZlcnNpb24+MTwvdmVyc2lvbj4KPHJlbGF0ZWRJZGVudGlmaWVycz4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IklzUGFydE9mIj4xMC4xNDI4My9qcGFkLjIwMTIuMDwvcmVsYXRlZElkZW50aWZpZXI+CjxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IklTU04iIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiPjIyNzQtNTgwNzwvcmVsYXRlZElkZW50aWZpZXI+CjwvcmVsYXRlZElkZW50aWZpZXJzPgo8ZGVzY3JpcHRpb25zPgoJPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkZvciBBbHpoZWltZXLigJlzIGRpc2Vhc2UgdHJlYXRtZW50IHRyaWFscyB0aGF0IGZvY3VzIG9uIHRoZSBwcmUtZGVtZW50aWEgc3RhZ2Ugb2YgZGlzZWFzZSwgb3V0Y29tZSBtZWFzdXJlcyBhcmUgbmVlZGVkIHRoYXQgd2lsbCBlbmFibGUgYXNzZXNzbWVudCBvZiBkaXNlYXNlIHByb2dyZXNzaW9uIGluIHBhdGllbnRzIHdobyBhcmUgY2xpbmljYWxseSBub3JtYWwuIFRoZSBFVS9VUyBDVEFEIFRhc2sgRm9yY2UsIGFuIGludGVybmF0aW9uYWwgY29sbGFib3JhdGlvbiBvZiBpbnZlc3RpZ2F0b3JzIGZyb20gaW5kdXN0cnksIGFjYWRlbWlhLCBub24tcHJvZml0IGZvdW5kYXRpb25zLCBhbmQgcmVndWxhdG9yeSBhZ2VuY2llcywgbWV0IGluIFBoaWxhZGVscGhpYSwgUGVubnN5bHZhbmlhLCBVU0EsIG9uIE5vdmVtYmVyIDE5LCAyMDE0IHRvIGRpc2N1c3MgZXhpc3RpbmcgYW5kIG5vdmVsIG91dGNvbWUgYXNzZXNzbWVudHMgdGhhdCBtYXkgYmUgdXNlZnVsIGluIHByZS1kZW1lbnRpYSB0cmlhbHMuIENvbXBvc2l0ZSBtZWFzdXJlcyB0aGF0IGFzc2VzcyBjaGFuZ2VzIGluIGVwaXNvZGljIG1lbW9yeSwgZXhlY3V0aXZlIGZ1bmN0aW9uLCBnbG9iYWwgY29nbml0aW9uLCBhbmQgZ2xvYmFsIGZ1bmN0aW9uIGhhdmUgcmVjZW50bHkgYmVlbiBkZXZlbG9wZWQgYnkgYSBudW1iZXIgb2YgZ3JvdXBzIGFuZCBhcHBlYXIgdG8gYmUgc2Vuc2l0aXZlIGF0IHRoaXMgc3RhZ2UuIEZ1bmN0aW9uYWwgbWVhc3VyZXMgdGhhdCBpbnZvbHZlIHJlYWwtbGlmZSBjb21wbGV4IHRhc2tzIGFsc28gYXBwZWFyIHRvIGNhcHR1cmUgZWFybHkgc3VidGxlIGNoYW5nZXMgaW4gcHJlLWRlbWVudGlhIHN1YmplY3RzIGFuZCBoYXZlIHRoZSBhZHZhbnRhZ2Ugb2YgcmVwcmVzZW50aW5nIGNsaW5pY2FsbHkgbWVhbmluZ2Z1bCBjaGFuZ2UuIFBhdGllbnQgcmVwb3J0ZWQgb3V0Y29tZXMgYW5kIG5vdmVsIENTRiBhbmQgaW1hZ2luZyBiaW9tYXJrZXJzIGhhdmUgYWxzbyBzaG93biBwcm9taXNlLiBNb3JlIHN0dWRpZXMgYXJlIG5lZWRlZCB0byB2YWxpZGF0ZSBhbGwgb2YgdGhlc2UgdGVzdHMgaW4gdGhlIHByZS1kZW1lbnRpYSBwb3B1bGF0aW9uLiBNYW55IG9mIHRoZW0gaGF2ZSBiZWVuIGluY29ycG9yYXRlZCBhcyBleHBsb3JhdG9yeSBtZWFzdXJlcyBpbiBvbmdvaW5nIG9yIHBsYW5uZWQgdHJpYWxzLjwvZGVzY3JpcHRpb24+CjwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T12:27:27Z","doi":"10.14283/JPAD.2015.55","relatedIdentifier":["IsPartOf:DOI:10.14283/jpad.2012.0","IsPartOf:ISSN:2274-5807"],"creator":["B. Vellas","R. Bateman","K. Blennow","G. Frisoni","K. Johnson","R. Katz","J. Langbaum","D. Marson","R. Sperling","A. Wessels","S. Salloway","R. Doody","P. Aisen","and Task Force Members"],"publisher":"The Journal of Prevention of Alzheimer’s Disease (JPAD)","title":["Endpoints for Pre-Dementia AD Trials: A Report from the EU/US/CTAD Task Force"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2015-04-07T12:46:53Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pwYWQuMjAxNS41NjwvaWRlbnRpZmllcj4KPGNyZWF0b3JzPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5SLkEuIFNwZXJsaW5nDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5SLkUuIEFtYXJpZ2xpbw08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Ry5BLiBNYXJzaGFsbA08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+RC5NLiBSZW50ejwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjwvY3JlYXRvcnM+Cjx0aXRsZXM+Cgk8dGl0bGU+RXN0YWJsaXNoaW5nIENsaW5pY2FsIFJlbGV2YW5jZSBpbiBQcmVjbGluaWNhbCBBbHpoZWltZXLigJlzIERpc2Vhc2U8L3RpdGxlPgo8L3RpdGxlcz4KPHB1Ymxpc2hlcj5UaGUgSm91cm5hbCBvZiBQcmV2ZW50aW9uIG9mIEFsemhlaW1lcuKAmXMgRGlzZWFzZSAoSlBBRCk8L3B1Ymxpc2hlcj4KPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CjxzdWJqZWN0cz4KCQkJPHN1YmplY3Q+UHJlY2xpbmljYWwgQWx6aGVpbWVy4oCZcyBkaXNlYXNlDTwvc3ViamVjdD48c3ViamVjdD5jb2duaXRpdmUgaW1wYWlybWVudA08L3N1YmplY3Q+PHN1YmplY3Q+ZnVuY3Rpb25hbCBpbXBhaXJtZW50DTwvc3ViamVjdD48c3ViamVjdD5jbGluaWNhbCByZWxldmFuY2U8L3N1YmplY3Q+Cjwvc3ViamVjdHM+CjxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPgo8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IlRleHQiPkpvdXJuYWxBcnRpY2xlIDwvcmVzb3VyY2VUeXBlPgo8dmVyc2lvbj4xPC92ZXJzaW9uPgo8cmVsYXRlZElkZW50aWZpZXJzPgo8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiPjEwLjE0MjgzL2pwYWQuMjAxMi4wPC9yZWxhdGVkSWRlbnRpZmllcj4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiI+MjI3NC01ODA3PC9yZWxhdGVkSWRlbnRpZmllcj4KPC9yZWxhdGVkSWRlbnRpZmllcnM+CjxkZXNjcmlwdGlvbnM+Cgk8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+U2Vuc2l0aXZlIG1lYXN1cmVzIG9mIGNvZ25pdGlvbiBhbmQgZnVuY3Rpb24gbWF5IHJlcHJlc2VudCB0aGUgbW9zdCBjbGluaWNhbGx5IHJlbGV2YW50IG1hcmtlcnMgb2YgZWFybHkgY2hhbmdlIGluIEFsemhlaW1lcuKAmXMgZGlzZWFzZS4gTmV3IGFuZCByZXZpc2VkIG1lYXN1cmVzLCBpbmNsdWRpbmcgc2VsZi0gYW5kIHBhcnRuZXIgc3ViamVjdGl2ZSByYXRpbmdzIGFuZCBwZXJmb3JtYW5jZS1iYXNlZCB0ZXN0cyBoYXZlIHNob3duIHByb21pc2UgaW4gaWRlbnRpZnlpbmcgaW5kaXZpZHVhbHMgaW4gdGhlIHByZWNsaW5pY2FsIHN0YWdlcyBvZiBkaXNlYXNlIHdobyBhcmUgbGlrZWx5IHRvIHByb2dyZXNzIHRvIG1pbGQgY29nbml0aXZlIGltcGFpcm1lbnQgb3IgQWx6aGVpbWVy4oCZcyBkZW1lbnRpYS4gTW9yZSByZXNlYXJjaCBpcyBuZWVkZWQgdG8gY29uZmlybSB0aGUgcmVhbC1saWZlIHJlbGV2YW5jZSBvZiB0aGVzZSB0ZXN0cyBhbmQgdGhlaXIgdXNlZnVsbmVzcyBpbiBjbGluaWNhbCB0cmlhbHMuPC9kZXNjcmlwdGlvbj4KPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T12:46:54Z","doi":"10.14283/JPAD.2015.56","relatedIdentifier":["IsPartOf:DOI:10.14283/jpad.2012.0","IsPartOf:ISSN:2274-5807"],"creator":["R.A. Sperling","R.E. Amariglio","G.A. Marshall","D.M. Rentz"],"publisher":"The Journal of Prevention of Alzheimer’s Disease (JPAD)","title":["Establishing Clinical Relevance in Preclinical Alzheimer’s Disease"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2015-04-08T12:44:25Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pwYWQuMjAxNS41NzwvaWRlbnRpZmllcj4KPGNyZWF0b3JzPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5MLiBGZW5nDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5NLi1TLiBDaG9uZw08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+Vy4tUy4gTGltDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5ULi1TLiBMZWUNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkUuLUguIEt1YQ08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+VC4tUC4gTmc8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPgo8dGl0bGVzPgoJPHRpdGxlPlRlYSBmb3IgQWx6aGVpbWVyIFByZXZlbnRpb248L3RpdGxlPgo8L3RpdGxlcz4KPHB1Ymxpc2hlcj5UaGUgSm91cm5hbCBvZiBQcmV2ZW50aW9uIG9mIEFsemhlaW1lcuKAmXMgRGlzZWFzZSAoSlBBRCk8L3B1Ymxpc2hlcj4KPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CjxzdWJqZWN0cz4KCQkJPHN1YmplY3Q+VGVhDTwvc3ViamVjdD48c3ViamVjdD5hZ2luZw08L3N1YmplY3Q+PHN1YmplY3Q+QWx6aGVpbWVy4oCZcyBkaXNlYXNlDTwvc3ViamVjdD48c3ViamVjdD5kZW1lbnRpYQ08L3N1YmplY3Q+PHN1YmplY3Q+Y29nbml0aXZlIGRlY2xpbmUNPC9zdWJqZWN0PjxzdWJqZWN0PnByZXZlbnRpb248L3N1YmplY3Q+Cjwvc3ViamVjdHM+CjxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPgo8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IlRleHQiPkpvdXJuYWxBcnRpY2xlIDwvcmVzb3VyY2VUeXBlPgo8dmVyc2lvbj4xPC92ZXJzaW9uPgo8cmVsYXRlZElkZW50aWZpZXJzPgo8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiPjEwLjE0MjgzL2pwYWQuMjAxMi4wPC9yZWxhdGVkSWRlbnRpZmllcj4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiI+MjI3NC01ODA3PC9yZWxhdGVkSWRlbnRpZmllcj4KPC9yZWxhdGVkSWRlbnRpZmllcnM+CjxkZXNjcmlwdGlvbnM+Cgk8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+VGhlIGF2YWlsYWJpbGl0eSBvZiBlbXBpcmljYWwgZGF0YSBmcm9tIGh1bWFuIHN0dWRpZXMgaW4gcmVjZW50IHllYXJzIGhhdmUgbGVuZCBjcmVkZW5jZSB0byB0aGUgb2xkIGF4aW9tYXRpYyB3aXNkb20gdGhhdCBoZWFsdGggYmVuZWZpdHMgb2YgdGVhIGRyaW5raW5nIGV4dGVuZCB0byB0aGUgYXJlYSBvZiBjb2duaXRpb24uIFNwZWNpZmljYWxseSwgdGhlcmUgaXMgaW5jcmVhc2luZyBpbnRlcmVzdCBhcyB0byB3aGV0aGVyIHRlYSBkcmlua2luZyBjYW4gZGVsYXkgb3IgZXZlbiBwcmV2ZW50IHRoZSBvbnNldCBvZiBBbHpoZWltZXLigJlzIGRpc2Vhc2UgKEFEKS4gRGF0YSBmcm9tIHNldmVyYWwgY3Jvc3Mtc2VjdGlvbmFsIHN0dWRpZXMgaGF2ZSBjb25zaXN0ZW50bHkgc2hvd24gdGhhdCB0ZWEgZHJpbmtpbmcgaXMgYXNzb2NpYXRlZCB3aXRoIGJldHRlciBwZXJmb3JtYW5jZSBvbiBjb2duaXRpdmUgdGVzdHMuIFRoaXMgYXNzb2NpYXRpb24gaXMgc3VwcG9ydGVkIGJ5IGxvbmdpdHVkaW5hbCBkYXRhIGZyb20gdGhlIFNpbmdhcG9yZSBMb25naXR1ZGluYWwgQWdpbmcgU3R1ZHksIHRoZSBDaGluZXNlIExvbmdpdHVkaW5hbCBIZWFsdGh5IExvbmdldml0eSBTdXJ2ZXkgYW5kIHRoZSBDYXJkaW92YXNjdWxhciBIZWFsdGggU3R1ZHkuIFRoZSBvbmx5IHR3byBwdWJsaXNoZWQgbG9uZ2l0dWRpbmFsIGFuYWx5c2VzIG9uIGNsaW5pY2FsIG91dGNvbWUgcmVwb3J0ZWQgY29uZmxpY3RpbmcgcmVzdWx0czogb25lIHN0dWR5IHJlcG9ydGVkIHRoYXQgbWlkLWxpZmUgdGVhIGRyaW5raW5nIHdhcyBub3QgYXNzb2NpYXRlZCB3aXRoIHJpc2sgcmVkdWN0aW9uIG9mIEFsemhlaW1lcuKAmXMgZGlzZWFzZSBpbiBsYXRlIGxpZmUgd2hpbGUgdGhlIG90aGVyIG9uZSBmb3VuZCB0aGF0IGdyZWVuIHRlYSBjb25zdW1wdGlvbiByZWR1Y2VkIHRoZSBpbmNpZGVuY2Ugb2YgZGVtZW50aWEgb3IgbWlsZCBjb2duaXRpdmUgaW1wYWlybWVudC4gVHdvIHNtYWxsIHRyaWFscyBmcm9tIEtvcmVhIGFuZCBKYXBhbiByZXBvcnRlZCBlbmNvdXJhZ2luZyBidXQgcHJlbGltaW5hcnkgcmVzdWx0cy4gV2hpbGUgdGhlIGV4aXN0aW5nIGV2aWRlbmNlIHByZWNsdWRlcyBhIGRlZmluaXRlIGNvbmNsdXNpb24gYXMgdG8gd2hldGhlciB0ZWEgZHJpbmtpbmcgY2FuIGJlIGFuIGVmZmVjdGl2ZSBhbmQgc2ltcGxlIGxpZmVzdHlsZSBwcmV2ZW50aXZlIG1lYXN1cmUgZm9yIEFELCBmdXJ0aGVyIHJlc2VhcmNoIGludm9sdmluZyBsb25nZXItdGVybSBsb25naXR1ZGluYWwgc3R1ZGllcyBhbmQgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFscyBpcyBjbGVhcmx5IHdhcnJhbnRlZCB0byBzaGVkIGxpZ2h0IG9uIHRoaXMgdG9waWMgb2YgaW1tZW5zZSBwdWJsaWMgaGVhbHRoIGludGVyZXN0LiBCaW9sb2dpY2FsIG1hcmtlcnMgb2YgdGVhIGNvbnN1bXB0aW9uIGFuZCBBbHpoZWltZXIgZGlzZWFzZXMgc2hvdWxkIGJlIGVtcGxveWVkIGluIGZ1dHVyZSByZXNlYXJjaCB0byBiZXR0ZXIgZGVsaW5lYXRlIHRoZSB1bmRlcmx5aW5nIG1lY2hhbmlzbXMgb2YgdGVhIGRyaW5raW5n4oCZcyBwcm90ZWN0aXZlIGVmZmVjdCBvbiBjb2duaXRpb24uPC9kZXNjcmlwdGlvbj4KPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-08T12:44:25Z","doi":"10.14283/JPAD.2015.57","relatedIdentifier":["IsPartOf:DOI:10.14283/jpad.2012.0","IsPartOf:ISSN:2274-5807"],"creator":["L. Feng","M.-S. Chong","W.-S. Lim","T.-S. Lee","E.-H. Kua","T.-P. Ng"],"publisher":"The Journal of Prevention of Alzheimer’s Disease (JPAD)","title":["Tea for Alzheimer Prevention"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2015-04-08T13:54:14Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pwYWQuMjAxNS41ODwvaWRlbnRpZmllcj4KPGNyZWF0b3JzPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5FLiBLYXNwZXINPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlMuIE9jaG1hbm4NPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPlcuIEhvZmZtYW5uDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5XLiBTY2huZWlkZXINPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkUuIENhdmVkbw08L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48Y3JlYXRvcj48Y3JlYXRvck5hbWU+SC4gSGFtcGVsDTwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjxjcmVhdG9yPjxjcmVhdG9yTmFtZT5TLiBUZWlwZWw8L2NyZWF0b3JOYW1lPjwvY3JlYXRvcj48L2NyZWF0b3JzPgo8dGl0bGVzPgoJPHRpdGxlPkNvZ25pdGl2ZSBSZWhhYmlsaXRhdGlvbiBpbiBBbHpoZWltZXLigJlzIERpc2Vhc2Ug4oCTIEEgQ29uY2VwdHVhbCBhbmQgTWV0aG9kb2xvZ2ljYWwgUmV2aWV3PC90aXRsZT4KPC90aXRsZXM+CjxwdWJsaXNoZXI+VGhlIEpvdXJuYWwgb2YgUHJldmVudGlvbiBvZiBBbHpoZWltZXLigJlzIERpc2Vhc2UgKEpQQUQpPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgo8c3ViamVjdHM+CgkJCTxzdWJqZWN0PkNvZ25pdGl2ZSByZWhhYmlsaXRhdGlvbg08L3N1YmplY3Q+PHN1YmplY3Q+Y29nbml0aXZlIHRyYWluaW5nDTwvc3ViamVjdD48c3ViamVjdD5kZW1lbnRpYQ08L3N1YmplY3Q+PHN1YmplY3Q+bWlsZCBjb2duaXRpdmUgaW1wYWlybWVudA08L3N1YmplY3Q+PHN1YmplY3Q+QWx6aGVpbWVy4oCZcyBkaXNlYXNlPC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5Kb3VybmFsQXJ0aWNsZSA8L3Jlc291cmNlVHlwZT4KPHZlcnNpb24+MTwvdmVyc2lvbj4KPHJlbGF0ZWRJZGVudGlmaWVycz4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IklzUGFydE9mIj4xMC4xNDI4My9qcGFkLjIwMTIuMDwvcmVsYXRlZElkZW50aWZpZXI+CjxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IklTU04iIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiPjIyNzQtNTgwNzwvcmVsYXRlZElkZW50aWZpZXI+CjwvcmVsYXRlZElkZW50aWZpZXJzPgo8ZGVzY3JpcHRpb25zPgoJPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPldpdGhpbiB0aGUgbGFzdCAyMCB5ZWFycywgc2V2ZXJhbCBzdGFuZGFyZGl6ZWQgY29nbml0aXZlIHRyYWluaW5ncyBoYXZlIGJlZW4gZGV2ZWxvcGVkIGFpbWluZyBhdCB0aGUgZGVsYXkgb2YgY29nbml0aXZlIGRlY2xpbmUgaW4gb2xkZXIgcGVvcGxlIHdobyBhcmUgYXQgcmlzayBvZiBBbHpoZWltZXLigJlzIERpc2Vhc2UgKEFEKSBvciBpbiBtaWxkIHN0YWdlcyBvZiBkZW1lbnRpYS4gVGhlIHRyYW5zZmVyIG9mIGNvZ25pdGl2ZSB0cmFpbmluZyBlZmZlY3RzIGludG8gYWN0aXZpdGllcyBvZiBkYWlseSBsaXZpbmcgd2FzIHZlcnkgbGltaXRlZCBpbiBtb3N0IHByZXZpb3VzIHN0dWRpZXMuIFRoZXJlZm9yZSwgbXVsdGltb2RhbCBDb2duaXRpdmUgUmVoYWJpbGl0YXRpb24gYXBwcm9hY2hlcyBoYXZlIGJlZW4gZGVzaWduZWQgdGhhdCBhaW0gdG8gaW1wcm92ZSB0aGUgYWN0aXZpdGllcyBvZiBkYWlseSBsaXZpbmcuIFRoZXNlIGFwcHJvYWNoZXMgYWxzbyBhdHRlbXB0IHRvIGludGVncmF0ZSB0aGUgcGF0aWVudOKAmXMgcHN5Y2hvcGF0aG9sb2dpY2FsIGFuZCBiZWhhdmlvcmFsIHN0YXR1cyBhcyB3ZWxsIGFzIHNvY2lhbCByZWxhdGlvbnNoaXBzIGludG8gdGhlIHRyZWF0bWVudCBwbGFuLiBDb250cmFyeSB0byBvdGhlciBhcHByb2FjaGVzLCBDUiBtYWlubHkgZm9jdXNlcyBvbiBjb21wZW5zYXRpb24gcmF0aGVyIHRoYW4gcmVzdG9yYXRpb24gb2YgaW1wYWlyZWQgZnVuY3Rpb25hbGl0eS4NCkluIHRoaXMgcmV2aWV3LCB3ZSBkZWZpbmUgQ1IgY29uY2VwdHVhbGx5LCBhbmQgZGVyaXZlIHNwZWNpZmljIGNyaXRlcmlhIHRvIGV2YWx1YXRlIGN1cnJlbnQgQ1IgYXBwcm9hY2hlcyBmb3IgaW5kaXZpZHVhbHMgd2l0aCBtaWxkIGNvZ25pdGl2ZSBpbXBhaXJtZW50IChNQ0kpIGFuZCBBRCBkZW1lbnRpYS4gSW4gYWRkaXRpb24sIHdlIHBlcmZvcm0gYSBjcml0aWNhbCwgbWV0aG9kaWNhbCBhbmFseXNpcyBvZiBhdmFpbGFibGUgQ1Igc3R1ZGllcywgcmV2aWV3aW5nIHRoZWlyIHNob3J0LSBhbmQgbG9uZy10ZXJtIHRyZWF0bWVudCBlZmZlY3RzLiANCkZpbmRpbmdzIHN1Z2dlc3QgdGhhdCBDUiBhcHByb2FjaGVzIGltcHJvdmUgbWVtb3J5IHBlcmZvcm1hbmNlIGFuZCBjb21wZXRlbmNlIG9mIGFjdGl2aXR5IG9mIGRhaWx5IGxpdmluZyAoQURMKSBpbiBtaWxkbHkgY29nbml0aXZlbHkgaW1wYWlyZWQgc3ViamVjdHMgKE1DSSksIHdoZW4gY29tcGVuc2F0b3J5LCBpbnRlZ3JhdGl2ZSwgYXMgd2VsbCBhcyBpbnRlcmFjdGl2ZSBlbGVtZW50cyBhbmQgZG9tYWluIHNwZWNpZmljaXR5IGFyZSB0YWtlbiBpbnRvIGFjY291bnQuIEludGVyYWN0aXZlIGFuZCBpbmRpdmlkdWFsIGFzcGVjdHMgYWxzbyBhcHBlYXIgdG8gYmUgcmVsZXZhbnQgdG8gc3VzdGFpbiBsb25nLXRlcm0gZWZmZWN0cy4gSW4gQUQgZGVtZW50aWEsIHNpbWlsYXIgcmVzdWx0cyBlbWVyZ2VkLCBhbHRob3VnaCB3aXRoIHNtYWxsZXIgZWZmZWN0IHNpemVzLiBUaGUgZWZmaWNhY3kgb2YgaW5kaXZpZHVhbGl6ZWQgQ1IgYXBwcm9hY2hlcyB3YXMgY29tcGFyYWJsZSB3aXRoIHRoZW9yeS1iYXNlZCwgbWFudWFsLWd1aWRlZCBjb25jZXB0cyBhcyBsb25nIGFzIHByb21vdGluZyBpbnRlcmFjdGlvbiB3YXMgcGFydCBvZiB0aGUgdHJlYXRtZW50LiANClNvIGZhciwgb25seSBmZXcgcmFuZG9taXplZCBjb250cm9sbGVkIHN0dWRpZXMgb2Ygc3VmZmljaWVudCBzYW1wbGUgc2l6ZSBhcmUgYXZhaWxhYmxlLiBGdXR1cmUgc3lzdGVtYXRpYyBlZmZpY2FjeSBzdHVkaWVzIG5lZWQgdG8gY29uc2lkZXIgcHJlY2lzZWx5IGRlZmluZWQgb3V0Y29tZSB2YXJpYWJsZXMuIFRoaXMgaXMgbmVjZXNzYXJ5IGJlZm9yZSBvbmUgY2FuIGRyYXcgY29uY2x1c2lvbnMgb2YgaG93IENSIGNhbiBiZSB1c2VkIGZvciBzZWNvbmRhcnkgcHJldmVudGlvbiBvZiBBRCBkZW1lbnRpYSBhcyB3ZWxsIGFzIEFEIHRyZWF0bWVudC48L2Rlc2NyaXB0aW9uPgo8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T13:54:14Z","doi":"10.14283/JPAD.2015.58","relatedIdentifier":["IsPartOf:DOI:10.14283/jpad.2012.0","IsPartOf:ISSN:2274-5807"],"creator":["E. Kasper","S. Ochmann","W. Hoffmann","W. Schneider","E. Cavedo","H. Hampel","S. Teipel"],"publisher":"The Journal of Prevention of Alzheimer’s Disease (JPAD)","title":["Cognitive Rehabilitation in Alzheimer’s Disease – A Conceptual and Methodological Review"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2015-04-08T14:17:03Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pmYS4yMDE1LjQ2PC9pZGVudGlmaWVyPgo8Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkwuIFJvZHLDrWd1ZXotTWHDsWFzPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PC9jcmVhdG9ycz4KPHRpdGxlcz4KCTx0aXRsZT5Vc2Ugb2YgYmlvbWFya2VyczwvdGl0bGU+CjwvdGl0bGVzPgo8cHVibGlzaGVyPlRoZSBKb3VybmFsIG9mIEZyYWlsdHkgYW5kIEFnaW5nIChKRkEpPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgo8c3ViamVjdHM+CgkJCTxzdWJqZWN0PkZyYWlsdHkNPC9zdWJqZWN0PjxzdWJqZWN0PmFnaW5nDTwvc3ViamVjdD48c3ViamVjdD5lbGRlcmx5DTwvc3ViamVjdD48c3ViamVjdD5zY3JlZW5pbmcNPC9zdWJqZWN0PjxzdWJqZWN0PmFzc2Vzc21lbnQ8L3N1YmplY3Q+Cjwvc3ViamVjdHM+CjxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPgo8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IlRleHQiPkpvdXJuYWxBcnRpY2xlIDwvcmVzb3VyY2VUeXBlPgo8dmVyc2lvbj4xPC92ZXJzaW9uPgo8cmVsYXRlZElkZW50aWZpZXJzPgo8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiPjEwLjE0MjgzL2pmYS4yMDEyLjA8L3JlbGF0ZWRJZGVudGlmaWVyPgo8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJJU1NOIiByZWxhdGlvblR5cGU9IklzUGFydE9mIj4yMjYwLTEzNDE8L3JlbGF0ZWRJZGVudGlmaWVyPgo8L3JlbGF0ZWRJZGVudGlmaWVycz4KPGRlc2NyaXB0aW9ucz4KCTxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5FeHBhbmRpbmcgdGhlIGNvbmNlcHQgb2YgZnJhaWx0eSB0byB0aGUgY2xpbmljYWwgc2V0dGluZ3MgaGFzIHJhaXNlZCB0aGUgY29uY2VybiBhYm91dCB0aGUgYWNjdXJhY3kgb2YgdGhlIGN1cnJlbnQgZGVmaW5pdGlvbnMgZm9yIGlkZW50aWZ5aW5nIGZyYWlsIGluZGl2aWR1YWxzIChub3QgcG9wdWxhdGlvbnMpLiBUaGUgdXN1YWwgdG9vbHMgdG8gYXNzZXNzIGZyYWlsdHkgc2hvdywgYW1vbmcgb3RoZXIgY2hhcmFjdGVyaXN0aWNzLCBhIGxvdyBzZW5zaXRpdml0eSBhbmQgYSBsb3cgUG9zaXRpdmUgUHJlZGljdGl2ZSBWYWx1ZS4gT25lIGFwcHJvYWNoIHRvIG92ZXJjb21lIHRoaXMgY2hhbGxlbmdlIGlzIHVzaW5nIGJpb2xvZ2ljYWwgYmlvbWFya2VycyB0byBpbXByb3ZlIHRob3NlIGNoYXJhY3RlcmlzdGljcywgbWFraW5nIGZlYXNpYmxlIGFuZCBhY2N1cmF0ZSB0aGUgYXNzZXNzbWVudCBvZiBmcmFpbHR5IGluIGNsaW5pY2FsIHNldHRpbmdzLiBNYW55IGJpb21hcmtlcnMgb2YgZnJhaWx0eSBoYXZlIGJlZW4gaWRlbnRpZmllZCBidXQgZmV3IG9mIHRoZW0gaGF2ZSBiZWVuIGFzc2Vzc2VkIGFzIGNsaW5pY2FsIG1hcmtlcnMgd2l0aCBjb250cm92ZXJzaWFsIHJlc3VsdHMuIFRha2luZyBpbnRvIGFjY291bnQgdGhhdCBmcmFpbHR5IGlzIGNhdXNlZCBieSB0aGUgZmFpbHVyZSBpbiBkaWZmZXJlbnQgc3lzdGVtcywgaXQgaXMgd29ydGh5IHRvIGNoZWNrIGlmIHRoZSBjb21iaW5hdGlvbiBvZiBzZXZlcmFsIG9mIHRoZXNlIGJpb21hcmtlcnMgY291bGQgYmUgb2YgaGVscC4gSW4gdGhpcyBlZmZvcnQsIHRoZSBFVS1mdW5kZWQgcHJvamVjdCBGUkFJTE9NSUMgaXMgdHJ5aW5nIHRvIGFzc2VzcyB0aGUgYWJpbGl0eSBvZiBkaWZmZXJlbnQgc2V0cyBvZiBiaW9tYXJrZXJzIGZvciBpbXByb3ZpbmcgdGhlIGFjY3VyYWN5IG9mIGNsYXNzaWNhbCBkZWZpbml0aW9ucyBpbiBkZXRlcm1pbmluZyB0aGUgcmlzaywgdGhlIGRpYWdub3NpcyBhbmQgdGhlIHByb2dub3NpcyBvZiBmcmFpbHR5LjwvZGVzY3JpcHRpb24+CjwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-08T14:17:03Z","doi":"10.14283/JFA.2015.46","relatedIdentifier":["IsPartOf:DOI:10.14283/jfa.2012.0","IsPartOf:ISSN:2260-1341"],"creator":["L. Rodríguez-Mañas"],"publisher":"The Journal of Frailty and Aging (JFA)","title":["Use of biomarkers"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2015-04-08T14:43:11Z","datacentre_symbol":"INIST.SERDI","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyIgPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE0MjgzL2pmYS4yMDE1LjQ3PC9pZGVudGlmaWVyPgo8Y3JlYXRvcnM+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkguLUouIERvbmcNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkUuIFdyZXNzbGUNPC9jcmVhdG9yTmFtZT48L2NyZWF0b3I+PGNyZWF0b3I+PGNyZWF0b3JOYW1lPkouIE1hcmN1c3NvbjwvY3JlYXRvck5hbWU+PC9jcmVhdG9yPjwvY3JlYXRvcnM+Cjx0aXRsZXM+Cgk8dGl0bGU+VU5BTFRFUkVEIElNQUdFIE9GIEhFQUxUSCBNQUlOVEVOQU5DRTogQU4gT0JTRVJWQVRJT04gIE9GIE5PTi1QQVJUSUNJUEFOVFMgSU4gQSBTV0VESVNIIENPSE9SVCBTVFVEWSAgT0YgODUgVE8gODYgWUVBUiBPTERTPC90aXRsZT4KPC90aXRsZXM+CjxwdWJsaXNoZXI+VGhlIEpvdXJuYWwgb2YgRnJhaWx0eSBhbmQgQWdpbmcgKEpGQSk8L3B1Ymxpc2hlcj4KPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CjxzdWJqZWN0cz4KCQkJPHN1YmplY3Q+ODUgeWVhciBvbGRzDTwvc3ViamVjdD48c3ViamVjdD5ub24tcGFydGljaXBhbnRzDTwvc3ViamVjdD48c3ViamVjdD5oZWFsdGgNPC9zdWJqZWN0PjxzdWJqZWN0Pm1vYmlsaXR5PC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ij5Kb3VybmFsQXJ0aWNsZSA8L3Jlc291cmNlVHlwZT4KPHZlcnNpb24+MTwvdmVyc2lvbj4KPHJlbGF0ZWRJZGVudGlmaWVycz4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IklzUGFydE9mIj4xMC4xNDI4My9qZmEuMjAxMi4wPC9yZWxhdGVkSWRlbnRpZmllcj4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiI+MjI2MC0xMzQxPC9yZWxhdGVkSWRlbnRpZmllcj4KPC9yZWxhdGVkSWRlbnRpZmllcnM+CjxkZXNjcmlwdGlvbnM+Cgk8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+QmFja2dyb3VuZDogU2VsZWN0aW9uIGJpYXMgaXMgb2Z0ZW4gaW5ldml0YWJsZSBpbiBlcGlkZW1pb2xvZ2ljIHN0dWRpZXMuIEl0IGlzIG5vdCBzdXJwcmlzaW5nIHRoYXQgc3R1ZHkgY29uY2x1c2lvbnMgYmFzZWQgb24gcGFydGljaXBhbnRz4oCZIGhlYWx0aCBzdGF0dXMgYXJlIGZyZXF1ZW50bHkgcXVlc3Rpb25lZC4gT2JqZWN0aXZlOiBUaGlzIHN0dWR5IGFpbWVkIHRvIGFzc2VzcyB3aGV0aGVyIHRoZSBub24tcGFydGljaXBhbnRzIGFmZmVjdGVkIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSBnZW5lcmFsIHBvcHVsYXRpb24gb2YgdGhlIHZlcnkgb2xkIHBlb3BsZS4gRGVzaWduLCBTZXR0aW5nIGFuZCBQYXJ0aWNpcGFudHM6IFByb3NwZWN0aXZlLCBjcm9zcy1zZWN0aW9uYWwgKE49NjUwLCBhZ2VkIDg1IHllYXJzIG9sZCkgYW5hbHlzaXMgYW5kIDEteWVhciBmb2xsb3ctdXAgKG49MjczKSwgaW4gTGlua8O2cGluZywgU3dlZGVuLiBNZWFzdXJlbWVudHM6IFdlIGFuYWx5c2VkIGRhdGEgb24gaGVhbHRoLXJlbGF0ZWQgZmFjdG9ycyBmcm9tIGEgcG9zdGFsIHF1ZXN0aW9ubmFpcmUsIGEgaG9tZSB2aXNpdCBhbmQgYSBjbGluaWMgdmlzaXQgYXQgYmFzZWxpbmUgYW5kIGF0IHRoZSAxLXllYXIgZm9sbG93LXVwLiBXZSBjYWxjdWxhdGVkIHRoZSBlZmZlY3Qgc2l6ZSB0byBldmFsdWF0ZSB0aGUgZGVncmVlIG9mIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIGdyb3Vwcy4gUmVzdWx0czogQSBncmVhdGVyIHByb3BvcnRpb24gb2Ygbm9uLXBhcnRpY2lwYW50cyByZXNpZGVkIGluIHNoZWx0ZXJlZCBhY2NvbW1vZGF0aW9uIG9yIG51cnNpbmcgaG9tZXMgKHBhcnRpY2lwYW50cyB2cyBub24tcmVzcG9uc2UgdnMgcmVmdXNhbCwgMTElIHZzIDIyJSB2cyA0MCwgUCZsdDswLjAwMSwgz4Y9MC4yNCkuIER1cmluZyB0aGUgaG9tZSB2aXNpdCBvciBjbGluaWMgdmlzaXQsIGEgaGlnaGVyIHByb3BvcnRpb24gb2YgZHJvcG91dHMgcmVwb3J0ZWQgbWlkLXNldmVyZSBwcm9ibGVtcyBpbiBFUS01RCBkb21haW5zIChtb2JpbGl0eSBhbmQgc2VsZi1jYXJlKSBhbmQgbGltaXRhdGlvbnMgaW4gcGVyc29uYWwgYWN0aXZpdGllcyBvZiBkYWlseSBsaXZpbmcsIGJ1dCB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBwYXJ0aWNpcGFudHMgYW5kIGRyb3BvdXRzIHdlcmUgdmVyeSBzbWFsbCAoz4YmbHQ7MC4yKS4gTm8gc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSB3YXMgZm91bmQgYmV0d2VlbiB0aGUgZ3JvdXBzIHdpdGggcmVnYXJkIHRvIGVtZXJnZW5jeSByb29tIHZpc2l0cyBvciBob3NwaXRhbCBhZG1pc3Npb25zLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgbW9yZSBwYXJ0aWNpcGFudHMgdGhhbiBkcm9wb3V0cyAoz4Y9MC4yMykgaGFkIG11bHRpbW9yYmlkaXRpZXMgKOKJpTIgY2hyb25pYyBkaXNlYXNlcykuIExpdmluZyBpbiBzaGVsdGVyZWQgYWNjb21tb2RhdGlvbiBvciBhIG51cnNpbmcgaG9tZSAob2RkcyByYXRpbyAoT1IpLCAyLjg7IDk1JSBjb25maWRlbmNlIGludGVydmFsIChDSSksIDEuNS01KSwgZmVtYWxlIGdlbmRlciAoT1IsIDEuODsgOTUlIENJLCAxLjEtMy4xKSBhbmQgcmVjZWl2aW5nIG1vcmUgaG9tZSB2aXNpdHMgaW4gcHJpbWFyeSBjYXJlIChPUiwgMS4wMzsgOTUlIENJLCAxLTEuMDYpIGNvbnRyaWJ1dGVkIHBvc2l0aXZlbHkgdG8gZHJvcCBvdXQgaW4gdGhlIGRhdGEgY29sbGVjdGlvbiBzdGFnZXMgb3ZlciB0aGUgc3R1ZHkgcGVyaW9kLiBDb25jbHVzaW9uOiBOb24tcGFydGljaXBhbnRzIHdlcmUgbm90IGNvbnNpZGVyZWQgdG8gYmUgYSBncm91cCB3aXRoIHdvcnNlIGhlYWx0aC4gTW9iaWxpdHkgcHJvYmxlbXMgbWF5IGluZmx1ZW5jZSB2ZXJ5IG9sZCBwZW9wbGUgd2hlbiBjb25zaWRlcmluZyBmdXJ0aGVyIHBhcnRpY2lwYXRpb24sIHdoaWNoIHRocmVhdGVucyBhdHRyaXRpb24uPC9kZXNjcmlwdGlvbj4KPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-08T14:43:11Z","doi":"10.14283/JFA.2015.47","relatedIdentifier":["IsPartOf:DOI:10.14283/jfa.2012.0","IsPartOf:ISSN:2260-1341"],"creator":["H.-J. Dong","E. Wressle","J. Marcusson"],"publisher":"The Journal of Frailty and Aging (JFA)","title":["UNALTERED IMAGE OF HEALTH MAINTENANCE: AN OBSERVATION  OF NON-PARTICIPANTS IN A SWEDISH COHORT STUDY  OF 85 TO 86 YEAR OLDS"],"publicationYear":"2015","resourceTypeGeneral":"Text"},{"minted":"2014-08-22T18:27:13Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuNTRQNjQ8L2lkZW50aWZpZXI+CiAgPGNyZWF0b3JzPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5HaWRvaW4sIENpbmR5PC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+Um9xdWVzLCBMaW9uZWw8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5Cb2l2aW4sIFRob21hczwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgPC9jcmVhdG9ycz4KICA8dGl0bGVzPgogICAgPHRpdGxlPkRhdGEgZnJvbTogTGlua2luZyBuaWNoZSB0aGVvcnkgdG8gZWNvbG9naWNhbCBpbXBhY3RzIG9mIHN1Y2Nlc3NmdWwgaW52YWRlcnM6IGluc2lnaHRzIGZyb20gcmVzb3VyY2UgZmx1Y3R1YXRpb24tc3BlY2lhbGlzdCBoZXJiaXZvcmUgaW50ZXJhY3Rpb25zPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkRyeWFkIERpZ2l0YWwgUmVwb3NpdG9yeTwvcHVibGlzaGVyPgogIDxwdWJsaWNhdGlvblllYXI+MjAxNDwvcHVibGljYXRpb25ZZWFyPgogIDxzdWJqZWN0cz4KICAgIDxzdWJqZWN0PkNvbW11bml0eSB0aGVvcnk8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5lY29sb2dpY2FsIHNwZWNpYWxpemF0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+aW50ZXJzcGVjaWZpYyBjb21wZXRpdGlvbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm1lY2hhbmlzdGljLXN0YXRpc3RpY2FsIG1vZGVsbGluZzwvc3ViamVjdD4KICAgIDxzdWJqZWN0PlNvdXRoZWFzdGVybiBGcmVuY2ggTWVkaXRlcnJhbmVhbiBiYXNpbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pk1lZ2FzdGlnbXVzIHNjaGltaXRzY2hla2k8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5NZWdhc3RpZ211cyBwaW5zYXBpbmlzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+Q2VkcnVzIGF0bGFudGljYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YVBhY2thZ2U8L3Jlc291cmNlVHlwZT4KICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllciBhbHRlcm5hdGVJZGVudGlmaWVyVHlwZT0iY2l0YXRpb24iPkdpZG9pbiBDLCBSb3F1ZXMgTCwgQm9pdmluIFQgKDIwMTQpIExpbmtpbmcgbmljaGUgdGhlb3J5IHRvIGVjb2xvZ2ljYWwgaW1wYWN0cyBvZiBzdWNjZXNzZnVsIGludmFkZXJzOiBpbnNpZ2h0cyBmcm9tIHJlc291cmNlIGZsdWN0dWF0aW9uLXNwZWNpYWxpc3QgaGVyYml2b3JlIGludGVyYWN0aW9ucy4gSm91cm5hbCBvZiBBbmltYWwgRWNvbG9neSA4NCgyKTogMzk2LTQwNi48L2FsdGVybmF0ZUlkZW50aWZpZXI+CiAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSGFzUGFydCIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuNTRQNjQvMTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJIYXNQYXJ0IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC41NFA2NC8yPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUmVmZXJlbmNlZEJ5IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuMTExMS8xMzY1LTI2NTYuMTIzMDM8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNSZWZlcmVuY2VkQnkiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIi8+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T20:06:30Z","doi":"10.5061/DRYAD.54P64","relatedIdentifier":["HasPart:DOI:10.5061/DRYAD.54P64/1","HasPart:DOI:10.5061/DRYAD.54P64/2","IsReferencedBy:DOI:10.1111/1365-2656.12303","IsReferencedBy:DOI:"],"creator":["Gidoin, Cindy","Roques, Lionel","Boivin, Thomas"],"publisher":"Dryad Digital Repository","title":["Data from: Linking niche theory to ecological impacts of successful invaders: insights from resource fluctuation-specialist herbivore interactions"],"publicationYear":"2014","resourceTypeGeneral":"Dataset"},{"minted":"2014-12-17T15:33:08Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuUDVWOEc8L2lkZW50aWZpZXI+CiAgPGNyZWF0b3JzPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5IYW1tLCBDaHJpc3RvcGhlciBBLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkZvcmR5Y2UsIEphbWVzIEEuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+RGF0YSBmcm9tOiBQYXR0ZXJucyBvZiBob3N0IHBsYW50IHV0aWxpemF0aW9uIGFuZCBkaXZlcnNpZmljYXRpb24gaW4gdGhlIGJydXNoLWZvb3RlZCBidXR0ZXJmbGllczwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTQ8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5jb21wYXJhdGl2ZSBtZXRob2RzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+cGh5bG9nZW5ldGljczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnR1cm5vdmVyPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+aGVyYml2b3J5PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+TnltcGhhbGlkYWU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5MZXBpZG9wdGVyYTwvc3ViamVjdD4KICAgIDxzdWJqZWN0PlBhbGlsaW9ub2lkZWE8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5QbGFudGFlPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhUGFja2FnZTwvcmVzb3VyY2VUeXBlPgogIDxhbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxhbHRlcm5hdGVJZGVudGlmaWVyIGFsdGVybmF0ZUlkZW50aWZpZXJUeXBlPSJjaXRhdGlvbiI+SGFtbSBDQSwgRm9yZHljZSBKQSAoMjAxNCkgRGF0YSBmcm9tOiBQYXR0ZXJucyBvZiBob3N0IHBsYW50IHV0aWxpemF0aW9uIGFuZCBkaXZlcnNpZmljYXRpb24gaW4gdGhlIGJydXNoLWZvb3RlZCBidXR0ZXJmbGllcy4gRXZvbHV0aW9uIDY5KDMpOiA1ODnigJM2MDEuPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogIDwvYWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgPHJlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9Ikhhc1BhcnQiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELlA1VjhHLzE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSGFzUGFydCIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuUDVWOEcvMjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJIYXNQYXJ0IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC5QNVY4Ry8zPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUmVmZXJlbmNlZEJ5IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuMTExMS9FVk8uMTI1OTM8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNSZWZlcmVuY2VkQnkiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIi8+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CjwvcmVzb3VyY2U+","updated":"2015-04-08T18:52:37Z","doi":"10.5061/DRYAD.P5V8G","relatedIdentifier":["HasPart:DOI:10.5061/DRYAD.P5V8G/1","HasPart:DOI:10.5061/DRYAD.P5V8G/2","HasPart:DOI:10.5061/DRYAD.P5V8G/3","IsReferencedBy:DOI:10.1111/EVO.12593","IsReferencedBy:DOI:"],"creator":["Hamm, Christopher A.","Fordyce, James A."],"publisher":"Dryad Digital Repository","title":["Data from: Patterns of host plant utilization and diversification in the brush-footed butterflies"],"publicationYear":"2014","resourceTypeGeneral":"Dataset"},{"minted":"2013-07-23T15:50:11Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuM0MxOTAvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkJydWNrZXIsIFJvYmVydCBNLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkJvcmRlbnN0ZWluLCBTZXRoIFIuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+c2Vxc19yZXBfc2V0X3RheF9hc3NpZ25tZW50czwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTM8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5ob2xvZ2Vub21lPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+c3ltYmlvc2lzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+ZXZvbHV0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+bWljcm9iaW9tZTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pmh5YnJpZCBsZXRoYWxpdHk8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5OYXNvbmlhIHZpdHJpcGVubmlzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+TmFzb25pYSBnaXJhdWx0aTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pk5hc29uaWEgbG9uZ2ljb3JuaXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5TYXJjb3BoYWdhIGJ1bGxhdGE8L3N1YmplY3Q+CiAgPC9zdWJqZWN0cz4KICA8ZGF0ZXM+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iQWNjZXB0ZWQiPjIwMTMtMDctMjM8L2RhdGU+CiAgPC9kYXRlcz4KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFGaWxlPC9yZXNvdXJjZVR5cGU+CiAgPHJlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUGFydE9mIiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC4zQzE5MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHNpemVzPgogICAgPHNpemU+MTA1ODY2IGJ5dGVzPC9zaXplPgogIDwvc2l6ZXM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CiAgPGRlc2NyaXB0aW9ucz4KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9Ik90aGVyIj5UaGUgcmVwcmVzZW50YXRpdmUgc2VxdWVuY2VzIGZvciBhbGwgc2FtcGxlczogaHlicmlkcywgbm9uLWh5YnJpZCBzcGVjaWVzLCBhbmQgUy4gYnVsbGF0YSBmbHkgaG9zdC4gT25seSBsYXJ2YWwgbWljcm9iZXMgcmVwcmVzZW50ZWQgZm9yIHRoZSBjb252ZW50aW9uYWwgcmVhcmluZyBjb25kaXRpb24uIEJhcmNvZGUgaWRlbnRpZmllcnMgZm91bmQgaW4gdGhlIHN1cHBsZW1lbnRhbCBzZWN0aW9uIG9ubGluZS48L2Rlc2NyaXB0aW9uPgogIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T11:55:32Z","doi":"10.5061/DRYAD.3C190/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.3C190"],"creator":["Brucker, Robert M.","Bordenstein, Seth R."],"publisher":"Dryad Digital Repository","title":["seqs_rep_set_tax_assignments"],"publicationYear":"2013","resourceTypeGeneral":"Dataset"},{"minted":"2015-03-16T14:31:34Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuRFQ3TUgvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkZvcnJlc3QsIEplc3NpY2EgUi5LLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlRob3JwLCBSb2JiaW4gVy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5LcmVtZW4sIENsYWlyZTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPldpbGxpYW1zLCBOZWFsIE0uPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+Rm9ycmVzdCwgSmVzc2ljYSBSLksuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+QmVlIHNwZWNpbWVuIGRhdGE8L3RpdGxlPgogIDwvdGl0bGVzPgogIDxwdWJsaXNoZXI+RHJ5YWQgRGlnaXRhbCBSZXBvc2l0b3J5PC9wdWJsaXNoZXI+CiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+YWdyb2Vjb3N5c3RlbXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5iZWVzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+YmlvZGl2ZXJzaXR5PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+ZWNvc3lzdGVtIGZ1bmN0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+ZW52aXJvbm1lbnRhbCBmaWx0ZXJpbmc8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5mdW5jdGlvbmFsIHRyYWl0czwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmxpZmUgaGlzdG9yeTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm9yZ2FuaWMgZmFybXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5wb2xsaW5hdG9yczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnNwZWNpZXMgY29tcG9zaXRpb248L3N1YmplY3Q+CiAgICA8c3ViamVjdD5DYWxpZm9ybmlhPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+VVNBPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+QXBvaWRlYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wODwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELkRUN01IPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT4zMTk0OTcgYnl0ZXM8L3NpemU+CiAgICA8c2l6ZT4zMzU3IGJ5dGVzPC9zaXplPgogIDwvc2l6ZXM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CiAgPGRlc2NyaXB0aW9ucz4KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9Ik90aGVyIj5QbGVhc2UgY29uc3VsdCB0aGUgUmVhZE1lIGZpbGUuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T19:32:23Z","doi":"10.5061/DRYAD.DT7MH/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.DT7MH"],"creator":["Forrest, Jessica R.K.","Thorp, Robbin W.","Kremen, Claire","Williams, Neal M.","Forrest, Jessica R.K."],"publisher":"Dryad Digital Repository","title":["Bee specimen data"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-03-16T14:31:37Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuRFQ3TUgvMjwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkZvcnJlc3QsIEplc3NpY2EgUi5LLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlRob3JwLCBSb2JiaW4gVy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5LcmVtZW4sIENsYWlyZTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPldpbGxpYW1zLCBOZWFsIE0uPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+TmVzdGluZyBoYWJpdGF0IGRhdGEgKHF1YWRyYXRzKTwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5hZ3JvZWNvc3lzdGVtczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmJlZXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5lY29zeXN0ZW0gZnVuY3Rpb248L3N1YmplY3Q+CiAgICA8c3ViamVjdD5lbnZpcm9ubWVudGFsIGZpbHRlcmluZzwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmZ1bmN0aW9uYWwgdHJhaXRzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+bGlmZSBoaXN0b3J5PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+b3JnYW5pYyBmYXJtczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnBvbGxpbmF0b3JzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+c3BlY2llcyBjb21wb3NpdGlvbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0PkNhbGlmb3JuaWE8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5VU0E8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5BcG9pZGVhPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkFjY2VwdGVkIj4yMDE1LTA0LTA4PC9kYXRlPgogIDwvZGF0ZXM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhRmlsZTwvcmVzb3VyY2VUeXBlPgogIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuRFQ3TUg8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgogIDxzaXplcz4KICAgIDxzaXplPjEyNDQxIGJ5dGVzPC9zaXplPgogIDwvc2l6ZXM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CiAgPGRlc2NyaXB0aW9ucz4KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9Ik90aGVyIj5QbGVhc2UgY29uc3VsdCB0aGUgUmVhZE1lIGZpbGUuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T19:32:36Z","doi":"10.5061/DRYAD.DT7MH/2","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.DT7MH"],"creator":["Forrest, Jessica R.K.","Thorp, Robbin W.","Kremen, Claire","Williams, Neal M."],"publisher":"Dryad Digital Repository","title":["Nesting habitat data (quadrats)"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-03-16T14:31:40Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuRFQ3TUgvMzwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkZvcnJlc3QsIEplc3NpY2EgUi5LLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlRob3JwLCBSb2JiaW4gVy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5LcmVtZW4sIENsYWlyZTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPldpbGxpYW1zLCBOZWFsIE0uPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+TmVzdGluZyBoYWJpdGF0IGRhdGEgKHRyYW5zZWN0cyk8L3RpdGxlPgogIDwvdGl0bGVzPgogIDxwdWJsaXNoZXI+RHJ5YWQgRGlnaXRhbCBSZXBvc2l0b3J5PC9wdWJsaXNoZXI+CiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+YWdyb2Vjb3N5c3RlbXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5iZWVzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+YmlvZGl2ZXJzaXR5PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+ZWNvc3lzdGVtIGZ1bmN0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+ZW52aXJvbm1lbnRhbCBmaWx0ZXJpbmc8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5mdW5jdGlvbmFsIHRyYWl0czwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmxpZmUgaGlzdG9yeTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm9yZ2FuaWMgZmFybXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5wb2xsaW5hdG9yczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnNwZWNpZXMgY29tcG9zaXRpb248L3N1YmplY3Q+CiAgICA8c3ViamVjdD5DYWxpZm9ybmlhPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+VVNBPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+QXBvaWRlYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wODwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELkRUN01IPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT4xNzMzIGJ5dGVzPC9zaXplPgogIDwvc2l6ZXM+CiAgPHJpZ2h0cz5odHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvPC9yaWdodHM+CiAgPGRlc2NyaXB0aW9ucz4KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9Ik90aGVyIj5QbGVhc2UgY29uc3VsdCB0aGUgUmVhZE1lIGZpbGUuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T19:32:49Z","doi":"10.5061/DRYAD.DT7MH/3","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.DT7MH"],"creator":["Forrest, Jessica R.K.","Thorp, Robbin W.","Kremen, Claire","Williams, Neal M."],"publisher":"Dryad Digital Repository","title":["Nesting habitat data (transects)"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-03-16T16:47:00Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuMDQwTVQvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlNteXRoLCBBc2hsZXkgUi48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5QaWVobGVyLCBNaWNoYWVsIEYuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+R3JhYm93c2tpLCBKb25hdGhhbiBILjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgPC9jcmVhdG9ycz4KICA8dGl0bGVzPgogICAgPHRpdGxlPlNteXRoIGV0IGFsIEpBUFBMIDIwMTQtMDA3NDE8L3RpdGxlPgogIDwvdGl0bGVzPgogIDxwdWJsaXNoZXI+RHJ5YWQgRGlnaXRhbCBSZXBvc2l0b3J5PC9wdWJsaXNoZXI+CiAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+ZGVuaXRyaWZpY2F0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+aGFiaXRhdCBjb250ZXh0PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+bnV0cmllbnQgY3ljbGluZzwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm95c3RlciByZWVmczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnJlc3RvcmF0aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+d2F0ZXIgcXVhbGl0eTwvc3ViamVjdD4KICAgIDxzdWJqZWN0PkNyYXNzb3N0cmVhIHZpcmdpbmljYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wODwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELjA0ME1UPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT42NDM5MyBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+U2VkaW1lbnQgZmx1eGVzLCBveXN0ZXIgcmVlZiBkZW5zaXR5IGFuZCBzaXplIGRpc3RyaWJ1dGlvbiwgd2F0ZXIgcXVhbGl0eSBwYXJhbWV0ZXJzIGFuZCBzdHVkeSBsb2NhdGlvbnMuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-08T19:43:37Z","doi":"10.5061/DRYAD.040MT/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.040MT"],"creator":["Smyth, Ashley R.","Piehler, Michael F.","Grabowski, Jonathan H."],"publisher":"Dryad Digital Repository","title":["Smyth et al JAPPL 2014-00741"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T01:28:34Z","datacentre_symbol":"CDL.DPLANET","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjYwNjgvRFAxNEM5MTdFMkEzRjM4PC9pZGVudGlmaWVyPgo8Y3JlYXRvcnM+CjxjcmVhdG9yPgo8Y3JlYXRvck5hbWU+RW5lcmd5IEluZm9ybWF0aW9uIEFkbWluaXN0cmF0aW9uPC9jcmVhdG9yTmFtZT4KPC9jcmVhdG9yPgo8L2NyZWF0b3JzPgo8dGl0bGVzPgo8dGl0bGU+VFJFTkQ6IEVuZXJneSBJbmZvcm1hdGlvbiBBZG1pbmlzdHJhdGlvbi4gT2lsIFByaWNlcywgRnV0dXJlczogQ3J1ZGUgT2lsIFByaWNlIChMaWdodCBTd2VldCBDcnVkZSksIDA0LzE5ODMgLSAwMi8yMDE1LiBEYXRhLVBsYW5ldOKEoiBTdGF0aXN0aWNhbCBEYXRhc2V0cyBieSBDb25xdWVzdCBTeXN0ZW1zLCBJbmMuIERhdGFzZXQtSUQ6ICAwMDQtMDA5LTAwMTwvdGl0bGU+CjwvdGl0bGVzPgo8cHVibGlzaGVyPkRhdGEtUGxhbmV04oSiIFN0YXRpc3RpY2FsIERhdGFzZXRzIGJ5IENvbnF1ZXN0IFN5c3RlbXMsIEluYy48L3B1Ymxpc2hlcj4KPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CjxzdWJqZWN0cz4KPHN1YmplY3Q+RnVlbCBQcmljZXM8L3N1YmplY3Q+CjxzdWJqZWN0PlByaWNlczwvc3ViamVjdD4KPHN1YmplY3Q+UGV0cm9sZXVtPC9zdWJqZWN0Pgo8c3ViamVjdD5DcnVkZSBPaWw8L3N1YmplY3Q+Cjwvc3ViamVjdHM+CjxsYW5ndWFnZT5lbmc8L2xhbmd1YWdlPgo8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9Ik90aGVyIj5EYXRhU2hlZXQ8L3Jlc291cmNlVHlwZT4KPHJlbGF0ZWRJZGVudGlmaWVycz4KPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IklzTmV3VmVyc2lvbk9mIj4xMC42MDY4L0RQMTRDOEZGMDY2NjAzMTwvcmVsYXRlZElkZW50aWZpZXI+CjwvcmVsYXRlZElkZW50aWZpZXJzPgo8dmVyc2lvbj43PC92ZXJzaW9uPgo8cmlnaHRzTGlzdD4KPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9ob21lcGFnZS5kYXRhLXBsYW5ldC5jb20vdGVybXMtdXNlIj5zdWJzY3JpcHRpb24gcmVzb3VyY2U8L3JpZ2h0cz4KPC9yaWdodHNMaXN0Pgo8ZGVzY3JpcHRpb25zPgo8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+RW5lcmd5IEluZm9ybWF0aW9uIEFkbWluaXN0cmF0aW9uLiBPaWwgUHJpY2VzLCBGdXR1cmVzOiBDcnVkZSBPaWwgUHJpY2UgKExpZ2h0IFN3ZWV0IENydWRlKSwgMDQvMTk4MyAtIDAyLzIwMTUuIERhdGEtUGxhbmV04oSiIFN0YXRpc3RpY2FsIERhdGFzZXRzIGJ5IENvbnF1ZXN0IFN5c3RlbXMsIEluYy4gRGF0YXNldC1JRDogIDAwNC0wMDktMDAxCgpEYXRhc2V0OiBTaG93cyB0aGUgZnV0dXJlcyBwcmljZSBvZiBhIGJhcnJlbCBvZiBsaWdodCBzd2VldCBjcnVkZSBvaWwgdW5kZXIgIkNvbnRyYWN0IDEiIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlIChOWU1FWCkuIENvbnRyYWN0IDEgY292ZXJzIG9pbCB0byBiZSBkZWxpdmVyZWQgaW4gdGhlIGZvbGxvd2luZyBtb250aC4gRWFjaCBjb250cmFjdCBleHBpcmVzIG9uIHRoZSB0aGlyZCBidXNpbmVzcyBkYXkgcHJpb3IgdG8gdGhlIDI1dGggY2FsZW5kYXIgZGF5IG9mIHRoZSBtb250aCBwcmVjZWRpbmcgdGhlIGRlbGl2ZXJ5IG1vbnRoLiAgQWZ0ZXIgYSBjb250cmFjdCBleHBpcmVzLCBDb250cmFjdCAxIGZvciB0aGUgcmVtYWluZGVyIG9mIHRoYXQgY2FsZW5kYXIgbW9udGggaXMgdGhlIHNlY29uZCBmb2xsb3dpbmcgbW9udGguIFRoZSBmdXR1cmVzIHByaWNlcyBzaG93biBhcmUgdGhlIG9mZmljaWFsIGRhaWx5IGNsb3NpbmcgcHJpY2VzIGF0IDI6MzAgcG0gZnJvbSB0aGUgTllNRVggdHJhZGluZyBmbG9vciBmb3IgYSBzcGVjaWZpYyBkZWxpdmVyeSBtb250aC4KUmVwb3J0cyB0aGUgZnV0dXJlcyBwcmljZSBvZiBhIGJhcnJlbCBvZiBsaWdodCBzd2VldCBDdXNoaW5nLCBPa2xhaG9tYSwgY3J1ZGUgb2lsIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlIChOWU1FWCksIGJ5IGRheSwgbW9udGgsIGFuZCB5ZWFyLCAxOTgzLWN1cnJlbnQuIFRoZSBOWU1FWCBmdXR1cmVzIHByaWNlIGZvciBsaWdodCBzd2VldCBjcnVkZSBvaWwgc2VydmVzIGFzIGEgYmVuY2htYXJrIGZvciBvdGhlciBncmFkZXMgb2YgY3J1ZGUgb2lsLiBMaWdodCBzd2VldCBjcnVkZSBvaWwgaXMgaGlnaC1xdWFsaXR5IG9pbCB3aXRoIGxvdyBzdWxmdXIgY29udGVudCwgaW5jbHVkaW5nIHNwZWNpZmljIGRvbWVzdGljIGNydWRlcyB3aXRoIDAuNDIlIHN1bGZ1ciBieSB3ZWlnaHQgb3IgbGVzcywgbm90IGxlc3MgdGhhbiAzNyBBUEkgZ3Jhdml0eSBub3IgbW9yZSB0aGFuIDQyIEFQSSBncmF2aXR5LCBhbmQgc3BlY2lmaWMgZm9yZWlnbiBjcnVkZXMgb2Ygbm90IGxlc3MgdGhhdCAzNCBub3IgbW9yZSB0aGFuIDQyIEFQSS4gQVBJIGdyYXZpdHkgcmVmZXJzIHRvIHRoZSBBbWVyaWNhbiBQZXRyb2xldW0gSW5zdGl0dXRl4oCZcyBpbnZlcnRlZCBzY2FsZSBmb3IgZGVub3RpbmcgdGhlIGxpZ2h0bmVzcyBvciBoZWF2aW5lc3Mgb2YgY3J1ZGUgb2lscyBhbmQgb3RoZXIgbGlxdWlkIGh5ZHJvY2FyYm9ucywgd2l0aCBoaWdoZXIgQVBJIGdyYXZpdHkgaW5kaWNhdGluZyBhIGxpZ2h0ZXIgY3J1ZGUgd2l0aCBoaWdoZXIgbWFya2V0IHZhbHVlLgpodHRwOi8vdG9udG8uZWlhLmRvZS5nb3YvZG5hdi9wZXQvcGV0X3ByaV9mdXRfczFfZC5odG0KCgpDYXRlZ29yeTogRW5lcmd5IFJlc291cmNlcyBhbmQgSW5kdXN0cmllcywgUHJpY2VzLCBDb25zdW1wdGlvbiwgYW5kIENvc3Qgb2YgTGl2aW5nCgpTdWJqZWN0OiBGdWVsIFByaWNlcywgUHJpY2VzLCBQZXRyb2xldW0sIENydWRlIE9pbAoKU291cmNlOiBFbmVyZ3kgSW5mb3JtYXRpb24gQWRtaW5pc3RyYXRpb24KVGhlIEVuZXJneSBJbmZvcm1hdGlvbiBBZG1pbmlzdHJhdGlvbiAoRUlBKSwgY3JlYXRlZCBieSBDb25ncmVzcyBpbiAxOTc3LCBpcyBhbiBpbmRlcGVuZGVudCBzdGF0aXN0aWNhbCBhbmQgYW5hbHl0aWNhbCBhZ2VuY3kgd2l0aGluIHRoZSBVbml0ZWQgU3RhdGVzIERlcGFydG1lbnQgb2YgRW5lcmd5LiBJdHMgbWlzc2lvbiBpcyB0byBwcm92aWRlIHBvbGljeS1pbmRlcGVuZGVudCBkYXRhLCBmb3JlY2FzdHMsIGFuZCBhbmFseXNlcyB0byBwcm9tb3RlIHNvdW5kIHBvbGljeSBtYWtpbmcsIGVmZmljaWVudCBtYXJrZXRzLCBhbmQgcHVibGljIHVuZGVyc3RhbmRpbmcgcmVnYXJkaW5nIGVuZXJneSBhbmQgaXRzIGludGVyYWN0aW9uIHdpdGggdGhlIGVjb25vbXkgYW5kIHRoZSBlbnZpcm9ubWVudC4KaHR0cDovL3d3dy5laWEuZG9lLmdvdi88L2Rlc2NyaXB0aW9uPgo8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T01:28:34Z","doi":"10.6068/DP14C917E2A3F38","relatedIdentifier":["IsNewVersionOf:DOI:10.6068/DP14C8FF0666031"],"creator":["Energy Information Administration"],"publisher":"Data-Planet™ Statistical Datasets by Conquest Systems, Inc.","title":["TREND: Energy Information Administration. Oil Prices, Futures: Crude Oil Price (Light Sweet Crude), 04/1983 - 02/2015. Data-Planet™ Statistical Datasets by Conquest Systems, Inc. Dataset-ID:  004-009-001"],"publicationYear":"2015","resourceTypeGeneral":"Other"},{"minted":"2015-04-07T14:14:23Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuODIzOUg8L2lkZW50aWZpZXI+CiAgPGNyZWF0b3JzPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5QZXRlcnNlbiwgUm9uYWxkIEguPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+SHVnaGVzLCBLYXJlbiBXLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgPC9jcmVhdG9ycz4KICA8dGl0bGVzPgogICAgPHRpdGxlPkRhdGEgZnJvbTogVHJhbnNhdGxhbnRpYyBkaXNqdW5jdGlvbnMgaW4gZmxlc2h5IGZ1bmdpIElJSTogR3ltbm9wdXMgY29uZmx1ZW5zPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkRyeWFkIERpZ2l0YWwgUmVwb3NpdG9yeTwvcHVibGlzaGVyPgogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgogIDxzdWJqZWN0cz4KICAgIDxzdWJqZWN0PkFsbG9wYXRyaWMgc3BlY2lhdGlvbjwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmJpb2dlb2dyYXBoeTwvc3ViamVjdD4KICAgIDxzdWJqZWN0PmRpc2p1bmN0IGRpc3RyaWJ1dGlvbnM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5waHlsb2dlbmV0aWMgc3BlY2llczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnNwZWNpZXMgZGVsaW5lYXRpb25zLjwvc3ViamVjdD4KICAgIDxzdWJqZWN0PkV1cm9wZTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pk5vcnRoIEFtZXJpY2E8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5HeW1ub3B1cyBjb25mbHVlbnMgc3Vic3AuIGNhbXBhbnVsYXRhPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+R3ltbm9wdXMgZW5lZmljb2xhPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhUGFja2FnZTwvcmVzb3VyY2VUeXBlPgogIDxhbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxhbHRlcm5hdGVJZGVudGlmaWVyIGFsdGVybmF0ZUlkZW50aWZpZXJUeXBlPSJjaXRhdGlvbiI+SHVnaGVzIEtXLCBQZXRlcnNlbiBSSCAoMjAxNSkgVHJhbnNhdGxhbnRpYyBkaXNqdW5jdGlvbnMgaW4gZmxlc2h5IGZ1bmdpIElJSTogR3ltbm9wdXMgY29uZmx1ZW5zLiBNeWNvS2V5cyA5OiAzNy02My48L2FsdGVybmF0ZUlkZW50aWZpZXI+CiAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSGFzUGFydCIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuODIzOUgvMTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJIYXNQYXJ0IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC44MjM5SC8yPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUmVmZXJlbmNlZEJ5IiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuMzg5Ny9NWUNPS0VZUy45LjQ3MDA8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T14:16:38Z","doi":"10.5061/DRYAD.8239H","relatedIdentifier":["HasPart:DOI:10.5061/DRYAD.8239H/1","HasPart:DOI:10.5061/DRYAD.8239H/2","IsReferencedBy:DOI:10.3897/MYCOKEYS.9.4700"],"creator":["Petersen, Ronald H.","Hughes, Karen W."],"publisher":"Dryad Digital Repository","title":["Data from: Transatlantic disjunctions in fleshy fungi III: Gymnopus confluens"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T14:14:27Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuODIzOUgvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlBldGVyc2VuLCBSb25hbGQgSC48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5IdWdoZXMsIEthcmVuIFcuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+R3ltbm9wdXMgY29uZmx1ZW5zIGFuZCBHeW1ub3B1cyBlbmVmaWNvbGEgSVRTIHNlcXVlbmNlczwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5BbGxvcGF0cmljIHNwZWNpYXRpb248L3N1YmplY3Q+CiAgICA8c3ViamVjdD5iaW9nZW9ncmFwaHk8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5kaXNqdW5jdCBkaXN0cmlidXRpb25zPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+cGh5bG9nZW5ldGljIHNwZWNpZXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5zcGVjaWVzIGRlbGluZWF0aW9ucy48L3N1YmplY3Q+CiAgICA8c3ViamVjdD5FdXJvcGU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5Ob3J0aCBBbWVyaWNhPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+R3ltbm9wdXMgY29uZmx1ZW5zIHN1YnNwLiBjYW1wYW51bGF0YTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pkd5bW5vcHVzIGVuZWZpY29sYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELjgyMzlIPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT40NzY2NyBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+QWxpZ25lZCBJVFMgc2VxdWVuY2UgZmlsZSB3aXRoIEd5bW5vcHVzIGVuZWZpY29sYSBhcyB0aGUgb3V0Z3JvdXAuICBOYW1lcyBhcmUgZ2l2ZW4gYXMgaGVyYmFyaXVtIGFjY2Vzc2lvbiBudW1iZXJzIGFuZCBjdWx0dXJlcyB3aXRoIHRoZSBjdWx0dXJlIGNvbGxlY3Rpb24gZGVzaWduYXRpb24uICBMb2NhdGlvbnMgYXJlIGFiYnJldmlhdGVkICBmb2xsb3dpbmcgdGhlIG5hbWUgKHNlZSBtYW51c2NyaXB0IGZvciBsb2NhdGlvbnMpLiAgVGhlIGZpbGUgaXMgYSBmYXN0YSBmaWxlLjwvZGVzY3JpcHRpb24+CiAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T14:16:02Z","doi":"10.5061/DRYAD.8239H/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.8239H"],"creator":["Petersen, Ronald H.","Hughes, Karen W."],"publisher":"Dryad Digital Repository","title":["Gymnopus confluens and Gymnopus eneficola ITS sequences"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T14:14:30Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuODIzOUgvMjwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlBldGVyc2VuLCBSb25hbGQgSC48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5IdWdoZXMsIEthcmVuIFcuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+R3ltbm9wdXMgY29uZmx1ZW5zIGFuZCBHLiBlbmVmaWNvbGEgY29uY2F0aW5hdGVkIElUUyBhbmQgTFNVIHNlcXVlbmNlczwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5BbGxvcGF0cmljIHNwZWNpYXRpb248L3N1YmplY3Q+CiAgICA8c3ViamVjdD5iaW9nZW9ncmFwaHk8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5kaXNqdW5jdCBkaXN0cmlidXRpb25zPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+cGh5bG9nZW5ldGljIHNwZWNpZXM8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5zcGVjaWVzIGRlbGluZWF0aW9ucy48L3N1YmplY3Q+CiAgICA8c3ViamVjdD5FdXJvcGU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5Ob3J0aCBBbWVyaWNhPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+R3ltbm9wdXMgY29uZmx1ZW5zIHN1YnNwLiBjYW1wYW51bGF0YTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pkd5bW5vcHVzIGVuZWZpY29sYTwvc3ViamVjdD4KICA8L3N1YmplY3RzPgogIDxkYXRlcz4KICAgIDxkYXRlIGRhdGVUeXBlPSJBY2NlcHRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iRGF0YXNldCI+RGF0YUZpbGU8L3Jlc291cmNlVHlwZT4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC41MDYxL0RSWUFELjgyMzlIPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICA8c2l6ZXM+CiAgICA8c2l6ZT41MzI4OSBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+R3ltbm9wdXMgY29uZmx1ZW5zIChmdW5naSkgY29uY2F0aW5hdGVkIElUUyArIDUnIHBhcnQgb2Ygcmlib3NvbWFsIGxhcmdlIHN1YnVuaXQgUk5BIHNlcXVlbmNlPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T14:16:36Z","doi":"10.5061/DRYAD.8239H/2","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.8239H"],"creator":["Petersen, Ronald H.","Hughes, Karen W."],"publisher":"Dryad Digital Repository","title":["Gymnopus confluens and G. eneficola concatinated ITS and LSU sequences"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T14:56:42Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuS1EwTjUvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRlV29vZHksIEplbm5pZmVyPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VHJld2luLCBIYXJyaWV0PC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VGF5bG9yLCBHYWlsPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+RGVXb29keSBQLiBuaWdyYSBtZXRhZGF0YTwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5CaW9tYXNzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+Y29tbW9uIGdhcmRlbiBleHBlcmltZW50PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+RXVyb3BlYW4gYmxhY2sgcG9wbGFyPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+bGVhZiBzaXplPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+bWljcm9zYXRlbGxpdGVzPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkFjY2VwdGVkIj4yMDE1LTA0LTA3PC9kYXRlPgogIDwvZGF0ZXM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhRmlsZTwvcmVzb3VyY2VUeXBlPgogIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuS1EwTjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgogIDxzaXplcz4KICAgIDxzaXplPjExMTUgYnl0ZXM8L3NpemU+CiAgICA8c2l6ZT4yNDMyMSBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+TWljcm9zYXRlbGxpdGUgZGF0YSBhc3NvY2lhdGVkIHdpdGggRGVXb29keSwgVHJld2luICZhbXA7IFRheWxvciwgR2VuZXRpYyBhbmQgbW9ycGhvbG9naWNhbCBkaWZmZXJlbnRpYXRpb24gaW4gUG9wdWx1cyBuaWdyYSBMLjogSXNvbGF0aW9uIGJ5IGNvbG9uaXphdGlvbiBvciBpc29sYXRpb24gYnkgYWRhcHRhdGlvbj88L2Rlc2NyaXB0aW9uPgogIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T14:57:17Z","doi":"10.5061/DRYAD.KQ0N5/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.KQ0N5"],"creator":["DeWoody, Jennifer","Trewin, Harriet","Taylor, Gail"],"publisher":"Dryad Digital Repository","title":["DeWoody P. nigra metadata"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T14:56:45Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuS1EwTjUvMjwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRlV29vZHksIEplbm5pZmVyPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VHJld2luLCBIYXJyaWV0PC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VGF5bG9yLCBHYWlsPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+RGVXb29keSBldCBhbCBQbmlncmEgbW9ycGhvbG9naWNhbCBkYXRhIERyeWFkPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkRyeWFkIERpZ2l0YWwgUmVwb3NpdG9yeTwvcHVibGlzaGVyPgogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgogIDxzdWJqZWN0cz4KICAgIDxzdWJqZWN0PkJpb21hc3M8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5jb21tb24gZ2FyZGVuIGV4cGVyaW1lbnQ8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5FdXJvcGVhbiBibGFjayBwb3BsYXI8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5sZWFmIHNpemU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5taWNyb3NhdGVsbGl0ZXM8L3N1YmplY3Q+CiAgPC9zdWJqZWN0cz4KICA8ZGF0ZXM+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iQWNjZXB0ZWQiPjIwMTUtMDQtMDc8L2RhdGU+CiAgPC9kYXRlcz4KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFGaWxlPC9yZXNvdXJjZVR5cGU+CiAgPHJlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUGFydE9mIiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC5LUTBONTwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHNpemVzPgogICAgPHNpemU+MjE2NTUyIGJ5dGVzPC9zaXplPgogICAgPHNpemU+MTExNSBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+TW9ycGhvbG9naWNhbCBkYXRhIGZyb20gY29tbW9uIGdhcmRlbiBleHBlcmltZW50IHVzZWQgaW4gRGVXb29keSwgVHJld2luICZhbXA7IFRheWxvciwgR2VuZXRpYyBhbmQgbW9ycGhvbG9naWNhbCBkaWZmZXJlbnRpYXRpb24gaW4gUG9wdWx1cyBuaWdyYSBMLjogSXNvbGF0aW9uIGJ5IGNvbG9uaXphdGlvbiBvciBpc29sYXRpb24gYnkgYWRhcHRhdGlvbj88L2Rlc2NyaXB0aW9uPgogIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T14:57:29Z","doi":"10.5061/DRYAD.KQ0N5/2","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.KQ0N5"],"creator":["DeWoody, Jennifer","Trewin, Harriet","Taylor, Gail"],"publisher":"Dryad Digital Repository","title":["DeWoody et al Pnigra morphological data Dryad"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T14:56:48Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuS1EwTjUvMzwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRlV29vZHksIEplbm5pZmVyPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VHJld2luLCBIYXJyaWV0PC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+VGF5bG9yLCBHYWlsPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+RGVXb29keSBldCBhbCBQbmlncmEgY2xpbWF0ZSBkYXRhIERyeWFkPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkRyeWFkIERpZ2l0YWwgUmVwb3NpdG9yeTwvcHVibGlzaGVyPgogIDxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgogIDxzdWJqZWN0cz4KICAgIDxzdWJqZWN0PkJpb21hc3M8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5jb21tb24gZ2FyZGVuIGV4cGVyaW1lbnQ8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5FdXJvcGVhbiBibGFjayBwb3BsYXI8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5sZWFmIHNpemU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5taWNyb3NhdGVsbGl0ZXM8L3N1YmplY3Q+CiAgPC9zdWJqZWN0cz4KICA8ZGF0ZXM+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iQWNjZXB0ZWQiPjIwMTUtMDQtMDc8L2RhdGU+CiAgPC9kYXRlcz4KICA8cmVzb3VyY2VUeXBlIHJlc291cmNlVHlwZUdlbmVyYWw9IkRhdGFzZXQiPkRhdGFGaWxlPC9yZXNvdXJjZVR5cGU+CiAgPHJlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzUGFydE9mIiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTA2MS9EUllBRC5LUTBONTwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHNpemVzPgogICAgPHNpemU+MTMwNiBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+V29ybGRDbGltIGNsaW1hdGUgZGF0YSBmb3IgUG9wdWx1cyBuaWdyYSBzYW1wbGluZyBzaXRlcywgcGx1cyB0aGUgZmlyc3QgdGhyZWUgZmFjdG9ycyByZXN1bHRpbmcgZnJvbSB0aGUgbXVsdGl2YXJpYXRlIGFuYWx5c2lzIG9mIHN1Y2guPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T14:57:41Z","doi":"10.5061/DRYAD.KQ0N5/3","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.KQ0N5"],"creator":["DeWoody, Jennifer","Trewin, Harriet","Taylor, Gail"],"publisher":"Dryad Digital Repository","title":["DeWoody et al Pnigra climate data Dryad"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T16:27:39Z","datacentre_symbol":"CDL.CULIS","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CiAgPGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNzkxNi9EODkzMFMzUTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRpZXRyaWNoLCBMYXJzPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+RWhybGljaCwgTG9ybmEgUy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5MYUdyYXNzYSwgVHJhY3kgSi48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5FYmJldHMtUmVlZCwgRGFuYTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkNhcnRlciwgQ2Fyb2w8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogIDwvY3JlYXRvcnM+CiAgPHRpdGxlcz4KICAgIDx0aXRsZT4KU3RydWN0dXJhbCBjb25zZXF1ZW5jZXMgb2YgY3ljbG9waGlsaW4gQSBiaW5kaW5nIG9uIG1hdHVyYXRpb25hbCByZWZvbGRpbmcgaW4gaHVtYW4gaW1tdW5vZGVmaWNpZW5jeSB2aXJ1cyB0eXBlIDEgY2Fwc2lkICAgICAgPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkFjYWRlbWljIENvbW1vbnMsIENvbHVtYmlhIFVuaXZlcnNpdHk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMDE8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5WaXJvbG9neTwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pk1lZGljaW5lPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDI8L2RhdGU+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iVXBkYXRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iVGV4dCIvPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+V2hpbGUgc2V2ZXJhbCBjZWxsdWxhciBwcm90ZWlucyBhcmUgaW5jb3Jwb3JhdGVkIGluIHRoZSBodW1hbiBpbW11bm9kZWZpY2llbmN5IHZpcnVzIHR5cGUgMSB2aXJpb24sIGN5Y2xvcGhpbGluIChDeVApIEEgaXMgdGhlIG9ubHkgb25lIHdob3NlIGFic2VuY2UgaGFzIGJlZW4gZGVtb25zdHJhdGVkIHRvIGltcGFpciBpbmZlY3Rpdml0eS4gSW5jb3Jwb3JhdGlvbiBvZiB0aGUgY3l0b3NvbGljIHByb3RlaW4gcmVzdWx0cyBmcm9tIGludGVyYWN0aW9uIHdpdGggYSBoaWdobHkgZXhwb3NlZCBQcm8tcmljaCBsb29wIGluIHRoZSBOLXRlcm1pbmFsIHJlZ2lvbiBvZiB0aGUgY2Fwc2lkIChDQSkgZG9tYWluIG9mIHRoZSBwcmVjdXJzb3IgcG9seXByb3RlaW4sIFByNTUoR2FnKS4gRXZlbiB3aGVuIHByZXZlbnRlZCBmcm9tIGludGVyYWN0aW5nIHdpdGggQ3lQIEEsIFByNTVHYWcgc3RpbGwgZm9ybXMgcGFydGljbGVzIHRoYXQgcHJvY2VlZCB0byBtYXR1cmUgaW50byBtb3JwaG9sb2dpY2FsbHkgd2lsZC10eXBlIHZpcmlvbnMsIHN1Z2dlc3RpbmcgdGhhdCBDeVAgQSBpbmZsdWVuY2VzIGEgcG9zdGFzc2VtYmx5IGV2ZW50LiBUaGUgbmF0dXJlIG9mIHRoaXMgQ3lQIEEgaW5mbHVlbmNlIGhhcyB5ZXQgdG8gYmUgZWx1Y2lkYXRlZC4gSGVyZSwgd2Ugc2hvdyB0aGF0IHdoaWxlIEN5UCBBIGJpbmRzIGJvdGggR2FnIGFuZCBtYXR1cmUgQ0EgcHJvdGVpbnMsIHRoZSB0d28gYmluZGluZyBpbnRlcmFjdGlvbnMgYXJlIGFjdHVhbGx5IGRpZmZlcmVudC4gVHJ5cHRvcGhhbiAxMjEgKFcxMjEpIGluIEN5UCBBIGRpc3Rpbmd1aXNoZWQgdGhlIHR3byBwcm90ZWluczogYSBwaGVueWxhbGFuaW5lIHN1YnN0aXR1dGlvbiAoVzEyMUYpIGltcGFpcmVkIGJpbmRpbmcgb2YgbWF0dXJlIENBIHByb3RlaW4gYnV0IG5vdCBvZiBHYWcuIFRoaXMgaW5kaWNhdGVzIHRoZSBvY2N1cnJlbmNlIG9mIGEgbWF0dXJhdGlvbi1kZXBlbmRlbnQgc3dpdGNoIGluIHRoZSBjb25mb3JtYXRpb24gb2YgdGhlIFByby1yaWNoIGxvb3AuIEEgc3RydWN0dXJhbCBjb25zZXF1ZW5jZSBvZiBHYWcgYmluZGluZyB0byBDeVAgQSB3YXMgdG8gYmxvY2sgdGhpcyBtYXR1cmF0aW9uYWwgcmVmb2xkaW5nLCByZXN1bHRpbmcgaW4gYSAyNC1rRGEgQ0EgcHJvdGVpbiByZXRhaW5pbmcgdGhlIGltbWF0dXJlIFByby1yaWNoIGxvb3AgY29uZm9ybWF0aW9uLiBVc2luZyB0cnlwc2luIGFzIGEgc3RydWN0dXJlIHByb2JlLCB3ZSBkZW1vbnN0cmF0ZSB0aGF0IHRoZSBjb25mb3JtYXRpb24gb2YgdGhlIEMtdGVybWluYWwgcmVnaW9uIGluIG1hdHVyZSBDQSBpcyBhbHNvIGEgcHJvZHVjdCBvZiBtYXR1cmF0aW9uYWwgcmVmb2xkaW5nLiBCaW5kaW5nIHRvIHdpbGQtdHlwZSBDeVAgQSBhbHRlcmVkIHRoaXMgY29uZm9ybWF0aW9uLCBhcyBpbmRpY2F0ZWQgYnkgYSByZWR1Y3Rpb24gaW4gdGhlIGFjY2Vzc2liaWxpdHkgb2YgQ3lzIHJlc2lkdWUocykgaW4gdGhlIHJlZ2lvbiB0byBjaGVtaWNhbCBtb2RpZmljYXRpb24uIEhlbmNlLCB0aGUgZW5kIHJlc3VsdCBvZiBiaW5kaW5nIHRvIEN5UCBBLCB3aGV0aGVyIHRoZSBQcm8tcmljaCBsb29wIGlzIGluIHRoZSBjb250ZXh0IG9mIEdhZyBvciBtYXR1cmUgQ0EgcHJvdGVpbiwgaXMgYSBzdHJ1Y3R1cmFsbHkgbW9kaWZpZWQgbWF0dXJlIENBIHByb3RlaW4uIFRoZSBwb3N0YXNzZW1ibHkgcm9sZSBvZiBDeVAgQSBtYXkgYmUgbWVkaWF0ZWQgdGhyb3VnaCB0aGVzZSBtb2RpZmllZCBtYXR1cmUgQ0EgcHJvdGVpbnMuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiI+MDAyMi01MzhYPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzVmFyaWFudEZvcm1PZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjExMjgvSlZJLjc1LjEwLjQ3MjEtNDczMy4yMDAxIDwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T16:28:12Z","doi":"10.7916/D8930S3Q","relatedIdentifier":["IsPartOf:ISSN:0022-538X","IsVariantFormOf:DOI:10.1128/JVI.75.10.4721-4733.2001 "],"creator":["Dietrich, Lars","Ehrlich, Lorna S.","LaGrassa, Tracy J.","Ebbets-Reed, Dana","Carter, Carol"],"publisher":"Academic Commons, Columbia University","title":["Structural consequences of cyclophilin A binding on maturational refolding in human immunodeficiency virus type 1 capsid"],"publicationYear":"2001","resourceTypeGeneral":"Text"},{"minted":"2015-04-07T16:32:56Z","datacentre_symbol":"CDL.CULIS","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CiAgPGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNzkxNi9EOEpNMjhLVzwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlByaWNlLVdoZWxhbiwgQWxleGEgTS48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5EaWV0cmljaCwgTGFyczwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPk5ld21hbiwgRGlhbm5lIEsuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICA8L2NyZWF0b3JzPgogIDx0aXRsZXM+CiAgICA8dGl0bGU+ClJldGhpbmtpbmcg4oCYc2Vjb25kYXJ54oCZIG1ldGFib2xpc206IHBoeXNpb2xvZ2ljYWwgcm9sZXMgZm9yIHBoZW5hemluZSBhbnRpYmlvdGljcyAgICAgIDwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5BY2FkZW1pYyBDb21tb25zLCBDb2x1bWJpYSBVbml2ZXJzaXR5PC9wdWJsaXNoZXI+CiAgPHB1YmxpY2F0aW9uWWVhcj4yMDA2PC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+TWljcm9iaW9sb2d5PC9zdWJqZWN0PgogICAgPHN1YmplY3Q+QmlvY2hlbWlzdHJ5PC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDI8L2RhdGU+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iVXBkYXRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iVGV4dCIvPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+TWljcm9vcmdhbmlzbXMgZXhpc3QgaW4gdGhlIGVudmlyb25tZW50IGFzIG11bHRpY2VsbHVsYXIgY29tbXVuaXRpZXMgdGhhdCBmYWNlIHRoZSBjaGFsbGVuZ2Ugb2Ygc3Vydml2aW5nIHVuZGVyIG51dHJpZW50bGltaXRlZCBjb25kaXRpb25zLiBDaGVtaWNhbCBjb21tdW5pY2F0aW9uIGlzIGFuIGVzc2VudGlhbCBwYXJ0IG9mIHRoZSB3YXkgaW4gd2hpY2ggdGhlc2UgcG9wdWxhdGlvbnMgY29vcmRpbmF0ZSB0aGVpciBiZWhhdmlvciwgYW5kIHRoZXJlIGhhcyBiZWVuIGFuIGV4cGxvc2lvbiBvZiB1bmRlcnN0YW5kaW5nIGluIHJlY2VudCB5ZWFycyByZWdhcmRpbmcgaG93IHRoaXMgaXMgYWNjb21wbGlzaGVkLiBNdWNoIGxlc3MsIGhvd2V2ZXIsIGlzIHVuZGVyc3Rvb2QgYWJvdXQgdGhlIHdheSB0aGVzZSBjb21tdW5pdGllcyBzdXN0YWluIHRoZWlyIG1ldGFib2xpc20uIEJhY3RlcmlhIG9mIHRoZSBnZW51cyBQc2V1ZG9tb25hcyBhcmUgdWJpcXVpdG91cywgYW5kIGFyZSBkaXN0aW5ndWlzaGVkIGJ5IHRoZWlyIHByb2R1Y3Rpb24gb2YgY29sb3JmdWwgc2Vjb25kYXJ5IG1ldGFib2xpdGVzIGNhbGxlZCBwaGVuYXppbmVzLiBJbiB0aGlzIGFydGljbGUsIHdlIHN1Z2dlc3QgdGhhdCBwaGVuYXppbmVzLCB3aGljaCBhcmUgcHJvZHVjZWQgdW5kZXIgY29uZGl0aW9ucyBvZiBoaWdoIGNlbGwgZGVuc2l0eSBhbmQgbnV0cmllbnQgbGltaXRhdGlvbiwgbWF5IGJlIGltcG9ydGFudCBmb3IgdGhlIHBlcnNpc3RlbmNlIG9mIHBzZXVkb21vbmFkcyBpbiB0aGUgZW52aXJvbm1lbnQuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiI+MTU1Mi00NDUwPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGlvblR5cGU9IklzVmFyaWFudEZvcm1PZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjEwMzgvbmNoZW1iaW83NjQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgo8L3Jlc291cmNlPg==","updated":"2015-04-07T16:32:59Z","doi":"10.7916/D8JM28KW","relatedIdentifier":["IsPartOf:ISSN:1552-4450","IsVariantFormOf:DOI:10.1038/nchembio764"],"creator":["Price-Whelan, Alexa M.","Dietrich, Lars","Newman, Dianne K."],"publisher":"Academic Commons, Columbia University","title":["Rethinking ‘secondary’ metabolism: physiological roles for phenazine antibiotics"],"publicationYear":"2006","resourceTypeGeneral":"Text"},{"minted":"2015-04-07T16:34:25Z","datacentre_symbol":"CDL.CULIS","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CiAgPGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNzkxNi9EOFQ0M1MwSDwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRpZXRyaWNoLCBMYXJzPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+T2tlZ2JlLCBDaGlud2Vpa2U8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5QcmljZS1XaGVsYW4sIEFsZXhhIE0uPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+U2FraHRhaCwgSGFzc2FuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+SHVudGVyLCBSeWFuIEMuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+TmV3bWFuLCBEaWFubmUgSy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogIDwvY3JlYXRvcnM+CiAgPHRpdGxlcz4KICAgIDx0aXRsZT4KQmFjdGVyaWFsIENvbW11bml0eSBNb3JwaG9nZW5lc2lzIElzIEludGltYXRlbHkgTGlua2VkIHRvIHRoZSBJbnRyYWNlbGx1bGFyIFJlZG94IFN0YXRlICAgICAgPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkFjYWRlbWljIENvbW1vbnMsIENvbHVtYmlhIFVuaXZlcnNpdHk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTM8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5NaWNyb2Jpb2xvZ3k8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5Nb2xlY3VsYXIgY2hlbWlzdHJ5PC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDI8L2RhdGU+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iVXBkYXRlZCI+MjAxNS0wNC0wNzwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iVGV4dCIvPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCI+TWFueSBtaWNyb2JpYWwgc3BlY2llcyBmb3JtIG11bHRpY2VsbHVsYXIgc3RydWN0dXJlcyBjb21wcmlzaW5nIGVsYWJvcmF0ZSB3cmlua2xlcyBhbmQgY29uY2VudHJpYyByaW5ncywgeWV0IHRoZSBydWxlcyBnb3Zlcm5pbmcgdGhlaXIgYXJjaGl0ZWN0dXJlIGFyZSBwb29ybHkgdW5kZXJzdG9vZC4gVGhlIG9wcG9ydHVuaXN0aWMgcGF0aG9nZW4gUHNldWRvbW9uYXMgYWVydWdpbm9zYSBwcm9kdWNlcyBwaGVuYXppbmVzLCBzbWFsbCBtb2xlY3VsZXMgdGhhdCBhY3QgYXMgYWx0ZXJuYXRlIGVsZWN0cm9uIGFjY2VwdG9ycyB0byBveHlnZW4gYW5kIG5pdHJhdGUgdG8gb3hpZGl6ZSB0aGUgaW50cmFjZWxsdWxhciByZWRveCBzdGF0ZSBhbmQgdGhhdCBpbmZsdWVuY2UgYmlvZmlsbSBtb3JwaG9nZW5lc2lzLiBIZXJlLCB3ZSBzaG93IHRoYXQgdGhlIGRlcHRoIG9jY3VwaWVkIGJ5IGNlbGxzIHdpdGhpbiBjb2xvbnkgYmlvZmlsbXMgY29ycmVsYXRlcyB3ZWxsIHdpdGggZWxlY3Ryb24gYWNjZXB0b3IgYXZhaWxhYmlsaXR5LiBQZXJ0dXJiYXRpb25zIGluIHRoZSBlbnZpcm9ubWVudGFsIHByb3Zpc2lvbiwgZW5kb2dlbm91cyBwcm9kdWN0aW9uLCBhbmQgdXRpbGl6YXRpb24gb2YgZWxlY3Ryb24gYWNjZXB0b3JzIGFmZmVjdCBjb2xvbnkgZGV2ZWxvcG1lbnQgaW4gYSBtYW5uZXIgY29uc2lzdGVudCB3aXRoIHJlZG94IGNvbnRyb2wuIEludHJhY2VsbHVsYXIgTkFESCBsZXZlbHMgcGVhayBiZWZvcmUgdGhlIGluZHVjdGlvbiBvZiBjb2xvbnkgd3JpbmtsaW5nLiBUaGVzZSByZXN1bHRzIHN1Z2dlc3QgdGhhdCByZWRveCBpbWJhbGFuY2UgaXMgYSBtYWpvciBmYWN0b3IgZHJpdmluZyB0aGUgbW9ycGhvZ2VuZXNpcyBvZiBQLiBhZXJ1Z2lub3NhIGJpb2ZpbG1zIGFuZCB0aGF0IHdyaW5rbGluZyBpdHNlbGYgaXMgYW4gYWRhcHRhdGlvbiB0aGF0IG1heGltaXplcyBveHlnZW4gYWNjZXNzaWJpbGl0eSBhbmQgdGhlcmVieSBzdXBwb3J0cyBtZXRhYm9saWMgaG9tZW9zdGFzaXMuIFRoaXMgdHlwZSBvZiByZWRveC1kcml2ZW4gbW9ycGhvbG9naWNhbCBjaGFuZ2UgaXMgcmVtaW5pc2NlbnQgb2YgZGV2ZWxvcG1lbnRhbCBwcm9jZXNzZXMgdGhhdCBvY2N1ciBpbiBtZXRhem9hbnMuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNQYXJ0T2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iSVNTTiI+IDQyMDMtNDIwNTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1ZhcmlhbnRGb3JtT2YiIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIj4xMC4xMTI4L0pCLjAyMjczLTEyPC9yZWxhdGVkSWRlbnRpZmllcj4KICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T16:34:27Z","doi":"10.7916/D8T43S0H","relatedIdentifier":["IsPartOf:ISSN: 4203-4205","IsVariantFormOf:DOI:10.1128/JB.02273-12"],"creator":["Dietrich, Lars","Okegbe, Chinweike","Price-Whelan, Alexa M.","Sakhtah, Hassan","Hunter, Ryan C.","Newman, Dianne K."],"publisher":"Academic Commons, Columbia University","title":["Bacterial Community Morphogenesis Is Intimately Linked to the Intracellular Redox State"],"publicationYear":"2013","resourceTypeGeneral":"Text"},{"minted":"2015-04-07T16:34:33Z","datacentre_symbol":"CDL.DRYAD","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIiB4bWxuczpkcnlhZD0iaHR0cDovL3B1cmwub3JnL2RyeWFkL3Rlcm1zLyIgeG1sbnM6ZGltPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6ZHNwYWNlPSJodHRwOi8vd3d3LmRzcGFjZS5vcmcveG1sbnMvZHNwYWNlL2RpbSIgeG1sbnM6bWV0cz0iaHR0cDovL3d3dy5sb2MuZ292L01FVFMvIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiBtZXRhZGF0YVZlcnNpb25OdW1iZXI9IjEiIGxhc3RNZXRhZGF0YVVwZGF0ZT0iMjAwNi0wNS0wNCIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMi4yIGh0dHA6Ly9zY2hlbWEuZGF0YWNpdGUub3JnL21ldGEva2VybmVsLTIuMi9tZXRhZGF0YS54c2QiPgogIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuNzBDMzQvMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlV5ZWRhLCBKb3NlZiBDLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkNhZXRhbm8sIERhbmllbCBTLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPlBlbm5lbGwsIE1hdHRoZXcgVy48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogIDwvY3JlYXRvcnM+CiAgPHRpdGxlcz4KICAgIDx0aXRsZT5PbmxpbmUgQXBwZW5kaWNlczwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5EcnlhZCBEaWdpdGFsIFJlcG9zaXRvcnk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5QaHlsb2dlbmV0aWMgY29tcGFyYXRpdmUgbWV0aG9kczwvc3ViamVjdD4KICAgIDxzdWJqZWN0PlByaW5jaXBhbCBjb21wb25lbnRzIGFuYWx5c2lzPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+QnJvd25pYW4gbW90aW9uPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+T3Juc3RlaW4tVWhsZW5iZWNrPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+RWFybHkgQnVyc3Q8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5NdWx0aXZhcmlhdGUgZXZvbHV0aW9uPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9IkFjY2VwdGVkIj4yMDE1LTA0LTA3PC9kYXRlPgogIDwvZGF0ZXM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ij5EYXRhRmlsZTwvcmVzb3VyY2VUeXBlPgogIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiPjEwLjUwNjEvRFJZQUQuNzBDMzQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogIDwvcmVsYXRlZElkZW50aWZpZXJzPgogIDxzaXplcz4KICAgIDxzaXplPjQ0NDg3MCBieXRlczwvc2l6ZT4KICA8L3NpemVzPgogIDxyaWdodHM+aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLzwvcmlnaHRzPgogIDxkZXNjcmlwdGlvbnM+CiAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJPdGhlciI+QXBwZW5kaXggc2hvd2luZyB0aGUgbWF0aGVtYXRpY2FsIGVxdWl2YWxlbmN5IGJldHdlZW4gT3Juc3RlaW4tVWhsZW5iZWNrIGFuZCBhY2NlbGVyYXRpbmcgY2hhbmdlIG1vZGVscywgYXMgd2VsbCBhcyBzdXBwbGVtZW50YXJ5IGZpZ3VyZXMuPC9kZXNjcmlwdGlvbj4KICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4=","updated":"2015-04-07T16:35:02Z","doi":"10.5061/DRYAD.70C34/1","relatedIdentifier":["IsPartOf:DOI:10.5061/DRYAD.70C34"],"creator":["Uyeda, Josef C.","Caetano, Daniel S.","Pennell, Matthew W."],"publisher":"Dryad Digital Repository","title":["Online Appendices"],"publicationYear":"2015","resourceTypeGeneral":"Dataset"},{"minted":"2015-04-07T16:35:59Z","datacentre_symbol":"CDL.CULIS","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CiAgPGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNzkxNi9EODJKNjlSMTwvaWRlbnRpZmllcj4KICA8Y3JlYXRvcnM+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPk11cnJheSwgVGhvbWFzIFMuPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+T2tlZ2JlLCBDaGlud2Vpa2U8L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5HYW8sIFl1YW48L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5LYXptaWVyY3phaywgQmFyYmFyYSBJLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPk1vdHRlcmxpbmksIFJvYmVydG88L2NyZWF0b3JOYW1lPgogICAgPC9jcmVhdG9yPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5UaGFvLCBTYW5keTwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgICA8Y3JlYXRvcj4KICAgICAgPGNyZWF0b3JOYW1lPkRpZXRyaWNoLCBMYXJzPC9jcmVhdG9yTmFtZT4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+QnJ1c2RhLCBFbWFudWVsYSBNLjwvY3JlYXRvck5hbWU+CiAgICA8L2NyZWF0b3I+CiAgPC9jcmVhdG9ycz4KICA8dGl0bGVzPgogICAgPHRpdGxlPgpUaGUgQ2FyYm9uIE1vbm94aWRlIFJlbGVhc2luZyBNb2xlY3VsZSBDT1JNLTIgQXR0ZW51YXRlcyBQc2V1ZG9tb25hcyBhZXJ1Z2lub3NhIEJpb2ZpbG0gRm9ybWF0aW9uICAgICAgPC90aXRsZT4KICA8L3RpdGxlcz4KICA8cHVibGlzaGVyPkFjYWRlbWljIENvbW1vbnMsIENvbHVtYmlhIFVuaXZlcnNpdHk8L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTIgPC9wdWJsaWNhdGlvblllYXI+CiAgPHN1YmplY3RzPgogICAgPHN1YmplY3Q+TWVkaWNpbmU8L3N1YmplY3Q+CiAgICA8c3ViamVjdD5NaWNyb2Jpb2xvZ3k8L3N1YmplY3Q+CiAgPC9zdWJqZWN0cz4KICA8ZGF0ZXM+CiAgICA8ZGF0ZSBkYXRlVHlwZT0iQ3JlYXRlZCI+MjAxNS0wNC0wMjwvZGF0ZT4KICAgIDxkYXRlIGRhdGVUeXBlPSJVcGRhdGVkIj4yMDE1LTA0LTA3PC9kYXRlPgogIDwvZGF0ZXM+CiAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJUZXh0Ii8+CiAgPGRlc2NyaXB0aW9ucz4KICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0Ij5DaHJvbmljIGluZmVjdGlvbnMgcmVzdWx0aW5nIGZyb20gYmlvZmlsbSBmb3JtYXRpb24gYXJlIGRpZmZpY3VsdCB0byBlcmFkaWNhdGUgd2l0aCBjdXJyZW50IGFudGltaWNyb2JpYWwgYWdlbnRzIGFuZCBjb25zZXF1ZW50bHkgbmV3IHRoZXJhcGllcyBhcmUgbmVlZGVkLiBUaGlzIHdvcmsgZGVtb25zdHJhdGVzIHRoYXQgdGhlIGNhcmJvbiBtb25veGlkZS1yZWxlYXNpbmcgbW9sZWN1bGUgQ09STS0yLCBwcmV2aW91c2x5IHNob3duIHRvIGtpbGwgcGxhbmt0b25pYyBiYWN0ZXJpYSwgYWxzbyBhdHRlbnVhdGVzIHN1cmZhY2UtYXNzb2NpYXRlZCBncm93dGggb2YgdGhlIEdyYW0tbmVnYXRpdmUgcGF0aG9nZW4gUHNldWRvbW9uYXMgYWVydWdpbm9zYSBieSBib3RoIHByZXZlbnRpbmcgYmlvZmlsbSBtYXR1cmF0aW9uIGFuZCBraWxsaW5nIGJhY3RlcmlhIHdpdGhpbiB0aGUgZXN0YWJsaXNoZWQgYmlvZmlsbS4gQ09STS0yIHRyZWF0bWVudCBoYXMgYW4gYWRkaXRpdmUgZWZmZWN0IHdoZW4gY29tYmluZWQgd2l0aCB0b2JyYW15Y2luLCBhIGRydWcgY29tbW9ubHkgdXNlZCB0byB0cmVhdCBQLiBhZXJ1Z2lub3NhIGx1bmcgaW5mZWN0aW9ucy4gQ09STS0yIGluaGliaXRlZCBiaW9maWxtIGZvcm1hdGlvbiBhbmQgcGxhbmt0b25pYyBncm93dGggb2YgdGhlIG1ham9yaXR5IG9mIGNsaW5pY2FsIFAuIGFlcnVnaW5vc2EgaXNvbGF0ZXMgdGVzdGVkLCBmb3IgYm90aCBtdWNvaWQgYW5kIG5vbi1tdWNvaWQgc3RyYWlucy4gV2hpbGUgQ09STS0yIHRyZWF0bWVudCBpbmNyZWFzZWQgdGhlIHByb2R1Y3Rpb24gb2YgcmVhY3RpdmUgb3h5Z2VuIHNwZWNpZXMgYnkgUC4gYWVydWdpbm9zYSBiaW9maWxtcywgdGhpcyBpbmNyZWFzZSBkaWQgbm90IGNvcnJlbGF0ZSB3aXRoIGJhY3RlcmlhbCBkZWF0aC4gVGhlc2UgZGF0YSBkZW1vbnN0cmF0ZSB0aGF0IENPLVJNcyBwb3NzZXNzIHBvdGVudGlhbCBub3ZlbCB0aGVyYXBldXRpYyBwcm9wZXJ0aWVzIGFnYWluc3QgYSBzdWJzZXQgb2YgUC4gYWVydWdpbm9zYSBiaW9maWxtIHJlbGF0ZWQgaW5mZWN0aW9ucy48L2Rlc2NyaXB0aW9uPgogIDwvZGVzY3JpcHRpb25zPgogIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRpb25UeXBlPSJJc1BhcnRPZiIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJJU1NOIj4xOTMyLTYyMDM8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNWYXJpYW50Rm9ybU9mIiByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSI+MTAuMTM3MS9qb3VybmFsLnBvbmUuMDAzNTQ5OTwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T16:36:01Z","doi":"10.7916/D82J69R1","relatedIdentifier":["IsPartOf:ISSN:1932-6203","IsVariantFormOf:DOI:10.1371/journal.pone.0035499"],"creator":["Murray, Thomas S.","Okegbe, Chinweike","Gao, Yuan","Kazmierczak, Barbara I.","Motterlini, Roberto","Thao, Sandy","Dietrich, Lars","Brusda, Emanuela M."],"publisher":"Academic Commons, Columbia University","title":["The Carbon Monoxide Releasing Molecule CORM-2 Attenuates Pseudomonas aeruginosa Biofilm Formation"],"publicationYear":"2012","resourceTypeGeneral":"Text"},{"minted":"2015-04-07T18:38:27Z","datacentre_symbol":"CDL.DPLANET","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CjxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjYwNjgvRFAxNEM5NTJEMDVEMzYwPC9pZGVudGlmaWVyPgo8Y3JlYXRvcnM+CjxjcmVhdG9yPgo8Y3JlYXRvck5hbWU+RmVkZXJhbCBGaW5hbmNpYWwgSW5zdGl0dXRpb25zIEV4YW1pbmF0aW9uIENvdW5jaWw8L2NyZWF0b3JOYW1lPgo8L2NyZWF0b3I+CjwvY3JlYXRvcnM+Cjx0aXRsZXM+Cjx0aXRsZT5SQU5LSU5HOiBGZWRlcmFsIEZpbmFuY2lhbCBJbnN0aXR1dGlvbnMgRXhhbWluYXRpb24gQ291bmNpbC4gSG9tZSBNb3J0Z2FnZSBMb2FuIEFwcGxpY2F0aW9uczogUmVhc29uIGZvciBEZW5pYWwtQ3JlZGl0IEhpc3RvcnkgfCBTdGF0ZTogTWFpbmUgfCBJRDogWFhYIHwgTGVuZGVyOiBBTEwgTEVOREVSUyB8IE1vcnRnYWdlIFB1cnBvc2U6IEhvbWUgUHVyY2hhc2UgfCBHZW5kZXI6IE1hbGUsIEZlbWFsZSB8IFJhY2U6IEFsbCBSYWNlcywgMjAxMy4gRGF0YS1QbGFuZXTihKIgU3RhdGlzdGljYWwgRGF0YXNldHMgYnkgQ29ucXVlc3QgU3lzdGVtcywgSW5jLiBEYXRhc2V0LUlEOiAgMDM4LTAwMS0wMjA8L3RpdGxlPgo8L3RpdGxlcz4KPHB1Ymxpc2hlcj5EYXRhLVBsYW5ldOKEoiBTdGF0aXN0aWNhbCBEYXRhc2V0cyBieSBDb25xdWVzdCBTeXN0ZW1zLCBJbmMuPC9wdWJsaXNoZXI+CjxwdWJsaWNhdGlvblllYXI+MjAxNTwvcHVibGljYXRpb25ZZWFyPgo8c3ViamVjdHM+CjxzdWJqZWN0Pk1vcnRnYWdlIExvYW5zPC9zdWJqZWN0Pgo8c3ViamVjdD5Ib21lIE1vcnRnYWdlczwvc3ViamVjdD4KPHN1YmplY3Q+Q3JlZGl0PC9zdWJqZWN0Pgo8L3N1YmplY3RzPgo8bGFuZ3VhZ2U+ZW5nPC9sYW5ndWFnZT4KPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJPdGhlciI+RGF0YVNoZWV0PC9yZXNvdXJjZVR5cGU+CjxyZWxhdGVkSWRlbnRpZmllcnM+CjxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJJc05ld1ZlcnNpb25PZiI+MTAuNjA2OC9EUDE0Qzk1MkM3RDYyNTk8L3JlbGF0ZWRJZGVudGlmaWVyPgo8L3JlbGF0ZWRJZGVudGlmaWVycz4KPHZlcnNpb24+MjwvdmVyc2lvbj4KPHJpZ2h0c0xpc3Q+CjxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vaG9tZXBhZ2UuZGF0YS1wbGFuZXQuY29tL3Rlcm1zLXVzZSI+c3Vic2NyaXB0aW9uIHJlc291cmNlPC9yaWdodHM+CjwvcmlnaHRzTGlzdD4KPGRlc2NyaXB0aW9ucz4KPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPkZlZGVyYWwgRmluYW5jaWFsIEluc3RpdHV0aW9ucyBFeGFtaW5hdGlvbiBDb3VuY2lsLiBIb21lIE1vcnRnYWdlIExvYW4gQXBwbGljYXRpb25zOiBSZWFzb24gZm9yIERlbmlhbC1DcmVkaXQgSGlzdG9yeSB8IFN0YXRlOiBNYWluZSB8IElEOiBYWFggfCBMZW5kZXI6IEFMTCBMRU5ERVJTIHwgTW9ydGdhZ2UgUHVycG9zZTogSG9tZSBQdXJjaGFzZSB8IEdlbmRlcjogTWFsZSwgRmVtYWxlIHwgUmFjZTogQWxsIFJhY2VzLCAyMDEzLiBEYXRhLVBsYW5ldOKEoiBTdGF0aXN0aWNhbCBEYXRhc2V0cyBieSBDb25xdWVzdCBTeXN0ZW1zLCBJbmMuIERhdGFzZXQtSUQ6ICAwMzgtMDAxLTAyMAoKRGF0YXNldDogTnVtYmVyIG9mIG1vcnRnYWdlIGxvYW4gYXBwbGljYXRpb25zIGRlbmllZCBiZWNhdXNlIHRoZSBib3Jyb3dlcidzIGNyZWRpdCBoaXN0b3J5IGRpZCBub3QgbWVldCB0aGUgbGVuZGVyJ3MgcmVxdWlyZW1lbnRzLgpQcm92aWRlcyBkYXRhIG9uIGhvbWUgbW9ydGdhZ2UgbG9hbiBhcHBsaWNhdGlvbnMgYW5kIG91dGNvbWVzLCBzaG93biBieSBkZW1vZ3JhcGhpYyBjaGFyYWN0ZXJpc3RpY3Mgb2YgYm9ycm93ZXI7IGxvYW4gcHVycG9zZSBhbmQgdHlwZTsgcHJvcGVydHkgdHlwZSAoMS0gdG8gNC1mYW1pbHksIG11bHRpZmFtaWx5LCBvciBtYW51ZmFjdHVyZWQgaG91c2luZyk7IGxvYW4gYW1vdW50OyByZWFzb24gZm9yIGRlbmlhbDsgcHJvcGVydHkgbG9jYXRpb24gKG1ldHJvcG9saXRhbiBzdGF0aXN0aWNhbCBhcmVhIFtNU0FdLCBzdGF0ZSwgY291bnR5LCBhbmQgY2Vuc3VzIHRyYWN0KTsgYW5kIGluZGl2aWR1YWwgbGVuZGVyLiBUaGUgY29sbGVjdGlvbiBvZiB0aGlzIGRhdGEgZnJvbSBkZXBvc2l0b3J5IGFuZCBub25kZXBvc2l0b3J5IGxlbmRlcnMgaXMgYXV0aG9yaXplZCB1bmRlciB0aGUgSG9tZSBNb3J0Z2FnZSBEaXNjbG9zdXJlIEFjdCAoSE1EQSkgb2YgMTk3NSwgYW5kIHdhcyBpbXBsZW1lbnRlZCBieSB0aGUgRmVkZXJhbCBSZXNlcnZlIEJvYXJkJ3MgUmVndWxhdGlvbiBDLiBPbiBKdWx5IDIxLCAyMDExLCB0aGUgcnVsZS13cml0aW5nIGF1dGhvcml0eSBvZiBSZWd1bGF0aW9uIEMgd2FzIHRyYW5zZmVycmVkIHRvIHRoZSBDb25zdW1lciBGaW5hbmNpYWwgUHJvdGVjdGlvbiBCdXJlYXUgKENGUEIpLiBUaGUgZGF0YXNldCBjb3ZlcnMgbG9hbnMgZm9yIGhvbWUgcHVyY2hhc2UsIGhvbWUgaW1wcm92ZW1lbnQsIGFuZCByZWZpbmFuY2luZy4gQW5udWFsIGRpZmZlcmVuY2VzIGluIHJlcG9ydGluZyByZXF1aXJlbWVudHMgbWF5IGltcGFjdCBkYXRhIGNvbXBhcmFiaWxpdHkgYW5kIGFyZSBkZXRhaWxlZCBpbiB0aGUg4oCcSE1EQSBBZ2dyZWdhdGUgYW5kIERpc2Nsb3N1cmUgUmVwb3J0c+KAnSBhdmFpbGFibGUgYXQgaHR0cDovL3d3dy5mZmllYy5nb3YvaG1kYWFkd2VicmVwb3J0L2Fib3V0aG1kYS5odG0gLiBSZXBvcnRpbmcgaW5zdGl0dXRpb25zIGluY2x1ZGUgYmFua3MsIHNhdmluZ3MgYXNzb2NpYXRpb25zLCBjcmVkaXQgdW5pb25zLCBhbmQgbW9ydGdhZ2UgY29tcGFuaWVzLiBGb3IgdGhlIG1vc3QgcmVjZW50IGRhdGEgcmVsZWFzZSAoMjAxMSksIG5vbmRlcG9zaXRvcnkgaW5zdGl0dXRpb25zIHdpdGggYXNzZXRzIG9mICQxMCBtaWxsaW9uIG9yIGxlc3MsIG9yIHdobyBvcmlnaW5hdGVkIGZld2VyIHRoYW4gMTAwIGhvbWUgcHVyY2hhc2UgbG9hbnMgKGluY2x1ZGluZyByZWZpbmFuY2luZ3Mgb2YgaG9tZSBwdXJjaGFzZSBsb2FucykgaW4gdGhlIHByZWNlZGluZyBjYWxlbmRhciB5ZWFyLCB3ZXJlIGV4ZW1wdCBmcm9tIHJlcG9ydGluZy4gRGVwb3NpdG9yeSBpbnN0aXR1dGlvbnMgd2l0aCBhc3NldHMgdG90YWxpbmcgbGVzcyB0aGFuICQ0MCBtaWxsaW9uIG9uIHRoZSBwcmVjZWRpbmcgRGVjZW1iZXIgMzEgd2VyZSBleGVtcHQgZnJvbSByZXBvcnRpbmcuCmh0dHA6Ly93d3cuZmZpZWMuZ292L2htZGEvZGVmYXVsdC5odG0KTGVuZGVycyBtYXkgcmVwb3J0IHVwIHRvIHRocmVlIHJlYXNvbnMgZm9yIGVhY2ggZGVuaWFsLiBUaGUgcmVwb3J0aW5nIG9mIHRoaXMgZGF0YSBpcyBtYW5kYXRvcnkgZm9yIGxlbmRlcnMgcmVndWxhdGVkIGJ5IHRoZSBPZmZpY2Ugb2YgdGhlIENvbXB0cm9sbGVyIG9mIHRoZSBDdXJyZW5jeSBhbmQgT2ZmaWNlIG9mIFRocmlmdCBTdXBlcnZpc2lvbjsgb3B0aW9uYWwgZm9yIGFsbCBvdGhlcnMuCgpDYXRlZ29yeTogQmFua2luZywgRmluYW5jZSwgYW5kIEluc3VyYW5jZQoKU3ViamVjdDogTW9ydGdhZ2UgTG9hbnMsIEhvbWUgTW9ydGdhZ2VzLCBDcmVkaXQKClNvdXJjZTogRmVkZXJhbCBGaW5hbmNpYWwgSW5zdGl0dXRpb25zIEV4YW1pbmF0aW9uIENvdW5jaWwKVGhlIEZlZGVyYWwgRmluYW5jaWFsIEluc3RpdHV0aW9ucyBFeGFtaW5hdGlvbiBDb3VuY2lsIChGRklFQykgd2FzIGVzdGFibGlzaGVkIGluIDE5NzkgdG8gcHJlc2NyaWJlIHVuaWZvcm0gc3RhbmRhcmRzIGFuZCBwcmFjdGljZXMgZm9yIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgcmVndWxhdGVkIGJ5IHRoZSBCb2FyZCBvZiBHb3Zlcm5vcnMgb2YgdGhlIEZlZGVyYWwgUmVzZXJ2ZSBTeXN0ZW0gKEZSQiksIHRoZSBGZWRlcmFsIERlcG9zaXQgSW5zdXJhbmNlIENvcnBvcmF0aW9uIChGRElDKSwgdGhlIE5hdGlvbmFsIENyZWRpdCBVbmlvbiBBZG1pbmlzdHJhdGlvbiAoTkNVQSksIHRoZSBPZmZpY2Ugb2YgdGhlIENvbXB0cm9sbGVyIG9mIHRoZSBDdXJyZW5jeSAoT0NDKSwgYW5kIHRoZSBPZmZpY2Ugb2YgVGhyaWZ0IFN1cGVydmlzaW9uIChPVFMpLiBUaGUgQ291bmNpbCB3YXMgZ2l2ZW4gYWRkaXRpb25hbCByZXNwb25zaWJpbGl0aWVzIHVuZGVyIHNlY3Rpb24gMzQwIG9mIHRoZSBIb3VzaW5nIGFuZCBDb21tdW5pdHkgRGV2ZWxvcG1lbnQgQWN0IG9mIDE5ODAgdG8gZmFjaWxpdGF0ZSBwdWJsaWMgYWNjZXNzIHRvIGRhdGEgdGhhdCBkZXBvc2l0b3J5IGluc3RpdHV0aW9ucyBtdXN0IGRpc2Nsb3NlIHVuZGVyIHRoZSBIb21lIE1vcnRnYWdlIERpc2Nsb3N1cmUgQWN0IG9mIDE5NzUgKEhNREEpIGFuZCB0aGUgYWdncmVnYXRpb24gb2YgYW5udWFsIEhNREEgZGF0YSwgYnkgY2Vuc3VzIHRyYWN0LCBmb3IgZWFjaCBtZXRyb3BvbGl0YW4gc3RhdGlzdGljYWwgYXJlYSAoTVNBKS4KaHR0cDovL3d3dy5mZmllYy5nb3YvPC9kZXNjcmlwdGlvbj4KPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+","updated":"2015-04-07T18:38:27Z","doi":"10.6068/DP14C952D05D360","relatedIdentifier":["IsNewVersionOf:DOI:10.6068/DP14C952C7D6259"],"creator":["Federal Financial Institutions Examination Council"],"publisher":"Data-Planet™ Statistical Datasets by Conquest Systems, Inc.","title":["RANKING: Federal Financial Institutions Examination Council. Home Mortgage Loan Applications: Reason for Denial-Credit History | State: Maine | ID: XXX | Lender: ALL LENDERS | Mortgage Purpose: Home Purchase | Gender: Male, Female | Race: All Races, 2013. Data-Planet™ Statistical Datasets by Conquest Systems, Inc. Dataset-ID:  038-001-020"],"publicationYear":"2015","resourceTypeGeneral":"Other"},{"minted":"2015-04-08T02:55:31Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T02:55:31Z","doi":"10.15468/DL.LV6WWA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/fdzzal","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ly60bx","References:DOI:10.15468/l8vpay","References:DOI:10.15468/s6zhid","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ak7ldg","References:DOI:10.5519/0002965","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/ennulm","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dipjcr","References:DOI:10.15468/kllkyl","References:DOI:10.15468/lmznjw","References:DOI:10.15468/qaevz2","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/tm56sc","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T02:57:26Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T02:57:26Z","doi":"10.15468/DL.VRTYTX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/iv6y8m","References:DOI:10.15468/7gudyo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/ypoair","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/l8vpay","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/ygtutx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/g1wfae","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/gja4jo","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/lmznjw","References:DOI:10.15468/dipjcr","References:DOI:10.15468/g1zohr","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/qaevz2","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T03:16:23Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnRod2xpajwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAxOTctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1OTQvcGFuZ2FlYS44MTgzMjI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTA4MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IERhdGFzZXRLZXk6IChUYWJsZSAxKSBQcm9wb3J0aW9uIG9mIFRveG9wbGFzbWEgZ29uZGlpIHNlcm9wb3NpdGl2ZSBhcmN0aWMgZm94ZXMgKEFsb3BleCBsYWdvcHVzKSBieSBhZ2UgZ3JvdXAgYW5kIGdlb2dyYXBoaWMgYXJlYS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOCByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA4IHJlY29yZHMgZnJvbSAoVGFibGUgMSkgUHJvcG9ydGlvbiBvZiBUb3hvcGxhc21hIGdvbmRpaSBzZXJvcG9zaXRpdmUgYXJjdGljIGZveGVzIChBbG9wZXggbGFnb3B1cykgYnkgYWdlIGdyb3VwIGFuZCBnZW9ncmFwaGljIGFyZWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T03:16:23Z","doi":"10.15468/DL.THWLIJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.1594/pangaea.818322"],"publicationYear":"2015"},{"minted":"2015-04-08T03:23:38Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T03:23:38Z","doi":"10.15468/DL.KOF9LW","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ypoair","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wtlymk","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T04:08:44Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmh5bnRseDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAxOTktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3h5cHI3MjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzRtbTZ1YzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tjY3VuZjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3A1cnVwdjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d1M3BvZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2Q3Z3VnZDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAyMDUgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBGZWxpZGFlIEZpc2NoZXIgZGUgV2FsZGhlaW0sIDE4MTcgCkNvdW50cnk6IENoaWxlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAyMDUgcmVjb3JkcyBmcm9tIDE0IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIE1mTiAtIEZvc3NpbCB2ZXJ0ZWJyYXRlcyBJVi4gCiAyIHJlY29yZHMgZnJvbSBDb2xsZWN0aW9uIE1hbW1hbGlhIFNNRi4gCiAyIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDQgcmVjb3JkcyBmcm9tIFBhbGVvYmlvbG9neSBEYXRhYmFzZS4gCiAyNyByZWNvcmRzIGZyb20gTVNVIE1hbW1hbG9neSwgT3JuaXRob2xvZ3kgYW5kIFZlcnRlYnJhdGUgUGFsZW9udG9sb2d5IENvbGxlY3Rpb25zLiAKIDMgcmVjb3JkcyBmcm9tIFZlcnRlYnJhdGUgWm9vbG9neSBEaXZpc2lvbiAtIE1hbW1hbG9neSwgWWFsZSBQZWFib2R5IE11c2V1bS4gCiAxIHJlY29yZHMgZnJvbSBtYW1tYWxzLiAKIDMgcmVjb3JkcyBmcm9tIFJCSU5TIGNvbGxlY3Rpb25zLiAKIDU5IHJlY29yZHMgZnJvbSBab29sb2dpY2FsIE11c2V1bSBBbXN0ZXJkYW0sIFVuaXZlcnNpdHkgb2YgQW1zdGVyZGFtIChOTCkg4oCTIE1hbW1hbGlhLiAKIDEgcmVjb3JkcyBmcm9tIE11c2V1bSBvZiBDb21wYXJhdGl2ZSBab29sb2d5LCBIYXJ2YXJkIFVuaXZlcnNpdHkuIAogMjUgcmVjb3JkcyBmcm9tIEZpZWxkIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkgKFpvb2xvZ3kpIE1hbW1hbCBDb2xsZWN0aW9uLiAKIDEzIHJlY29yZHMgZnJvbSBBTU5IIE1hbW1hbCBDb2xsZWN0aW9ucy4gCiA3IHJlY29yZHMgZnJvbSBOTU5IIG9jY3VycmVuY2UgRHdDLUEuIAogNTcgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBNYW1tYWxpYS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T04:08:44Z","doi":"10.15468/DL.HYNTLX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5519/0002965","References:DOI:10.15468/xypr72","References:DOI:10.15468/4mm6uc","References:DOI:10.15468/kccunf","References:DOI:10.15468/p5rupv","References:DOI:10.15468/wu3poe","References:DOI:10.15468/dipjcr","References:DOI:10.15468/d7gugd"],"publicationYear":"2015"},{"minted":"2015-04-08T04:09:25Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmFuZ2FuYjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMDEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzVpY3RwejwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2x5NjBieDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAxMjggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBHdWFkdWEgc2FyY29jYXJwYSBMb25kb8OxbyAmYW1wOyBQLk0uUGV0ZXJzb24uIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDEyOCByZWNvcmRzIGZyb20gOCBjb25zdGl0dWVudCBkYXRhc2V0czogCiA1IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgVGhlIE5ldyBZb3JrIEJvdGFuaWNhbCBHYXJkZW4uIAogMSByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIGFyZXF2aXBlbnNlIChIVVNBKS4gCiA1MyByZWNvcmRzIGZyb20gTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbi4gCiA2IHJlY29yZHMgZnJvbSBJbnN0aXR1dG8gTmFjaW9uYWwgZGUgUGVzcXVpc2FzIGRhIEFtYXrDtG5pYSAoSU5QQSkgLSBIZXJiYXJpdW0uIAogNTcgcmVjb3JkcyBmcm9tIE5NTkggb2NjdXJyZW5jZSBEd0MtQS4gCiAyIHJlY29yZHMgZnJvbSBGaWVsZCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IChCb3RhbnkpICBTZWVkIFBsYW50IENvbGxlY3Rpb24uIAogMyByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW5zLCBLZXcgLSBIZXJiYXJpdW0gU3BlY2ltZW5zLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T04:09:25Z","doi":"10.15468/DL.ANGANB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/5ictpz","References:DOI:10.15468/dipjcr","References:DOI:10.15468/ly60bx"],"publicationYear":"2015"},{"minted":"2015-04-08T04:12:08Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnBiaWwwajwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMDItMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3prOHNvbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hyYXByNjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BxOHZ4YzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzVpY3RwejwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2x5NjBieDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT44ODkzNTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMjM1IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogR3VhZHVhIHdlYmVyYmF1ZXJpIFBpbGcuLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAyMzUgcmVjb3JkcyBmcm9tIDE4IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBBbWF6b25lbnNlLiAKIDEgcmVjb3JkcyBmcm9tIFBoYW5lcm9nYW1pYyBCb3RhbmljYWwgQ29sbGVjdGlvbnMgKFMpLiAKIDEgcmVjb3JkcyBmcm9tIFN5c1RheCAtIEJvdGFuaWNhbCBHYXJkZW5zLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgVXRyZWNodC4gCiAxIHJlY29yZHMgZnJvbSBUaGUgQUFVIEhlcmJhcml1bSBEYXRhYmFzZS4gCiAyIHJlY29yZHMgZnJvbSBBbmRlcyB0byBBbWF6b24gQmlvZGl2ZXJzaXR5IFByb2dyYW0uIAogNyByZWNvcmRzIGZyb20gRmllbGQgTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoQm90YW55KSAgU2VlZCBQbGFudCBDb2xsZWN0aW9uLiAKIDIgcmVjb3JkcyBmcm9tIENvbGVjY2nDs24gSGVyYmFyaW8gRmVkZXJpY28gTWVkZW0gQm9nb3TDoSAtIEZNQi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBBbWF6w7NuaWNvIENvbG9tYmlhbm8uIAogNDcgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogOCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIFRoZSBOZXcgWW9yayBCb3RhbmljYWwgR2FyZGVuLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIFVOQVAuIAogMSByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLiAKIDYgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAxMjkgcmVjb3JkcyBmcm9tIE5NTkggb2NjdXJyZW5jZSBEd0MtQS4gCiAxMCByZWNvcmRzIGZyb20gSW5zdGl0dXRvIE5hY2lvbmFsIGRlIFBlc3F1aXNhcyBkYSBBbWF6w7RuaWEgKElOUEEpIC0gSGVyYmFyaXVtLiAKIDExIHJlY29yZHMgZnJvbSBSb3lhbCBCb3RhbmljIEdhcmRlbnMsIEtldyAtIEhlcmJhcml1bSBTcGVjaW1lbnMuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T04:12:08Z","doi":"10.15468/DL.PBIL0J","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/zk8soo","References:DOI:10.15468/xrapr6","References:DOI:10.15468/pq8vxc","References:DOI:10.15468/dipjcr","References:DOI:10.15468/5ictpz","References:DOI:10.15468/ly60bx"],"publicationYear":"2015"},{"minted":"2015-04-08T04:13:13Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmp4c3NudDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMDMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2x5NjBieDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BxOHZ4YzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzVpY3RwejwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT40MTQ1MTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgOTAgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBHdWFkdWEgY2lsaWF0YSBMb25kb8OxbyAmYW1wOyBEYXZpZHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA5MCByZWNvcmRzIGZyb20gNyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgY29sbGVjdGlvbiAoUCkgb2YgdGhlIE11c8OpdW0gbmF0aW9uYWwgZCdIaXN0b2lyZSBOYXR1cmVsbGUgKE1OSE4gLSBQYXJpcykuIAogNSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW5zLCBLZXcgLSBIZXJiYXJpdW0gU3BlY2ltZW5zLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIEFtYXrDs25pY28gQ29sb21iaWFuby4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIGRlIGxhIEd1eWFuZS4gCiAyMyByZWNvcmRzIGZyb20gTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbi4gCiA0NyByZWNvcmRzIGZyb20gTk1OSCBvY2N1cnJlbmNlIER3Qy1BLiAKIDExIHJlY29yZHMgZnJvbSBJbnN0aXR1dG8gTmFjaW9uYWwgZGUgUGVzcXVpc2FzIGRhIEFtYXrDtG5pYSAoSU5QQSkgLSBIZXJiYXJpdW0uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T04:13:13Z","doi":"10.15468/DL.JXSSNT","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ly60bx","References:DOI:10.15468/pq8vxc","References:DOI:10.15468/dipjcr","References:DOI:10.15468/5ictpz"],"publicationYear":"2015"},{"minted":"2015-04-08T04:15:49Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T04:15:49Z","doi":"10.15468/DL.EGFHQH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/5ictpz","References:DOI:10.15468/zk8soo","References:DOI:10.15468/wbmr7c","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/d4ssas","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/ly60bx","References:DOI:10.15468/kipr4f","References:DOI:10.15468/ypoair"],"publicationYear":"2015"},{"minted":"2015-04-08T04:16:22Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjA4dGxwaDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMDUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1OTQvcGFuZ2FlYS44MTgzMjI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTA4MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IERhdGFzZXRLZXk6IChUYWJsZSAxKSBQcm9wb3J0aW9uIG9mIFRveG9wbGFzbWEgZ29uZGlpIHNlcm9wb3NpdGl2ZSBhcmN0aWMgZm94ZXMgKEFsb3BleCBsYWdvcHVzKSBieSBhZ2UgZ3JvdXAgYW5kIGdlb2dyYXBoaWMgYXJlYS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOCByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA4IHJlY29yZHMgZnJvbSAoVGFibGUgMSkgUHJvcG9ydGlvbiBvZiBUb3hvcGxhc21hIGdvbmRpaSBzZXJvcG9zaXRpdmUgYXJjdGljIGZveGVzIChBbG9wZXggbGFnb3B1cykgYnkgYWdlIGdyb3VwIGFuZCBnZW9ncmFwaGljIGFyZWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T04:16:22Z","doi":"10.15468/DL.08TLPH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.1594/pangaea.818322"],"publicationYear":"2015"},{"minted":"2015-04-08T05:05:40Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:05:40Z","doi":"10.15468/DL.3RYMNH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/uc1apo","References:DOI:10.15468/rhzrxw","References:DOI:10.5519/0002965","References:DOI:10.15468/wtlymk","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T05:05:41Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmVpZDBrMDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tlMm9keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93OGdydTU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9yaHpyeHc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93dGx5bWs8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96cmxxb2s8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MDwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgOTUwIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtZWxpbmEgYWx5c3N1bSAoTWlsbC4pIFRoZWxsLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOTUwIHJlY29yZHMgZnJvbSAzMyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAzMjcgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gTlNXIGhlcmJhcml1bSBjb2xsZWN0aW9uLiAKIDIgcmVjb3JkcyBmcm9tIEZMT1JJVk9OLiAKIDI3IHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAzIHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMiByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMTIgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW5pY2FsIE11c2V1bSwgVW5pdmVyc2l0eSBvZiBPdWx1LCBGaW5sYW5kIChPVUxVKS4gCiAxMTcgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW55IFVuaXQsIEZpbm5pc2ggTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoSCkuIAogNSByZWNvcmRzIGZyb20gQmVsZ2lhbiBJRkJMIEZsb3JhIENoZWNrbGlzdHMgKDE5MzktMTk3MSkuIAogMjE1IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAyNiByZWNvcmRzIGZyb20gT0hOLiAKIDI3IHJlY29yZHMgZnJvbSBGbG9yYWJhbmsxIC0gQSBncmlkLWJhc2VkIGRhdGFiYXNlIG9uIHZhc2N1bGFyIHBsYW50ICBkaXN0cmlidXRpb24gaW4gdGhlIG5vcnRoZXJuIHBhcnQgb2YgQmVsZ2l1bSAoRmxhbmRlcnMgYW5kIHRoZSBCcnVzc2VscyBDYXBpdGFsIHJlZ2lvbikuIAogMjkgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDcgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVWlCLiAKIDcgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBKeXbDpHNreWzDpCBVbml2ZXJzaXR5IE11c2V1bS4gCiAyNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSwgRmlubGFuZCAoVFVSKS4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBPc2xvIChPKS4gCiAyIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiAxMCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDYgcmVjb3JkcyBmcm9tIEJyYXNzaWNhY2VhZSBvZiBDYW5hZGEuIAogMjYgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgT3NsbyAoTykuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIE11c2V1bXMsIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiA0OCByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiAzIHJlY29yZHMgZnJvbSBJbnN0aXR1dG8gZGUgQm90w6FuaWNhIERhcndpbmlvbi4gCiAxIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBOZXcgWmVhbGFuZCBOYXRpb25hbCBQbGFudCBIZXJiYXJpdW0gKENIUikuIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiA1IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIFRyb25kaGVpbSAoVFJIKS4gCiAyIHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogMiByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMyByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudCBoZXJiYXJpdW0sIEFnZGVyIG5hdHVybXVzZXVtIG9nIGJvdGFuaXNrZSBoYWdlLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:05:41Z","doi":"10.15468/DL.EID0K0","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/c4w4co","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v"],"publicationYear":"2015"},{"minted":"2015-04-08T05:06:04Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:06:04Z","doi":"10.15468/DL.EDXRBS","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/l8vpay","References:DOI:10.15468/qaevz2","References:DOI:10.15468/uc1apo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/lmznjw","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/fdzzal","References:DOI:10.15468/9axq0b","References:DOI:10.15468/7gudyo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:06:07Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnFxdDhxNDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzQ4cHdmdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9zNmN0dXM8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96azhzb288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9mZHp6YWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC90dm5qazc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC95cG9haXI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rZTJvZHk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9sOHZwYXk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC94bmxia2U8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93dGx5bWs8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC85YXhxMGI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4zODk3L3BoeXRva2V5cy4xMi4yODQ5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvcmh6cnh3PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvYzR3NGNvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvbG16bmp3PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvaTVjcWRrPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZWFxdjQ0PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvcWFldnoyPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvMGVhN3FpPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDwvcmVsYXRlZElkZW50aWZpZXJzPgogICAgPHNpemVzPgogICAgICAgIDxzaXplPjExNDQ2MTE8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDU3MjQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYWx5c3RlZ2lhIHNvbGRhbmVsbGEgKEwuKSBSb2VtLiAmYW1wOyBTY2h1bHQuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA1NzI0IHJlY29yZHMgZnJvbSAxMTIgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMiByZWNvcmRzIGZyb20gUGxhbnRhZSwgVEFJRiAoVGFpd2FuIGUtTGVhcm5pbmcgYW5kIERpZ2l0YWwgQXJjaGl2ZXMgUHJvZ3JhbSwgVEVMREFQKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIEluc3RpdHV0IFNjaWVudGlmaXF1ZSBNb2hhbWVkIFYgdW5pdmVyc2l0eSAoUkFCKS4gCiAyIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogMiByZWNvcmRzIGZyb20gRG9yc2V0IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBEb3JzZXQgU1NTSSBTcGVjaWVzIFJlY29yZHMgMTk1MiAtIDIwMDQgKE5hdHVyYWwgRW5nbGFuZCkuIAogMSByZWNvcmRzIGZyb20gUGxhbnQgU3BlY2ltZW4gZnJvbSBIZXJiYXJpdW0gKElCSykgaW4gQ2hpbmEsIEd1YW5neGkgSW5zdGl0dXRlIG9mIEJvdGFueSwgQ2hpbmVzZSBBY2FkZW15IG9mIFNjaWVuY2VzLiAKIDMzIHJlY29yZHMgZnJvbSBNZXJzZXlzaWRlIEJpb0JhbmsgLSBOb3J0aCBNZXJzZXlzaWRlIEZsb3dlcmluZyBQbGFudHMgKHZlcmlmaWVkKS4gCiAzNiByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDUgcmVjb3JkcyBmcm9tIEd1bm1hIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnksIFZhc2N1bGFyIFBsYW50IFNwZWNpbWVuLiAKIDcgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogNSByZWNvcmRzIGZyb20gQ0lCSU8sIEFsaWNhbnRlOkFCSC1HQklGLiAKIDI3IHJlY29yZHMgZnJvbSBKb2ludCBOYXR1cmUgQ29uc2VydmF0aW9uIENvbW1pdHRlZSAtIFZlZ2V0YXRpb24gc3VydmV5cyBvZiBjb2FzdGFsIHNoaW5nbGUgaW4gR3JlYXQgQnJpdGFpbi4gCiAxMTkxIHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogNDMgcmVjb3JkcyBmcm9tIGlOYXR1cmFsaXN0IHJlc2VhcmNoLWdyYWRlIG9ic2VydmF0aW9ucy4gCiAxNDAgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgRnJhbmNvLUJlbGdlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEVOREVNSUMgU1BFQ0lFUyBSRVNFQVJDSCBJTlNUSVRVVEXvvIhIZXJiYXJpdW3vvIkuIAogMzUgcmVjb3JkcyBmcm9tIERyIEZyYW5jaXMgUm9zZSBGaWVsZCBOb3RlYm9vayBQcm9qZWN0IC0gRmllbGQgTm90ZWJvb2sgUmVjb3JkcyBvZiBEciBGcmFuY2lzIFJvc2UgMTk1MCdzIHRvIDE5OTAncy4gCiAxNyByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIEhlcmJhcml1bSAoVUJDKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMSByZWNvcmRzIGZyb20gQmVybmljZSBQLiBCaXNob3AgTXVzZXVtLiAKIDIgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogNiByZWNvcmRzIGZyb20gTmV3IFplYWxhbmQgQmlvZGl2ZXJzaXR5IFJlY29yZGluZyBOZXR3b3JrLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE3DoWxhZ2E6IE1HQy1Db3Jtb2YuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBVdHJlY2h0LiAKIDE4IHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiAyIHJlY29yZHMgZnJvbSBDT05OLiAKIDEgcmVjb3JkcyBmcm9tIERhdGFiYXNlIG9mIE5hdGl2ZSBQbGFudHMgaW4gVGFpd2FuLiAKIDIxIHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDE1IHJlY29yZHMgZnJvbSBJbnN0aXR1dGUgb2YgRWNvbG9neSBhbmQgRXZvbHV0aW9uYXJ5IEJpb2xvZ3ksIE5hdGlvbmFsIFRhaXdhbiBVbml2ZXJzaXR5LiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxIHJlY29yZHMgZnJvbSBEcHRvIGRlIEJvdMOhbmljYSwgRWNvbG9nw61hIHkgRmlzaW9sb2fDrWEgVmVnZXRhbCAoSGVyYmFyaW8gQ09GQykuIEZhY3VsdGFkIGRlIENpZW5jaWFzLiBVbml2ZXJzaWRhZCBkZSBDw7NyZG9iYS4gCiA0IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE9ic2VydmF0aW9ucywgT3NsbyAoTykuIAogMTAxIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCAoSTA5MykgOiBGbG9yZSBkdSBNYXNzaWYgQXJtb3JpY2Fpbi4gCiAxIHJlY29yZHMgZnJvbSBSb3lhbCBCb3RhbmljIEdhcmRlbiBFZGluYnVyZ2ggSGVyYmFyaXVtIChFKS4gCiA0OCByZWNvcmRzIGZyb20gRkxPUklWT04uIAogMSByZWNvcmRzIGZyb20gQW5naW9zcGVybWF0YXRvcGh5dGluYSBDb2xsZWN0aW9uIG9mIFNhaXRhbWEgTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeS4gCiAzMyByZWNvcmRzIGZyb20gU291dGggRWFzdCBXYWxlcyBCaW9kaXZlcnNpdHkgUmVjb3JkcyBDZW50cmUgLSBDQ1cgUmVnaW9uYWwgRGF0YSA6IFNvdXRoIEVhc3QgV2FsZXMgTm9uLXNlbnNpdGl2ZSBTcGVjaWVzIFJlY29yZHMuIAogNDQ3IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZSBhZGRpdGlvbnMgc2luY2UgMjAwMC4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgVmFzY3VsYXIgUGxhbnRzIENvbGxlY3Rpb24gb2YgdGhlIFVuaXZlcnNpdHkgb2YgRXh0cmVtYWR1cmEgKFNwYWluKS4gCiAzOSByZWNvcmRzIGZyb20gTlNXIGhlcmJhcml1bSBjb2xsZWN0aW9uLiAKIDI0IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIFRhaXdhbiBGb3Jlc3RyeSBSZXNlYXJjaCBJbnN0aXR1dGUuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIEFzb2NpYWNpw7NuIEJJR0EgcGFyYSBlbCBlc3R1ZGlvIGRlbCBwYXRyaW1vbmlvIG5hdHVyYWwgZGUgR2FsaWNpYTogRkJJR0EuIAogMTQ4IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdleGZvcmQuIAogMzAgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0byBkZSBCb3TDoW5pY2EgRGFyd2luaW9uLiAKIDQwIHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiAxIHJlY29yZHMgZnJvbSBWZWdldGF0aW9uIGRhdGEgZnJvbSBwcm90ZWN0ZWQgYXJlYXMgaW4gRGVubWFyayAowqcgMyBpbiB0aGUgRGFuaXNoIE5hdHVyZSBQcm90ZWN0aW9uIEFjdCkuIAogNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiA1IHJlY29yZHMgZnJvbSBKYXJkw61uIEJvdMOhbmljbyBBdGzDoW50aWNvLCBHaWrDs246IEpCQUcuIAogMzQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBTcGVjaW1lbnMgb2YgTXVzZXVtIG9mIE5hdHVyZSBhbmQgSHVtYW4gQWN0aXZpdGllcywgSHlvZ28gUHJlZmVjdHVyZSwgSmFwYW4uIAogMiByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBPc2xvIChPKS4gCiAxNSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiAtIFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbiBIZXJiYXJpdW0gKFdUVSkuIAogMiByZWNvcmRzIGZyb20gUGxhbnQgU3BlY2ltZW5zIG9mIEt1cmFzaGlraSBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5LiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogMTAyIHJlY29yZHMgZnJvbSBCYW5jbyBkZSBEYXRvcyBkZSBsYSBCaW9kaXZlcnNpZGFkIGRlIGxhIENvbXVuaXRhdCBWYWxlbmNpYW5hLiAKIDEgcmVjb3JkcyBmcm9tIFRoZSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uIGF0IHRoZSBCb3RhbmlzY2hlIFN0YWF0c3NhbW1sdW5nIE3DvG5jaGVuLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBQaHJhZ21hLVRoZXJtaXMvVGhlc3NhbG9uaWtpLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMyByZWNvcmRzIGZyb20gSG9ydHVzIEJvdGFuaWN1cyBTb2xsZXJlbnNpcyBIZXJiYXJpdW0gKEZCb25hZsOoKS4gCiAxMyByZWNvcmRzIGZyb20gQXVzdHJhbGlhbiBOYXRpb25hbCBIZXJiYXJpdW0gKENBTkIpLiAKIDYgcmVjb3JkcyBmcm9tIE5ldyBaZWFsYW5kIE5hdGlvbmFsIFBsYW50IEhlcmJhcml1bSAoQ0hSKS4gCiA2IHJlY29yZHMgZnJvbSBCcmlzdG9sIFJlZ2lvbmFsIEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBCUkVSQyBPY3RvYmVyIDIwMDkuIAogMTAgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMyByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgSGVyYmllcnMgVW5pdmVyc2l0YWlyZXMgZGUKCQlDbGVybW9udC1GZXJyYW5kIChDTEYpLiAKIDkgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRXNww6hjZXMgVsOpZ8OpdGFsZXMgTWVuYWPDqWVzIGRlIEZyYW5jZSBtw6l0cm9wb2xpdGFpbmUuIAogMSByZWNvcmRzIGZyb20gU2llZ2VuLyBHeW1uYXNpdW0gQW0gTMO2aHJ0b3IuIAogMzMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMjkgcmVjb3JkcyBmcm9tIEJhc2UgZGUgZGF0b3MgZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBQYcOtcyBWYXNjbzogQVJBTi1FSC4gCiAyIHJlY29yZHMgZnJvbSBQUkVDSVMuIAogMiByZWNvcmRzIGZyb20gTm9yd2VnaWFuIFNwZWNpZXMgT2JzZXJ2YXRpb24gU2VydmljZS4gCiAxIHJlY29yZHMgZnJvbSBXaXNtYXIgQnVjaHQgY29hc3Qtd2F0Y2hpbmcuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgVW5pdmVyc2lkYWQgZGUgTXVyY2lhOiBNVUIuIAogMTc1IHJlY29yZHMgZnJvbSBEdXRjaCBWZWdldGF0aW9uIERhdGFiYXNlIChMVkQpLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDIgcmVjb3JkcyBmcm9tIEtvY2hpIFByZWZlY3R1cmFsIE1ha2lubyBCb3RhbmljYWwgR2FyZGVuLiAKIDUgcmVjb3JkcyBmcm9tIE5vcnRoZXJuIElyZWxhbmQgRW52aXJvbm1lbnQgQWdlbmN5IC0gRUhTIFNwZWNpZXMgRGF0YXNldHMuIAogMiByZWNvcmRzIGZyb20gSmFyZMOtbiBCb3TDoW5pY28gZGUgQ8OzcmRvYmE6IEhlcmJhcml1bSBDT0EuIAogMTYgcmVjb3JkcyBmcm9tIFRoZSBkaWdpdGl6YXRpb24gb2YgcGxhbnQgc3BlY2ltZW5zIG9mIE5UVS4gCiAyIHJlY29yZHMgZnJvbSBHZW9ncmFwaGljYWxseSB0YWdnZWQgSU5TREMgc2VxdWVuY2VzLiAKIDYgcmVjb3JkcyBmcm9tIFVDSkVQUyBUQVBJUiBQcm92aWRlci4gCiA2IHJlY29yZHMgZnJvbSBGS1NFLUhlcmJhcml1bSBzcGVjaW1lbnMgb2YgRmFjdWx0eSBvZiBTeW1iaW90aWMgU3lzdGVtcyBTY2llbmNlLCBGdWt1c2hpbWEgVW5pdmVyc2l0eSwgSmFwYW4uIAogMSByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDMwIHJlY29yZHMgZnJvbSBCU0JJIHRldHJhZCBkYXRhIGZvciBJcmVsYW5kLiAKIDcxOCByZWNvcmRzIGZyb20gRmxvcmFiYW5rMSAtIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCAgZGlzdHJpYnV0aW9uIGluIHRoZSBub3J0aGVybiBwYXJ0IG9mIEJlbGdpdW0gKEZsYW5kZXJzIGFuZCB0aGUgQnJ1c3NlbHMgQ2FwaXRhbCByZWdpb24pLiAKIDUxIHJlY29yZHMgZnJvbSBDb25zb3J0aXVtIG9mIENhbGlmb3JuaWEgSGVyYmFyaWEuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIEJvdGFuaWNhbCBHYXJkZW4gQ29sbGVjdGlvbnMgKFVCQ0JHKS4gCiAyMCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkJ0lsbGUtZXQtVmlsYWluZS4gCiAxMDYgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYSdzIFZpcnR1YWwgSGVyYmFyaXVtLiAKIDE2IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIFNvY2nDqXTDqSBkZXMgU2NpZW5jZXMgTmF0dXJlbGxlcyBldAoJCU1hdGjDqW1hdGlxdWVzIGRlIENoZXJib3VyZyAoQ0hFKS4gCiAxMjMgcmVjb3JkcyBmcm9tIENvbnNvcnRpdW0gb2YgQ2FsaWZvcm5pYSBIZXJiYXJpYS4gCiAzIHJlY29yZHMgZnJvbSBCYW5jbyBkZSBHZXJtb3BsYXNtYSBkZWwgSmFyZMOtbiBCb3TDoW5pY28gQXRsw6FudGljby4gCiAxMDg1IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZS4gCiA3MyByZWNvcmRzIGZyb20gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIChTQlJDKSBkYXRhc2V0LiAKIDEgcmVjb3JkcyBmcm9tIENhcnRvZ3JhZsOtYSBkZSB2ZWdldGFjacOzbiBhIGVzY2FsYSBkZSBkZXRhbGxlIDE6MTAuMDAwIGRlIGxhIG1hc2EgZm9yZXN0YWwgZGUgQW5kYWx1Y8OtYS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBIU1MgRmluY2EgTGEgT3JkZW4tVmFsZGVzZXF1ZXJhIChDSUNZVEVYKS4gR29iaWVybm8gZGUgRXh0cmVtYWR1cmEuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0eSByZWNvcmRzIGZyb20gSXJlbGFuZCAtIGdlbmVyYWwuIAogNiByZWNvcmRzIGZyb20gSXJpc2ggdmFzY3VsYXIgcGxhbnQgZGF0YSAxOTk5LTIwMDkuIAogMSByZWNvcmRzIGZyb20gQm90YW55IHJlZ2lzdHJhdGlvbiBkYXRhYmFzZSBieSBEYW5pc2ggYm90YW5pc3RzLiAKIDEgcmVjb3JkcyBmcm9tIEFsbCBvYnNlcnZhdGlvbnMgZXh0cmFjdGVkIGZyb20gdGhlIEZsb3JhIG9mIE5vcnRodW1iZXJsYW5kIGFuZCBEdXJoYW0gMTgzMS4gCiA4IHJlY29yZHMgZnJvbSBPbmxpbmUgQXRsYXMgb2YgdmFzY3VsYXIgcGxhbnRzIDIwMTItMjAyMC4gCiAxIHJlY29yZHMgZnJvbSBOYXRpb25hYWwgSGVyYmFyaXVtIE5lZGVybGFuZC4gCiAyODcgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiAxIHJlY29yZHMgZnJvbSBBcnRlbnZpZWxmYWx0IGF1ZiBkZW4gRWxid2llc2VuIChEZXNzYXUpLiAKIDI1IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdhdGVyZm9yZC4gCiA0NyByZWNvcmRzIGZyb20gT0VIIEF0bGFzIG9mIE5TVyBXaWxkbGlmZS4gCiA1MyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgU3BlY2ltZW4gRGF0YWJhc2Ugb2YgS2FuYWdhd2EgUHJlZmVjdHVyYWwgTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:06:07Z","doi":"10.15468/DL.QQT8Q4","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/48pwft","References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/s6ctus","References:DOI:10.15468/zk8soo","References:DOI:10.15468/fdzzal","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.15468/l8vpay","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/9axq0b","References:DOI:10.15468/dqb9za","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/lmznjw","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/eaqv44","References:DOI:10.15468/qaevz2","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T05:06:11Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:06:11Z","doi":"10.15468/DL.8TN3RB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/iawody","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/wtlymk","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/l8vpay","References:DOI:10.5519/0002965","References:DOI:10.15468/w8gru5","References:DOI:10.15468/zrlqok","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T05:08:32Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnpwd3VoaTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTQtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4zMjg2MTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTM5IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIGJhdW1nYXJ0ZW5paSBCZWNrZXIgCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDEzOSByZWNvcmRzIGZyb20gMTEgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gVGhlIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAzIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEVzcMOoY2VzIFbDqWfDqXRhbGVzIE1lbmFjw6llcyBkZSBGcmFuY2UgbcOpdHJvcG9saXRhaW5lLiAKIDIgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDIyIHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDkzIHJlY29yZHMgZnJvbSBBcnRlbkZpbmRlci4gCiAyIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogOSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBIZXJiYXJpdW0gT2VzYXUuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDQgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogQXRsYXMgZGUgbGEgZmxvcmUgZGUgTG9ycmFpbmUuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:08:32Z","doi":"10.15468/DL.ZPWUHI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:08:42Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:08:42Z","doi":"10.15468/DL.LHARAS","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/zrlqok","References:DOI:10.15468/c4w4co","References:DOI:10.15468/lmznjw","References:DOI:10.15468/wtlymk","References:DOI:10.15468/bkzv1l","References:DOI:10.5519/0002965","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/9axq0b","References:DOI:10.15468/g1zohr","References:DOI:10.15468/nema2n","References:DOI:10.15468/zk8soo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ypoair"],"publicationYear":"2015"},{"minted":"2015-04-08T05:08:43Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnRtbXF2bzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzlheHEwYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2xtem5qdzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2cxem9ocjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4zNzU1ODwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNTQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYW1wYW51bGEgY2VuaXNpYSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNTQgcmVjb3JkcyBmcm9tIDEzIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgSGVyYmllcnMgVW5pdmVyc2l0YWlyZXMgZGUKCQlDbGVybW9udC1GZXJyYW5kIChDTEYpLiAKIDQgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiAxIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxMyByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGNvbGxlY3Rpb24gKFApIG9mIHRoZSBNdXPDqXVtIG5hdGlvbmFsIGQnSGlzdG9pcmUgTmF0dXJlbGxlIChNTkhOIC0gUGFyaXMpLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDMgcmVjb3JkcyBmcm9tIENhcm5ldCBlbiBMaWduZS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIFNvY2nDqXTDqSBkZXMgU2NpZW5jZXMgTmF0dXJlbGxlcyBldAoJCU1hdGjDqW1hdGlxdWVzIGRlIENoZXJib3VyZyAoQ0hFKS4gCiAxIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMSByZWNvcmRzIGZyb20gaU5hdHVyYWxpc3QgcmVzZWFyY2gtZ3JhZGUgb2JzZXJ2YXRpb25zLiAKIDE2IHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiA3IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIHNwZWNpbWVucyBvZiBKYXJkaW5zIGJvdGFuaXF1ZXMgYW5kIENvbnNlcnZhdG9pcmUJCUJvdGFuaXF1ZSBvZiBOYW5jeSAoTkNZKS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:08:44Z","doi":"10.15468/DL.TMMQVO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/9axq0b","References:DOI:10.15468/lmznjw","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:08:54Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmd4OHlqYTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2cxem9ocjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4zNTE0Mjwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNjYgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYW1wYW51bGEgYWxwaW5hIEphY3EuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA2NiByZWNvcmRzIGZyb20gMTQgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogNyByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMyByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogOCByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiA2IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogMTMgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAzIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAyIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDIgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgSmFyZGlucyBib3RhbmlxdWVzIGFuZCBDb25zZXJ2YXRvaXJlCQlCb3RhbmlxdWUgb2YgTmFuY3kgKE5DWSkuIAogMSByZWNvcmRzIGZyb20gU2NobGF0dHN0YWxsZXIgVGFsIChMZW5uaW5nZW4pLiAKIDcgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:08:54Z","doi":"10.15468/DL.GX8YJA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:09:00Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:09:00Z","doi":"10.15468/DL.CPIHJE","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/hrztgn","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/7gudyo","References:DOI:10.15468/g1zohr","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/euw5ge","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/g1wfae","References:DOI:10.15468/zrlqok","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ahunho","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:09:09Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjdjcmp1dTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT43NDMyNDwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzAzIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIGJvbm9uaWVuc2lzIEwuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAzMDMgcmVjb3JkcyBmcm9tIDIzIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDMgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAyIHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiAzIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIFVuaXZlcnNpdHkgb2YgQmlhxYJ5c3RvayAtIFZhc2N1bGFyIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBMZWlkZW4uIAogOCByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMSByZWNvcmRzIGZyb20gQ09OTi4gCiA4IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogODMgcmVjb3JkcyBmcm9tIEZsb3Jpc3RpYyBEYXRhYmFzZXMgb2YgTWVja2xlbmJ1cmctUG9tZXJhbmlhIC0gSGlnaGVyIFBsYW50cy4gCiAxMzMgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBNYWFzdHJpY2h0IChOTCkgLSBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gR2VtZXIgYXJlYSAoU2xvdmFraWEpLiAKIDIgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDMgcmVjb3JkcyBmcm9tIE9ITi4gCiA4IHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAxOCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDUgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDEgcmVjb3JkcyBmcm9tIFNCVC1MaXZpbmcuIAogMTUgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxIHJlY29yZHMgZnJvbSBKYXJkw61uIEJvdMOhbmljbyBkZSBDw7NyZG9iYTogSGVyYmFyaXVtIENPQS4gCiAxIHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiAyIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:09:09Z","doi":"10.15468/DL.7CRJUU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/pal1lb","References:DOI:10.15468/c4w4co"],"publicationYear":"2015"},{"minted":"2015-04-08T05:09:11Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:09:11Z","doi":"10.15468/DL.WU3OCQ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ypoair","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/7gudyo","References:DOI:10.15468/ahunho","References:DOI:10.15468/pj2yrh","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/fdzzal","References:DOI:10.15468/ke2ody","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wqsad9","References:DOI:10.15468/l8vpay","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/g1zohr","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xnlbke","References:DOI:10.15468/euw5ge","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/iawody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T05:11:13Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmptdGpnODwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMTktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+Mzg2MTE8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDcxIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIGNlc3BpdG9zYSBTY29wLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNzEgcmVjb3JkcyBmcm9tIDE0IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDUgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDMgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gKMOFYm8gQWthZGVtaSksIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1IChUVVJBKS4gCiAyIHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiA0IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXTDpHQgU2FsemJ1cmcuIAogMyByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDUgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDUgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAxIHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIEhlcmJhcml1bSAoVUJDKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMzcgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:11:13Z","doi":"10.15468/DL.JMTJG8","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.5886/rtt57cc9"],"publicationYear":"2015"},{"minted":"2015-04-08T05:11:31Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:11:31Z","doi":"10.15468/DL.FUFMOB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/ygtutx","References:DOI:10.15468/w8gru5","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wtlymk","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/c4w4co","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T05:11:36Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZpanR3dTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMjItMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ocnp0Z248L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9sbXpuanc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41ODg2L3J0dDU3Y2M5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZHFiOXphPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvYzR3NGNvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZGlwamNyPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgva2xsa3lsPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuNTUxOS8wMDAyOTY1PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvMGVhN3FpPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvaTVjcWRrPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvOWF4cTBiPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvd3RseW1rPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDwvcmVsYXRlZElkZW50aWZpZXJzPgogICAgPHNpemVzPgogICAgICAgIDxzaXplPjE3MjEzNTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNDM4IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIG1lZGl1bSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNDM4IHJlY29yZHMgZnJvbSA2MyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBCw5xHLiAKIDEgcmVjb3JkcyBmcm9tIGlOYXR1cmFsaXN0IHJlc2VhcmNoLWdyYWRlIG9ic2VydmF0aW9ucy4gCiAxIHJlY29yZHMgZnJvbSBGbG9yYWJhbmsxIC0gQSBncmlkLWJhc2VkIGRhdGFiYXNlIG9uIHZhc2N1bGFyIHBsYW50ICBkaXN0cmlidXRpb24gaW4gdGhlIG5vcnRoZXJuIHBhcnQgb2YgQmVsZ2l1bSAoRmxhbmRlcnMgYW5kIHRoZSBCcnVzc2VscyBDYXBpdGFsIHJlZ2lvbikuIAogMyByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDEgcmVjb3JkcyBmcm9tIEZyZWlidXJnZXIgVGFnIGRlciBBcnRlbnZpZWxmYWx0LiAKIDEgcmVjb3JkcyBmcm9tIENvbnNvcnRpdW0gb2YgQ2FsaWZvcm5pYSBIZXJiYXJpYS4gCiAyIHJlY29yZHMgZnJvbSBDT05OLiAKIDMgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFueSBEaXZpc2lvbiwgWWFsZSBQZWFib2R5IE11c2V1bS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIFNvY2nDqXTDqSBkZXMgU2NpZW5jZXMgTmF0dXJlbGxlcyBldAoJCU1hdGjDqW1hdGlxdWVzIGRlIENoZXJib3VyZyAoQ0hFKS4gCiAxIHJlY29yZHMgZnJvbSBTeXNUYXggLSBIZXJiYXJpYS4gCiAzIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEVzcMOoY2VzIFbDqWfDqXRhbGVzIE1lbmFjw6llcyBkZSBGcmFuY2UgbcOpdHJvcG9saXRhaW5lLiAKIDEgcmVjb3JkcyBmcm9tIEVESVQgLSBBVEJJIGluIE1lcmNhbnRvdXIvQWxwaSBNYXJpdHRpbWUgKEZyYW5jZS9JdGFseSkuIAogNCByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25zIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGR1IEJhc3NpbiBwYXJpc2llbi4uIAogMSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkZSBsJ0Fpbi4gCiA1IHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDEgcmVjb3JkcyBmcm9tIEhlcnRmb3Jkc2hpcmUgTmF0dXJhbCBIaXN0b3J5IFNvY2lldHkgRmxvcmEgR3JvdXAgLSBIZXJ0Zm9yZHNoaXJlIEZsb3JhIFN1cnZleSBSZWNvcmRzIDE5ODctMjAwNS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChBTFRBKS4gCiA1NiByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMTAgcmVjb3JkcyBmcm9tIEx1bmQgQm90YW5pY2FsIE11c2V1bSAoTEQpLiAKIDQgcmVjb3JkcyBmcm9tIE5NTkggb2NjdXJyZW5jZSBEd0MtQS4gCiAxIHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiA0IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gWEFMIGRlbCBJbnN0aXR1dG8gZGUgRWNvbG9nw61hLCBBLkMuLCBNw6l4aWNvIChJRS1YQUwpLiAKIDIgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogNCByZWNvcmRzIGZyb20gRWNvUmVjb3JkIC0gVmFzY3VsYXIgcGxhbnQgcmVjb3JkcyBoZWxkIGJ5IEVjb1JlY29yZCBmb3IgdGhlIEJpcm1pbmdoYW0gYW5kIHRoZSBCbGFjayBDb3VudHJ5IGFyZWEgY29sbGF0ZWQgcHJpb3IgdG8gTWFyY2ggMjAxMy4gCiAyIHJlY29yZHMgZnJvbSBSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFJvdGhlcmhhbSBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gTm9uLXNlbnNpdGl2ZSBSZWNvcmRzIGZyb20gYWxsIHRheG9ub21pYyBncm91cHMuIAogMSByZWNvcmRzIGZyb20gRHIgRnJhbmNpcyBSb3NlIEZpZWxkIE5vdGVib29rIFByb2plY3QgLSBGaWVsZCBOb3RlYm9vayBSZWNvcmRzIG9mIERyIEZyYW5jaXMgUm9zZSAxOTUwJ3MgdG8gMTk5MCdzLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gQ2hhbmdpbmcgRmxvcmEgb2YgR2xhc2dvdyAxOTgyLTIwMDAuIAogOSByZWNvcmRzIGZyb20gT0hOLiAKIDMgcmVjb3JkcyBmcm9tIE5vcnRoICZhbXA7IEVhc3QgWW9ya3NoaXJlIEVjb2xvZ2ljYWwgRGF0YSBDZW50cmUgLSBOb3J0aCBhbmQgRWFzdCBZb3Jrc2hpcmUgRWNvbG9naWNhbCBEYXRhIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAuIAogMSByZWNvcmRzIGZyb20gQmVyZ2thbWVuLSBCZXJnZWhhbGRlIEdyb8OfZXMgSG9sei4gCiA5IHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogODYgcmVjb3JkcyBmcm9tIEFydGRhdGEuIAogMiByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMiByZWNvcmRzIGZyb20gTmV3IFplYWxhbmQgTmF0aW9uYWwgUGxhbnQgSGVyYmFyaXVtIChDSFIpLiAKIDEgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMSByZWNvcmRzIGZyb20gVGhlIEZsb3JhIG9mIENvdW50eSBXZXhmb3JkLiAKIDUgcmVjb3JkcyBmcm9tIFN1ZmZvbGsgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFN1ZmZvbGsgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAoU0JSQykgZGF0YXNldC4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTG9uZG9uKSBDb2xsZWN0aW9uIFNwZWNpbWVucy4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdhdGVyZm9yZC4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgKEkwOTMpIDogRmxvcmUgZHUgTWFzc2lmIEFybW9yaWNhaW4uIAogMSByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGNvbGxlY3Rpb24gKFApIG9mIHRoZSBNdXPDqXVtIG5hdGlvbmFsIGQnSGlzdG9pcmUgTmF0dXJlbGxlIChNTkhOIC0gUGFyaXMpLiAKIDEgcmVjb3JkcyBmcm9tIE1lcnNleXNpZGUgQmlvQmFuayAtIE5vcnRoIE1lcnNleXNpZGUgRmxvd2VyaW5nIFBsYW50cyAodmVyaWZpZWQpLiAKIDM3IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDIgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDEgcmVjb3JkcyBmcm9tIE1lcnNleXNpZGUgQmlvQmFuayAtIE5vcnRoIE1lcnNleXNpZGUgRmxvd2VyaW5nIFBsYW50cyAodW52ZXJpZmllZCkuIAogMSByZWNvcmRzIGZyb20gQnJpc3RvbCBSZWdpb25hbCBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gQlJFUkMgT2N0b2JlciAyMDA5LiAKIDIgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIENvbnNvcnRpdW0gb2YgQ2FsaWZvcm5pYSBIZXJiYXJpYS4gCiAxMzggcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIEZpZWxkam91cm5hbC5vcmcgb2JzZXJ2YXRpb24gZGF0YWJhc2UuIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIHNwZWNpbWVucyBvZiBIZXJiaWVycyBVbml2ZXJzaXRhaXJlcyBkZQoJCUNsZXJtb250LUZlcnJhbmQgKENMRikuIAogMiByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgT3NsbyAoTykuIAogMSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiAtIFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbiBIZXJiYXJpdW0gKFdUVSkuIAogMSByZWNvcmRzIGZyb20gU2hlZmZpZWxkIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBTaGVmZmllbGQgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZS0gTm9uLXNlbnNpdGl2ZSBSZWNvcmRzIGZyb20gYWxsIHRheG9ub21pYyBncm91cHMuIC4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIFVpQi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:11:36Z","doi":"10.15468/DL.VIJTWU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/lmznjw","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dipjcr","References:DOI:10.15468/kllkyl","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/9axq0b","References:DOI:10.15468/wtlymk"],"publicationYear":"2015"},{"minted":"2015-04-08T05:11:57Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnRsZHZxaTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMjEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d0bHltazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lndHV0eDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BqMnlyaDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L21iaG1tdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tlMm9keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2trYjJ4MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2p4YmhxeDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3pybHFvazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2dqYTRqbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93OGdydTU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9sbXpuanc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC85YXhxMGI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ia3p2MWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rODh2anE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93cXNhZDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTkwMTQxNzwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTE2MDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYW1wYW51bGEgbGF0aWZvbGlhIEwuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxMTYwOCByZWNvcmRzIGZyb20gMTE5IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgaW4gIldpbGR0aWVybGFuZCIuIAogNyByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogMTEgcmVjb3JkcyBmcm9tIE1lcnNleXNpZGUgQmlvQmFuayAtIE5vcnRoIE1lcnNleXNpZGUgRmxvd2VyaW5nIFBsYW50cyAodmVyaWZpZWQpLiAKIDI3IHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiA0ODEgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogNzAgcmVjb3JkcyBmcm9tIFNvdXRoIEVhc3QgV2FsZXMgQmlvZGl2ZXJzaXR5IFJlY29yZHMgQ2VudHJlIC0gQ0NXIFJlZ2lvbmFsIERhdGEgOiBTb3V0aCBFYXN0IFdhbGVzIE5vbi1zZW5zaXRpdmUgU3BlY2llcyBSZWNvcmRzLiAKIDQ3NyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBPc2xvIChPKS4gCiAxIHJlY29yZHMgZnJvbSBJQkYgTW9uaXRvcmluZyBvZiBWYXNjdWxhciBQbGFudHMuIAogNiByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogNzAgcmVjb3JkcyBmcm9tIE9ITi4gCiAxIHJlY29yZHMgZnJvbSBGYXVuLiAKIDIwNyByZWNvcmRzIGZyb20gUm90aGVyaGFtIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy1IaXN0w7NyaWNvLiAKIDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgTXVzZXVtIG9mIEFyY2hhZW9sb2d5LCBVbml2ZXJzaXR5IG9mIFN0YXZhbmdlci4gCiA0IHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogNTggcmVjb3JkcyBmcm9tIFN0YWZmb3Jkc2hpcmUgRWNvbG9naWNhbCBSZWNvcmQgLSBTRVIgU2l0ZS1iYXNlZCBTdXJ2ZXlzLiAKIDU5IHJlY29yZHMgZnJvbSBUaGUgSGltYWxheWFuIFVwbGFuZHMgUGxhbnQgZGF0YWJhc2UgKEhVUCBWZXJzaW9uIDEpLiAKIDIgcmVjb3JkcyBmcm9tIFN0YWZmb3Jkc2hpcmUgRWNvbG9naWNhbCBSZWNvcmQgLSBTRVIgU3BlY2llcy1iYXNlZCBTdXJ2ZXlzLiAKIDE4MiByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBCb3RhbnkgVW5pdCwgRmlubmlzaCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IChIKS4gCiAxIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBOYXR1cmUgQ29uc2VydmFuY3kgQ291bmNpbCBPeGZvcmRzaGlyZSBGZW4gU3VydmV5IDE5ODMgKGFzIGhlbGQgYnkgVGhhbWVzIFZhbGxleSBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlKS4gCiAyIHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogMTggcmVjb3JkcyBmcm9tIEhlcnRmb3Jkc2hpcmUgTmF0dXJhbCBIaXN0b3J5IFNvY2lldHkgRmxvcmEgR3JvdXAgLSBIZXJ0Zm9yZHNoaXJlIEZsb3JhIFN1cnZleSBSZWNvcmRzIDE5ODctMjAwNS4gCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBIZXJiYXJpdW0sIE5NQlUuIAogMTAgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW5pY2FsIE11c2V1bSwgVW5pdmVyc2l0eSBvZiBPdWx1LCBGaW5sYW5kIChPVUxVKS4gCiAxIHJlY29yZHMgZnJvbSBEciBGcmFuY2lzIFJvc2UgRmllbGQgTm90ZWJvb2sgUHJvamVjdCAtIEZpZWxkIE5vdGVib29rIFJlY29yZHMgb2YgRHIgRnJhbmNpcyBSb3NlIDE5NTAncyB0byAxOTkwJ3MuIAogNTQgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gQ2hhbmdpbmcgRmxvcmEgb2YgR2xhc2dvdyAxOTgyLTIwMDAuIAogMiByZWNvcmRzIGZyb20gRkxPUklWT04uIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIFVuaXZlcnNpdHkgb2YgQmlhxYJ5c3RvayAtIFZhc2N1bGFyIFBsYW50cy4gCiAxNDQ4IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZSBhZGRpdGlvbnMgc2luY2UgMjAwMC4gCiA0IHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAzIHJlY29yZHMgZnJvbSBBcmFuemFkaSBaaWVudHppIEVsa2FydGVhLiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiAxODggcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIFRyb25kaGVpbSAoVFJIKS4gCiA1IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMyByZWNvcmRzIGZyb20gVHVsbGllIEhvdXNlIE11c2V1bSAtIFR1bGxpZSBIb3VzZSBNdXNldW0uIEN1bWJyaWEgV2lsZGxpZmUgVHJ1c3Qgc3VydmV5IHJlY29yZHMgZnJvbSAxOTcwIC0gMjAwNyBvZiBDdW1icmlhIFdpbGRsaWZlIFNpdGVzLiBWYXJpb3VzLi4gCiAxIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAxIHJlY29yZHMgZnJvbSBDT05OLiAKIDIgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBIZXJiYXJpdW0gKEUpLiAKIDEzIHJlY29yZHMgZnJvbSBHcmVhdGVyIE1hbmNoZXN0ZXIgRWNvbG9neSBVbml0IC0gSGlnaGVyIFBsYW50IFJlY29yZHMgRnJvbSBHcmVhdGVyIE1hbmNoZXN0ZXIuIAogMjU5IHJlY29yZHMgZnJvbSBOb3J0aCAmYW1wOyBFYXN0IFlvcmtzaGlyZSBFY29sb2dpY2FsIERhdGEgQ2VudHJlIC0gTm9ydGggYW5kIEVhc3QgWW9ya3NoaXJlIEVjb2xvZ2ljYWwgRGF0YSBDZW50cmUgLSBOb24tc2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gLiAKIDEwOSByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIExvdWlzLU1hcmllIChRRkEpIC0gQ29sbGVjdGlvbiBkZSBwbGFudGVzIHZhc2N1bGFpcmVzLiAKIDEgcmVjb3JkcyBmcm9tIFdJSSBIZXJiYXJpdW0gRGF0YXNldC4gCiAxIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiA0MCByZWNvcmRzIGZyb20gQlNCSSB0ZXRyYWQgZGF0YSBmb3IgSXJlbGFuZC4gCiA1IHJlY29yZHMgZnJvbSBOb3J0aCBBeXJzaGlyZSBDb3VudHJ5c2lkZSBSYW5nZXIgU2VydmljZSAtIFNwZWNpZXMgd2l0aGluIE5vcnRoIEF5cnNoaXJlIGZyb20gMTk4NCAtIFByZXNlbnQuIAogMyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFJob2VubXVzZXVtIEZsYWR1bmdlbi4gCiA1IHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgY29sbGVjdGlvbiAoUCkgb2YgdGhlIE11c8OpdW0gbmF0aW9uYWwgZCdIaXN0b2lyZSBOYXR1cmVsbGUgKE1OSE4gLSBQYXJpcykuIAogMzY4IHJlY29yZHMgZnJvbSBCaW9Gb2t1cy4gCiAxIHJlY29yZHMgZnJvbSBVU1UtVVRDIFNwZWNpbWVuIERhdGFiYXNlLiAKIDIyNyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBUcm9uZGhlaW0gKFRSSCkuIAogMSByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogNSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBBdGxhcyBkZSBsYSBmbG9yZSBkZSBMb3JyYWluZS4gCiA3IHJlY29yZHMgZnJvbSBGbG9yYSBvZiB0aGUgU3RvxYJvd2UgTXRzLi4gCiA3IHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2V2aWxsYSwgU0VWLiAKIDc4IHJlY29yZHMgZnJvbSBTaHJvcHNoaXJlIEVjb2xvZ2ljYWwgRGF0YSBOZXR3b3JrIC0gU2hyb3BzaGlyZSBFY29sb2dpY2FsIERhdGEgTmV0d29yayBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgaW4gRGVubWFyayByZWNvcmRlZCB1bmRlciB0aGUgVGhlIE5hdGlvbndpZGUgTW9uaXRvcmluZyBhbmQgQXNzZXNzbWVudCBQcm9ncmFtbWUgZm9yIHRoZSBBcXVhdGljIGFuZCBUZXJyZXN0cmlhbCBFbnZpcm9ubWVudHMgKE5PVkFOQSkuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogOSByZWNvcmRzIGZyb20gU2NvdHRpc2ggV2lsZGxpZmUgVHJ1c3QgLSBDb21taXNzaW9uZWQgc3VydmV5cyBhbmQgc3RhZmYgc3VydmV5cyBhbmQgcmVwb3J0cyBmb3IgU1dUIHJlc2VydmVzLiAuIAogNCByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMyByZWNvcmRzIGZyb20gU0JULUxpdmluZy4gCiAxMiByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBGaWVsZCBub3RlcywgQWdkZXIgbmF0dXJtdXNldW0gKEtNTikuIAogNiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAyMCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDMgcmVjb3JkcyBmcm9tIFdpbHRzaGlyZSBhbmQgU3dpbmRvbiBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gV2lsdHNoaXJlICZhbXA7IFN3aW5kb24gU2l0ZS1iYXNlZCBTdXJ2ZXkgUmVjb3Jkcy4gCiAxNSByZWNvcmRzIGZyb20gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIChTQlJDKSBkYXRhc2V0LiAKIDUgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogMyByZWNvcmRzIGZyb20gVmVnZXRhdGlvbiBkYXRhIGZyb20gcHJvdGVjdGVkIGFyZWFzIGluIERlbm1hcmsgKMKnIDMgaW4gdGhlIERhbmlzaCBOYXR1cmUgUHJvdGVjdGlvbiBBY3QpLiAKIDExIHJlY29yZHMgZnJvbSBTaGVmZmllbGQgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFNoZWZmaWVsZCBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlLSBOb24tc2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gLiAKIDEyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgSnl2w6Rza3lsw6QgVW5pdmVyc2l0eSBNdXNldW0uIAogMjEgcmVjb3JkcyBmcm9tIEZsb3JhYmFuazEgLSBBIGdyaWQtYmFzZWQgZGF0YWJhc2Ugb24gdmFzY3VsYXIgcGxhbnQgIGRpc3RyaWJ1dGlvbiBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiBCZWxnaXVtIChGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgcmVnaW9uKS4gCiAxIHJlY29yZHMgZnJvbSBOb3JkaWMgR2VuZXRpYyBSZXNvdXJjZXMuIAogNjczIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBPc2xvIChPKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBIU1MgRmluY2EgTGEgT3JkZW4tVmFsZGVzZXF1ZXJhIChDSUNZVEVYKS4gR29iaWVybm8gZGUgRXh0cmVtYWR1cmEuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgQmFyY2Vsb25hLiBHcnVwIGRJbnZlc3RpZ2FjacOzIEdlb2JvdMOhbmljYSBpIENhcnRvZ3JhZmlhIGRlIGxhIFZlZ2V0YWNpw7MuIAogMTMgcmVjb3JkcyBmcm9tIGJvdGFuaWNhbGNvbGxlY3Rpb24uIAogMiByZWNvcmRzIGZyb20gU2NvdHRpc2ggQm9yZGVycyBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU1dUIFNjb3R0aXNoIEJvcmRlcnMgTG9jYWwgV2lsZGxpZmUgU2l0ZSBTdXJ2ZXkgZGF0YSAxOTk2LTIwMDAgLSBzcGVjaWVzIGluZm9ybWF0aW9uLiAKIDIgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZGUgbCdBaW4uIAogMiByZWNvcmRzIGZyb20gR2VvZ3JhcGhpY2FsbHkgdGFnZ2VkIElOU0RDIHNlcXVlbmNlcy4gCiAyIHJlY29yZHMgZnJvbSBZb3Jrc2hpcmUgV2lsZGxpZmUgVHJ1c3QgLSBZb3Jrc2hpcmUgV2lsZGxpZmUgVHJ1c3QgLSBOb24tc2Vuc2l0aXZlIHJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gCiA1MzIgcmVjb3JkcyBmcm9tIE5vcndlZ2lhbiBTcGVjaWVzIE9ic2VydmF0aW9uIFNlcnZpY2UuIAogMSByZWNvcmRzIGZyb20gR2Vsw6RuZGUgZGVyIExhaG50YWxzY2h1bGUgQmllZGVua29wZiB1bmQgTGFobmF1ZW4uIAogMTg2OSByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiAxNCByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMjQyIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIFNvY2nDqXTDqSBkZXMgU2NpZW5jZXMgTmF0dXJlbGxlcyBldAoJCU1hdGjDqW1hdGlxdWVzIGRlIENoZXJib3VyZyAoQ0hFKS4gCiAxNjIgcmVjb3JkcyBmcm9tIEZsb3Jpc3RpYyBEYXRhYmFzZXMgb2YgTWVja2xlbmJ1cmctUG9tZXJhbmlhIC0gSGlnaGVyIFBsYW50cy4gCiAyOCByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSwgRmlubGFuZCAoVFVSKS4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gKMOFYm8gQWthZGVtaSksIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1IChUVVJBKS4gCiAxMyByZWNvcmRzIGZyb20gV2V0bGFuZCBJbnZlbnRvcnkgKE5WKS4gCiAxIHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMSByZWNvcmRzIGZyb20gRWNvUmVjb3JkIC0gVmFzY3VsYXIgcGxhbnQgcmVjb3JkcyBoZWxkIGJ5IEVjb1JlY29yZCBmb3IgdGhlIEJpcm1pbmdoYW0gYW5kIHRoZSBCbGFjayBDb3VudHJ5IGFyZWEgY29sbGF0ZWQgcHJpb3IgdG8gTWFyY2ggMjAxMy4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDggcmVjb3JkcyBmcm9tIER1dGNoIFZlZ2V0YXRpb24gRGF0YWJhc2UgKExWRCkuIAogMSByZWNvcmRzIGZyb20gTm9ydGhlcm4gSXJlbGFuZCBFbnZpcm9ubWVudCBBZ2VuY3kgLSBFSFMgU3BlY2llcyBEYXRhc2V0cy4gCiA2OCByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnQgaGVyYmFyaXVtLCBBZ2RlciBuYXR1cm11c2V1bSBvZyBib3Rhbmlza2UgaGFnZS4gCiA0IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBUcm9ja2VucmFzZW4gdW5kIEJ1Y2hlbndhbGQgaW4gZGVyIFVtZ2VidW5nIGRlciBKdWdlbmRoZXJiZXJnZSBCYWQgQmxhbmtlbmJ1cmcuIAogMzAyMyByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UuIAogMSByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDMgcmVjb3JkcyBmcm9tIFRoZSBGdW5nYWwgQ29sbGVjdGlvbiBhdCB0aGUgU2VuY2tlbmJlcmcgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBHw7ZybGl0ei4gCiAxIHJlY29yZHMgZnJvbSBOaWptZWdlbiBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChOTCkgLSBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgSGVyYmllcnMgVW5pdmVyc2l0YWlyZXMgZGUKCQlDbGVybW9udC1GZXJyYW5kIChDTEYpLiAKIDE2IHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIExpdmluZyBQbGFudCBDb2xsZWN0aW9ucyAoRSkuIAogNyByZWNvcmRzIGZyb20gRmllbGRqb3VybmFsLm9yZyBvYnNlcnZhdGlvbiBkYXRhYmFzZS4gCiA1IHJlY29yZHMgZnJvbSBCcmlzdG9sIFJlZ2lvbmFsIEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBCUkVSQyBPY3RvYmVyIDIwMDkuIAogMiByZWNvcmRzIGZyb20gQm90YW55IHJlZ2lzdHJhdGlvbiBkYXRhYmFzZSBieSBEYW5pc2ggYm90YW5pc3RzLiAKIDE1NiByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBVaUIuIAogNiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTG9uZG9uKSBDb2xsZWN0aW9uIFNwZWNpbWVucy4gCiAxIHJlY29yZHMgZnJvbSBFY29mYWN0LiAKIDQ0IHJlY29yZHMgZnJvbSBKb3JkYWwuIAogMTMgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBDb2xsZWN0aW9uLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:11:57Z","doi":"10.15468/DL.TLDVQI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/ypoair","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/lmznjw","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/9axq0b","References:DOI:10.15468/bkzv1l","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T05:12:00Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmhkanVqZDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMjAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L21iaG1tdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2w4dnBheTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2trYjJ4MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wajJ5cmg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC94bmxia2U8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC95cG9haXI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9namE0am88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41ODg2LzJmdmE1cDRyPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvd3RseW1rPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvazNtMXFjPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvaWF3b2R5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvdzhncnU1PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZHFiOXphPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZzF3ZmFlPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvanhiaHF4PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvenJscW9rPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuNTUxOS8wMDAyOTY1PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvMmc2aTB2PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvYWh1bmhvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvYzR3NGNvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvOWF4cTBiPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgva2xsa3lsPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvbG16bmp3PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvcmh6cnh3PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvd3FzYWQ5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDwvcmVsYXRlZElkZW50aWZpZXJzPgogICAgPHNpemVzPgogICAgICAgIDxzaXplPjI1NTQ0NDA8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDE2NjA0IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIGdsb21lcmF0YSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMTY2MDQgcmVjb3JkcyBmcm9tIDE3MiBjb25zdGl0dWVudCBkYXRhc2V0czogCiA0IHJlY29yZHMgZnJvbSBWYXNjdWxhciBIZXJiYXJpdW0sIE5NQlUuIAogMzcgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogOTkgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBpbiBEZW5tYXJrIHJlY29yZGVkIHVuZGVyIHRoZSBUaGUgTmF0aW9ud2lkZSBNb25pdG9yaW5nIGFuZCBBc3Nlc3NtZW50IFByb2dyYW1tZSBmb3IgdGhlIEFxdWF0aWMgYW5kIFRlcnJlc3RyaWFsIEVudmlyb25tZW50cyAoTk9WQU5BKS4gCiAxMCByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgUMO6YmxpY2EgZGUgTmF2YXJyYSwgUGFtcGxvbmE6IFVQTkEtSC4gCiAyIHJlY29yZHMgZnJvbSBFLiBDLiBTbWl0aCBIZXJiYXJpdW0gKEFDQUQpLiAKIDYgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBWYXNjdWxhciBQbGFudHMgQ29sbGVjdGlvbiBvZiB0aGUgVW5pdmVyc2l0eSBvZiBFeHRyZW1hZHVyYSAoU3BhaW4pLiAKIDcgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAyIHJlY29yZHMgZnJvbSBUaGUgSGltYWxheWFuIFVwbGFuZHMgUGxhbnQgZGF0YWJhc2UgKEhVUCBWZXJzaW9uIDEpLiAKIDY5MiByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDEgcmVjb3JkcyBmcm9tIEZsb3JhIHVuZCBGYXVuYSBpbiB1bnNlcmVyIEtpdGEuIAogMjQ0IHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogMSByZWNvcmRzIGZyb20gTmF0dXIgZXJsZWJlbiBydW5kIHVtIGRlbiBTZW1pbmFyYmF1ZXJuaG9mIEd1dCBIb2hlbmJlcmcuIAogMzcgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgRmVsZGJlb2JhY2h0dW5nc2RhdGVuIFBmbGFuemVuLiAKIDEgcmVjb3JkcyBmcm9tIEdFTy1UYWcgbWl0IGRlciBOQUpVIGRlcyBMYW5ka3JlaXNlcyBBaHJ3ZWlsZXIgYW0gQmF1c2VuYmVyZy4gCiAxIHJlY29yZHMgZnJvbSBLb2xlb3B0ZXJvbG9nZW4gYW0gQmF1c2VuYmVyZy4gCiA0IHJlY29yZHMgZnJvbSBDT05OLiAKIDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIFRyb25kaGVpbSAoVFJIKS4gCiAxIHJlY29yZHMgZnJvbSBQZXJjaHRvbGRzZG9yZmVyIEhlaWRlLiAKIDQzNCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBGcmFuY28tQmVsZ2UuIAogOCByZWNvcmRzIGZyb20gUm90aGVyaGFtIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gU05IIFNpdGUgQ29uZGl0aW9uIE1vbml0b3JpbmcgLSBWYXNjdWxhciBwbGFudHMgKDIwMDAtMjAwNikuIAogMSByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLUhpc3TDs3JpY28uIAogMTU0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFuaWNhbCBNdXNldW0sIFVuaXZlcnNpdHkgb2YgT3VsdSwgRmlubGFuZCAoT1VMVSkuIAogNzUgcmVjb3JkcyBmcm9tIERyIEZyYW5jaXMgUm9zZSBGaWVsZCBOb3RlYm9vayBQcm9qZWN0IC0gRmllbGQgTm90ZWJvb2sgUmVjb3JkcyBvZiBEciBGcmFuY2lzIFJvc2UgMTk1MCdzIHRvIDE5OTAncy4gCiAzNDg0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFueSBVbml0LCBGaW5uaXNoIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkgKEgpLiAKIDQ4IHJlY29yZHMgZnJvbSBEb3JzZXQgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIERvcnNldCBTU1NJIFNwZWNpZXMgUmVjb3JkcyAxOTUyIC0gMjAwNCAoTmF0dXJhbCBFbmdsYW5kKS4gCiAzIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiA0IHJlY29yZHMgZnJvbSBDb3VudHJ5c2lkZSBDb3VuY2lsIGZvciBXYWxlcyAtIFBoYXNlIDIgTG93bGFuZCBHcmFzc2xhbmQgU3VydmV5IG9mIFdhbGVzLiAKIDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgTXVzZXVtIG9mIEFyY2hhZW9sb2d5LCBVbml2ZXJzaXR5IG9mIFN0YXZhbmdlci4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBNw6FsYWdhOiBNR0MtQ29ybW9mLiAKIDc0IHJlY29yZHMgZnJvbSBIZXJ0Zm9yZHNoaXJlIE5hdHVyYWwgSGlzdG9yeSBTb2NpZXR5IEZsb3JhIEdyb3VwIC0gSGVydGZvcmRzaGlyZSBGbG9yYSBTdXJ2ZXkgUmVjb3JkcyAxOTg3LTIwMDUuIAogOCByZWNvcmRzIGZyb20gVHVsbGllIEhvdXNlIE11c2V1bSAtIFR1bGxpZSBIb3VzZSBNdXNldW0uIEN1bWJyaWEgV2lsZGxpZmUgVHJ1c3Qgc3VydmV5IHJlY29yZHMgZnJvbSAxOTcwIC0gMjAwNyBvZiBDdW1icmlhIFdpbGRsaWZlIFNpdGVzLiBWYXJpb3VzLi4gCiA4MiByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAyIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIFBsYW50YWUsIFRBSUYgKFRhaXdhbiBlLUxlYXJuaW5nIGFuZCBEaWdpdGFsIEFyY2hpdmVzIFByb2dyYW0sIFRFTERBUCkuIAogNiByZWNvcmRzIGZyb20gTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmdhcnRlbiBMYW5nZW5ob2x0ZW5zZW4uIAogMTIgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiA0IHJlY29yZHMgZnJvbSBDYW5hZGlhbiBNdXNldW0gb2YgTmF0dXJlIEhlcmJhcml1bS4gCiAzMyByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogNTYgcmVjb3JkcyBmcm9tIE5vcnRoICZhbXA7IEVhc3QgWW9ya3NoaXJlIEVjb2xvZ2ljYWwgRGF0YSBDZW50cmUgLSBOb3J0aCBhbmQgRWFzdCBZb3Jrc2hpcmUgRWNvbG9naWNhbCBEYXRhIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAuIAogMSByZWNvcmRzIGZyb20gTWVyc2V5c2lkZSBCaW9CYW5rIC0gTm9ydGggTWVyc2V5c2lkZSBGbG93ZXJpbmcgUGxhbnRzICh2ZXJpZmllZCkuIAogMSByZWNvcmRzIGZyb20gTGViZW4gaW0gRmlua2Vuc3RlaW5lciBNb29yLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBVbml2ZXJzaXR5IG9mIEJpYcWCeXN0b2sgLSBWYXNjdWxhciBQbGFudHMuIAogNzggcmVjb3JkcyBmcm9tIENhcm5ldCBlbiBMaWduZS4gCiAxIHJlY29yZHMgZnJvbSBFcHBpbmdlbiB1bmQgVW1nZWJ1bmcuIAogMSByZWNvcmRzIGZyb20gTGF1YmVuaGVpbWVyIEJvZGVuaGVpbWVyIFJpZWQgLSB2b24gU3Ryb210YWx3aWVzZW4gdW5kIEZsdXRyYXNlbi4gCiAxIHJlY29yZHMgZnJvbSBWRkQtSC4gSGVpZGVucm9kOiBNw6Rod2VpZGUgaW0gV2Fzc2Vyc2NodXR6Z2ViaWV0LiAKIDE1IHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiA1NCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkdSBMaW1vdXNpbi4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAxMjkgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIEhlcmJhcml1bSAoRSkuIAogMSByZWNvcmRzIGZyb20gSGFsYmVyZyBiZWkgTmV1bW9yc2NoZW4uIAogMiByZWNvcmRzIGZyb20gTmF0aW9uYWwgU3lzdGVtIG9mIFByb3RlY3RlZCBBcmVhcyBpbiBQb2xhbmQgLSBQbGFudHMuIAogNCByZWNvcmRzIGZyb20gRXN0b25pYW4gTmF0dXJlIE9ic2VydmF0aW9ucyBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBUaGUgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiBhdCB0aGUgQm90YW5pc2NoZSBTdGFhdHNzYW1tbHVuZyBNw7xuY2hlbi4gCiAxIHJlY29yZHMgZnJvbSBTY2hsZXJuIC0gKEJvemVuKS4gCiAzIHJlY29yZHMgZnJvbSBHZW9ncmFwaGljYWxseSB0YWdnZWQgSU5TREMgc2VxdWVuY2VzLiAKIDggcmVjb3JkcyBmcm9tIFlvcmtzaGlyZSBXaWxkbGlmZSBUcnVzdCAtIFlvcmtzaGlyZSBXaWxkbGlmZSBUcnVzdCAtIE5vbi1zZW5zaXRpdmUgcmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAKIDEgcmVjb3JkcyBmcm9tIFBoYW5lcm9nYW1pYyBCb3RhbmljYWwgQ29sbGVjdGlvbnMgKFMpLiAKIDg0IHJlY29yZHMgZnJvbSBBdGxhcyBkZXMgcGxhbnRlcyB2YXNjdWxhaXJlcyBkZSBMb3JyYWluZS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1ci1FcmxlYm5pcy1LaW5kZXJnYXJ0ZW4gIFdhbGRraXJjaGVuL0VyemdlYmlyZ2UuIAogMzQgcmVjb3JkcyBmcm9tIEZsb3JhIGQnQW5kb3JyYS4gCiAyMzEgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDIxMTYgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMTQgcmVjb3JkcyBmcm9tIFNvdXRoIEVhc3QgV2FsZXMgQmlvZGl2ZXJzaXR5IFJlY29yZHMgQ2VudHJlIC0gQ0NXIFJlZ2lvbmFsIERhdGEgOiBTb3V0aCBFYXN0IFdhbGVzIE5vbi1zZW5zaXRpdmUgU3BlY2llcyBSZWNvcmRzLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6Z2ViaWV0IEJhdXNlbmJlcmcgKE5pZWRlcnppc3NlbikuIAogMSByZWNvcmRzIGZyb20gVGhlIERpc3RyaWJ1dGlvbiBBdGxhcyBvZiBCdXR0ZXJmbGllcyBpbiBQb2xhbmQuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFdpbGxpbmcuIAogMTExIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgSnl2w6Rza3lsw6QgVW5pdmVyc2l0eSBNdXNldW0uIAogMTE1NyByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25zIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGR1IEJhc3NpbiBwYXJpc2llbi4uIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDEyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBBZ2RlciBuYXR1cm11c2V1bSAoS01OKS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIE1hbml0b2JhIEhlcmJhcml1bSAoV0lOKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogOCByZWNvcmRzIGZyb20gVGhhbWVzIFZhbGxleSBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gTG9jYWwgV2lsZGxpZmUgU2l0ZSBTdXJ2ZXlzIEJlcmtzaGlyZS4gCiA1NSByZWNvcmRzIGZyb20gT0hOLiAKIDY2MiByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMTEgcmVjb3JkcyBmcm9tIFZlZ2V0YXRpb24gZGF0YSBmcm9tIHByb3RlY3RlZCBhcmVhcyBpbiBEZW5tYXJrICjCpyAzIGluIHRoZSBEYW5pc2ggTmF0dXJlIFByb3RlY3Rpb24gQWN0KS4gCiAzMyByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiAyIHJlY29yZHMgZnJvbSBIZXJiaWVyIExvdWlzLU1hcmllIChRRkEpIC0gQ29sbGVjdGlvbiBkZSBwbGFudGVzIHZhc2N1bGFpcmVzLiAKIDEgcmVjb3JkcyBmcm9tIERhbmllbHNiZXJnIChNw7ZsbHRhbCwgS8Okcm50ZW4pLiAKIDE4MCByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBPc2xvIChPKS4gCiAxMCByZWNvcmRzIGZyb20gQ0lCSU8sIEFsaWNhbnRlOkFCSC1HQklGLiAKIDE2MSByZWNvcmRzIGZyb20gSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzLiAKIDMgcmVjb3JkcyBmcm9tIFNoZWZmaWVsZCBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU2hlZmZpZWxkIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAuIAogNyByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIE11c2V1bXMsIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiA5OCByZWNvcmRzIGZyb20gQmFuY28gZGUgRGF0b3MgZGUgbGEgQmlvZGl2ZXJzaWRhZCBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYS4gCiA1MyByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMTEgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIChJMDkzKSA6IEZsb3JlIGR1IE1hc3NpZiBBcm1vcmljYWluLiAKIDEgcmVjb3JkcyBmcm9tIFVtZ2VidW5nIGRlciBHZXNhbXRzY2h1bGUgV2ludGVyaHVkZSAoSGFtYnVyZykuIAogMiByZWNvcmRzIGZyb20gU0JULUxpdmluZy4gCiAxIHJlY29yZHMgZnJvbSBCYXllcmlzY2hlIERvbmF1IC0gQmxpbmRoZWltIERvbmF1YnLDvGNrZS4gCiAxMTQgcmVjb3JkcyBmcm9tIE5vcndlZ2lhbiBTcGVjaWVzIE9ic2VydmF0aW9uIFNlcnZpY2UuIAogMSByZWNvcmRzIGZyb20gIkxhdWJlbmhlaW1lciBCb2RlbmhlaW1lciBSaWVkIiAtIHZvbiBTdHJvbXRhbHdpZXNlbiB1bmQgRmx1dHJhc2VuLiAKIDEgcmVjb3JkcyBmcm9tIFdlc3RlcnfDpGxkZXIgVW13ZWx0LSB1bmQgTmF0dXJzY2h1dHp0YWcgTGltZXNnZW1laW5kZSBIaWxsc2NoZWlkLiAKIDI4IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMSByZWNvcmRzIGZyb20gSC5BLiBTdGVwaGVucyBIZXJiYXJpdW0uIAogNjAgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDI0IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDIzIHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMjEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIChGUikuIAogMSByZWNvcmRzIGZyb20gQmlvc3Bow6RyZW5wYXJrIFdpZW5lcndhbGQgLSBQZmFmZnN0w6R0dGVuLiAKIDEgcmVjb3JkcyBmcm9tIFVBTSBIZXJiYXJpdW0gKEFMQSksIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gKEFyY3RvcykuIAogMTg0IHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogMSByZWNvcmRzIGZyb20gU2FocmJhY2h0YWwgS3JlaXMgQWhyd2VpbGVyLiAKIDIxIHJlY29yZHMgZnJvbSBEdXRjaCBWZWdldGF0aW9uIERhdGFiYXNlIChMVkQpLiAKIDQ0IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBPc2xvIChPKS4gCiA3IHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChBTFRBKS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0emdlYmlldCBCYXVzZW5iZXJnLiAKIDIgcmVjb3JkcyBmcm9tIENvdW50cnlzaWRlIENvdW5jaWwgZm9yIFdhbGVzIC0gV2Vsc2ggSW52ZXJ0ZWJyYXRlIERhdGFiYXNlIChXSUQpLiAKIDYgcmVjb3JkcyBmcm9tIEphcmTDrW4gQm90w6FuaWNvIGRlIEPDs3Jkb2JhOiBIZXJiYXJpdW0gQ09BLiAKIDggcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gUmhvZW5tdXNldW0gRmxhZHVuZ2VuLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSBCb3RhbmljYWwgR2FyZGVuIENvbGxlY3Rpb25zIChVQkNCRykuIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBHLiBHYXJhcGluIChCT1VNKS4gCiAxNTEgcmVjb3JkcyBmcm9tIEJhc2UgZGUgZGF0b3MgZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBQYcOtcyBWYXNjbzogQVJBTi1FSC4gCiAxNCByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiAxIHJlY29yZHMgZnJvbSBWRkQtUlA6IEh1bnNyw7xjazogUGZlcmRld2VpZGUgS3VjaGVyLiAKIDIyIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogNjI4IHJlY29yZHMgZnJvbSBXaWx0c2hpcmUgYW5kIFN3aW5kb24gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFdpbHRzaGlyZSAmYW1wOyBTd2luZG9uIFNpdGUtYmFzZWQgU3VydmV5IFJlY29yZHMuIAogMSByZWNvcmRzIGZyb20gUG9udGF1cnVzLiAKIDE5IHJlY29yZHMgZnJvbSBCaW9Gb2t1cy4gCiAyOCByZWNvcmRzIGZyb20gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIChTQlJDKSBkYXRhc2V0LiAKIDI5IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBQb25UYXVydXMgY29sbGVjdGlvbi4gCiA2IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gVm9uZGVyYXUgLSBGVUxELiAKIDggcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAyNiByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDYwIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIFRyb25kaGVpbSAoVFJIKS4gCiAxIHJlY29yZHMgZnJvbSBOaWptZWdlbiBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChOTCkgLSBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gRmxvcmEgb2YgU8WCb3dpxYRza2kgTmF0aW9uYWwgUGFyaywgUG9sYW5kLiAKIDMgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9uYWwgZGF0YWJhc2Ugb2YgSWNlbGFuZGljIHBsYW50cy4gCiA4MyByZWNvcmRzIGZyb20gQnJpc3RvbCBSZWdpb25hbCBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gQlJFUkMgT2N0b2JlciAyMDA5LiAKIDE1IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDIyIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBMb2NhbCBXaWxkbGlmZSBTaXRlIFN1cnZleXMgT3hmb3Jkc2hpcmUuIAogMyByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDU4IHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudCBoZXJiYXJpdW0sIEFnZGVyIG5hdHVybXVzZXVtIG9nIGJvdGFuaXNrZSBoYWdlLiAKIDQgcmVjb3JkcyBmcm9tIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCBkaXN0cmlidXRpb24gaW4gdGhlIE1lc2hjaGVyYSBOYXRpb25hbCBQYXJrLCBWbGFkaW1pciBPYmxhc3QsIFJ1c3NpYS4gCiAyOTAgcmVjb3JkcyBmcm9tIEx1bmQgQm90YW5pY2FsIE11c2V1bSAoTEQpLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYXVmIGRlciBXZWlkZSAtIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgaW4gQ3Jhd2lua2VsLiAKIDEzOCByZWNvcmRzIGZyb20gRmxvcmlzdGljIERhdGFiYXNlcyBvZiBNZWNrbGVuYnVyZy1Qb21lcmFuaWEgLSBIaWdoZXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAxNjI3IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIE1hYXN0cmljaHQgKE5MKSAtIEhlcmJhcml1bS4gCiAxOSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBVaUIuIAogNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtICjDhWJvIEFrYWRlbWkpLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSAoVFVSQSkuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLiAKIDQ5IHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIHNwZWNpbWVucyBvZiBIZXJiaWVycyBVbml2ZXJzaXRhaXJlcyBkZQoJCUNsZXJtb250LUZlcnJhbmQgKENMRikuIAogMiByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gR2VtZXIgYXJlYSAoU2xvdmFraWEpLiAKIDExNTQgcmVjb3JkcyBmcm9tIEFydGRhdGEuIAogMyByZWNvcmRzIGZyb20gSGVyYmFyaW8gSFNTIEZpbmNhIExhIE9yZGVuLVZhbGRlc2VxdWVyYSAoQ0lDWVRFWCkuIEdvYmllcm5vIGRlIEV4dHJlbWFkdXJhLiAKIDUgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIEJhcmNlbG9uYS4gR3J1cCBkSW52ZXN0aWdhY2nDsyBHZW9ib3TDoW5pY2EgaSBDYXJ0b2dyYWZpYSBkZSBsYSBWZWdldGFjacOzLiAKIDIgcmVjb3JkcyBmcm9tIEJvdGFuaWMgR2FyZGVuIG9mIHRoZSBGaW5uaXNoIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkuIAogNDA1IHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogOCByZWNvcmRzIGZyb20gRmllbGRqb3VybmFsLm9yZyBvYnNlcnZhdGlvbiBkYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIChEdWlzYnVyZykuIAogMSByZWNvcmRzIGZyb20gVmllbGZhbHQgdmVyc2NoaWVkZW5lciBXaWVzZW4uIAogNDcgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgU29jacOpdMOpIGRlcyBTY2llbmNlcyBOYXR1cmVsbGVzIGV0CgkJTWF0aMOpbWF0aXF1ZXMgZGUgQ2hlcmJvdXJnIChDSEUpLiAKIDEgcmVjb3JkcyBmcm9tIFBsYW50IFNwZWNpbWVuIGZyb20gSGVyYmFyaXVtIChDREJJKSBpbiBDaGluYSwgQ2hlbmdkdSBJbnN0aXR1dGUgb2YgQm90YW55LCBDaGluZXNlIEFjYWRlbXkgb2YgU2NpZW5jZXMuIAogMSByZWNvcmRzIGZyb20gVHJvY2tlbnJhc2VuIHVuZCBCdWNoZW53YWxkIGluIGRlciBVbWdlYnVuZyBkZXIgSnVnZW5kaGVyYmVyZ2UgQmFkIEJsYW5rZW5idXJnLiAKIDM0IHJlY29yZHMgZnJvbSBBcnRlbkZpbmRlci4gCiAyIHJlY29yZHMgZnJvbSBCb3RhbnkgcmVnaXN0cmF0aW9uIGRhdGFiYXNlIGJ5IERhbmlzaCBib3RhbmlzdHMuIAogNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSwgRmlubGFuZCAoVFVSKS4gCiAxIHJlY29yZHMgZnJvbSBWRkQtQlcsIE9iZXJyaGVpbi9TY2h3YXJ6d2FsZHJhbmQ6IFBmZXJkZXdlaWRlbiBMaWVsLiAKIDEyIHJlY29yZHMgZnJvbSBBbGwgb2JzZXJ2YXRpb25zIGV4dHJhY3RlZCBmcm9tIHRoZSBGbG9yYSBvZiBOb3J0aHVtYmVybGFuZCBhbmQgRHVyaGFtIDE4MzEuIAogMSByZWNvcmRzIGZyb20gVGhhbWVzIFZhbGxleSBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gTmF0dXJlIENvbnNlcnZhbmN5IENvdW5jaWwgU3VydmV5IG9mIEFuY2llbnQgV29vZGxhbmRzIGluIEJlcmtzaGlyZS4uIAogMSByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogMjIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy1CcmlvZi4gCiAyIHJlY29yZHMgZnJvbSBKb3JkYWwuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:12:00Z","doi":"10.15468/DL.HDJUJD","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/l8vpay","References:DOI:10.15468/kkb2x0","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/xnlbke","References:DOI:10.15468/ypoair","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/wtlymk","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/g1wfae","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/c4w4co","References:DOI:10.15468/9axq0b","References:DOI:10.15468/kllkyl","References:DOI:10.15468/lmznjw","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T05:16:22Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmdlZGZhcjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMjQtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1OTQvcGFuZ2FlYS44MTgzMjI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTA4MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IERhdGFzZXRLZXk6IChUYWJsZSAxKSBQcm9wb3J0aW9uIG9mIFRveG9wbGFzbWEgZ29uZGlpIHNlcm9wb3NpdGl2ZSBhcmN0aWMgZm94ZXMgKEFsb3BleCBsYWdvcHVzKSBieSBhZ2UgZ3JvdXAgYW5kIGdlb2dyYXBoaWMgYXJlYS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOCByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA4IHJlY29yZHMgZnJvbSAoVGFibGUgMSkgUHJvcG9ydGlvbiBvZiBUb3hvcGxhc21hIGdvbmRpaSBzZXJvcG9zaXRpdmUgYXJjdGljIGZveGVzIChBbG9wZXggbGFnb3B1cykgYnkgYWdlIGdyb3VwIGFuZCBnZW9ncmFwaGljIGFyZWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:16:22Z","doi":"10.15468/DL.GEDFAR","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.1594/pangaea.818322"],"publicationYear":"2015"},{"minted":"2015-04-08T05:20:46Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmIybDF6djwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMjYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2cxem9ocjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA0MyBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhbXBhbnVsYSBwYXR1bGEgc3Vic3AuIGFiaWV0aW5hLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA0MyByZWNvcmRzIGZyb20gOSBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMSByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMSByZWNvcmRzIGZyb20gU3lzVGF4IC0gQm90YW5pY2FsIEdhcmRlbnMuIAogMSByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogNiByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIEhlcmJhcml1bSAoRSkuIAogMSByZWNvcmRzIGZyb20gSmFyZGluIGJvdGFuaXF1ZSBkZSBNb250csOpYWwgKEpCTSkuIAogMjUgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gc3BlY2ltZW5zIG9mIEphcmRpbnMgYm90YW5pcXVlcyBhbmQgQ29uc2VydmF0b2lyZQkJQm90YW5pcXVlIG9mIE5hbmN5IChOQ1kpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:20:46Z","doi":"10.15468/DL.B2L1ZV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/ypoair","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:20:58Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjlnZzY1ajwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMzAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+NTg5Mzc8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDgyIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIHJob21ib2lkYWxpcyBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgODIgcmVjb3JkcyBmcm9tIDIwIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiA0IHJlY29yZHMgZnJvbSBUaGUgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiBhdCB0aGUgQm90YW5pc2NoZSBTdGFhdHNzYW1tbHVuZyBNw7xuY2hlbi4gCiAyIHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiA5IHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiAyIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAyMSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDggcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZGUgbCdBaW4uIAogMiByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMSByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogNyByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMyByZWNvcmRzIGZyb20gQmFuY28gZGUgRGF0b3MgZGUgbGEgQmlvZGl2ZXJzaWRhZCBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYS4gCiA0IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogNCByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UuIAogMSByZWNvcmRzIGZyb20gRmxvcmFiYW5rMSAtIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCAgZGlzdHJpYnV0aW9uIGluIHRoZSBub3J0aGVybiBwYXJ0IG9mIEJlbGdpdW0gKEZsYW5kZXJzIGFuZCB0aGUgQnJ1c3NlbHMgQ2FwaXRhbCByZWdpb24pLiAKIDUgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWFuIE5hdGlvbmFsIEhlcmJhcml1bSAoQ0FOQikuIAogMyByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:20:58Z","doi":"10.15468/DL.9GG65J","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/xnlbke","References:DOI:10.15468/uc1apo","References:DOI:10.15468/rhzrxw","References:DOI:10.3897/phytokeys.12.2849"],"publicationYear":"2015"},{"minted":"2015-04-08T05:21:50Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:21:50Z","doi":"10.15468/DL.KZ27LK","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/fdzzal","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/uc1apo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/eaqv44","References:DOI:10.15468/kllkyl","References:DOI:10.15468/lmznjw","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T05:21:54Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:21:54Z","doi":"10.15468/DL.ZOJMRM","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/hrztgn","References:DOI:10.15468/ahunho","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/ygtutx","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/xnlbke","References:DOI:10.15468/gkcp4x","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/iawody","References:DOI:10.15468/uc1apo","References:DOI:10.15468/euw5ge","References:DOI:10.15468/w8gru5","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:21:55Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:21:55Z","doi":"10.15468/DL.UCJXTM","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pj2yrh","References:DOI:10.15468/tvnjk7","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.15468/zrlqok","References:DOI:10.15468/2g6i0v","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/bkzv1l","References:DOI:10.5519/0002965","References:DOI:10.15468/ygtutx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/euw5ge","References:DOI:10.15468/g1zohr","References:DOI:10.15468/w8gru5","References:DOI:10.15468/gja4jo","References:DOI:10.15468/9axq0b","References:DOI:10.15468/kllkyl","References:DOI:10.15468/lmznjw","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T05:22:04Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:22:04Z","doi":"10.15468/DL.JLRNYT","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/xnlbke","References:DOI:10.15468/euw5ge","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ly60bx","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/g1wfae","References:DOI:10.15468/rhzrxw","References:DOI:10.5519/0002965","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/w8gru5"],"publicationYear":"2015"},{"minted":"2015-04-08T05:23:24Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnUxdTVldTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMzQtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT40NDI5Mjwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNTggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYW1wYW51bGEgc3BpY2F0YSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNTggcmVjb3JkcyBmcm9tIDE4IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxIHJlY29yZHMgZnJvbSBUcm9ja2VucmFzZW4gdW5kIEJ1Y2hlbndhbGQgaW4gZGVyIFVtZ2VidW5nIGRlciBKdWdlbmRoZXJiZXJnZSBCYWQgQmxhbmtlbmJ1cmcuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMTIgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDEgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDEgcmVjb3JkcyBmcm9tIFNjaGxlcm4gLSAoQm96ZW4pLiAKIDEgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDIwIHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAxIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMSByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gTWVyY2FudG91ci9BbHBpIE1hcml0dGltZSAoRnJhbmNlL0l0YWx5KS4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IFdhZ2VuaW5nZW4uIAogNSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDIgcmVjb3JkcyBmcm9tIENvbGVjY2nDs24gZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBoZXJiYXJpbyBkZSBsYSBVbml2ZXJzaXRhdCBkZSBWYWzDqG5jaWEgKFZBTCkuLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAzIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgY29sbGVjdGlvbiAoUCkgb2YgdGhlIE11c8OpdW0gbmF0aW9uYWwgZCdIaXN0b2lyZSBOYXR1cmVsbGUgKE1OSE4gLSBQYXJpcykuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:23:24Z","doi":"10.15468/DL.U1U5EU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:23:26Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnRzOHFpazwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMzMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2JrenYxbDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT43NzI4Njwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTc3IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIHNpYmlyaWNhIEwuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxNzcgcmVjb3JkcyBmcm9tIDI2IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDUgcmVjb3JkcyBmcm9tIEVESVQgLSBBVEJJIGluIEdlbWVyIGFyZWEgKFNsb3Zha2lhKS4gCiA0IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAow4VibyBBa2FkZW1pKSwgQ2VudHJlIGZvciBCaW9kaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgVHVya3UgKFRVUkEpLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDMgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAzOCByZWNvcmRzIGZyb20gRmxvcmlzdGljIERhdGFiYXNlcyBvZiBNZWNrbGVuYnVyZy1Qb21lcmFuaWEgLSBIaWdoZXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIFVTVS1VVEMgU3BlY2ltZW4gRGF0YWJhc2UuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAxIHJlY29yZHMgZnJvbSBQbGFudGFlLCBUQUlGIChUYWl3YW4gZS1MZWFybmluZyBhbmQgRGlnaXRhbCBBcmNoaXZlcyBQcm9ncmFtLCBURUxEQVApLiAKIDQgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBIZXJiYXJpdW0gKEUpLiAKIDQgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiA3IHJlY29yZHMgZnJvbSBNaXNzb3VyaSBCb3RhbmljYWwgR2FyZGVuLiAKIDQ0IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDcgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDkgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiA3IHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBCaW9zcGjDpHJlbnBhcmsgV2llbmVyd2FsZCAtIFBmYWZmc3TDpHR0ZW4uIAogNCByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIExpdmluZyBQbGFudCBDb2xsZWN0aW9ucyAoRSkuIAogMSByZWNvcmRzIGZyb20gQm90YW55IChVUFMpLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogNiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogNiByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLiAKIDEgcmVjb3JkcyBmcm9tIENPTk4uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:23:26Z","doi":"10.15468/DL.TS8QIK","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/bkzv1l"],"publicationYear":"2015"},{"minted":"2015-04-08T05:23:28Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjFmZnRlZjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyMzYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT40NDQ4NTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTMxIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FtcGFudWxhIHRoeXJzb2lkZXMgTC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDEzMSByZWNvcmRzIGZyb20gMTYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMjAgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxNiByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogOSByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gVGhlIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogNTMgcmVjb3JkcyBmcm9tIENhcm5ldCBlbiBMaWduZS4gCiAxIHJlY29yZHMgZnJvbSBOZWNrYXJ0YWxzw7xkaGFuZyAoSG9yYikuIAogMiByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAxIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiA0IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDkgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJpZXIgQS4gTGUgR3JhbmQgKEJPVU0pLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogNCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:23:28Z","doi":"10.15468/DL.1FFTEF","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:23:36Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:23:36Z","doi":"10.15468/DL.5O9EUJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/9axq0b","References:DOI:10.15468/dqb9za","References:DOI:10.15468/g1wfae","References:DOI:10.15468/uc1apo","References:DOI:10.15468/lmznjw","References:DOI:10.15468/zk8soo","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:24:38Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:24:38Z","doi":"10.15468/DL.XKBLBH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.5886/rtt57cc9","References:DOI:10.5519/0002965","References:DOI:10.15468/lmznjw","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/xnlbke","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/gja4jo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/kllkyl","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/qaevz2","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T05:26:04Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:26:04Z","doi":"10.15468/DL.O9K4UY","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/wzw0k2","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/zrlqok","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/k88vjq","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/g1zohr","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/7gudyo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/ly60bx","References:DOI:10.15468/l8vpay","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/lmznjw","References:DOI:10.15468/dipjcr","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/ygtutx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/euw5ge","References:DOI:10.15468/qaevz2","References:DOI:10.15468/iawody","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/9axq0b","References:DOI:10.15468/i5cqdk"],"publicationYear":"2015"},{"minted":"2015-04-08T05:29:18Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjJpc3VtcTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNDEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAyMiBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmRhbWluZSBnbGFuZHVsaWdlcmEgTy4gU2Nod2FyeiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMjIgcmVjb3JkcyBmcm9tIDYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gUGxhbnRhZSwgVEFJRiAoVGFpd2FuIGUtTGVhcm5pbmcgYW5kIERpZ2l0YWwgQXJjaGl2ZXMgUHJvZ3JhbSwgVEVMREFQKS4gCiAxNSByZWNvcmRzIGZyb20gTmF0aW9uYWwgU3lzdGVtIG9mIFByb3RlY3RlZCBBcmVhcyBpbiBQb2xhbmQgLSBQbGFudHMuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMSByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:29:19Z","doi":"10.15468/DL.2ISUMQ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw"],"publicationYear":"2015"},{"minted":"2015-04-08T05:29:21Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjljNjQwcTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNDAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2w4dnBheTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA1MyBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmRhbWluZSBiZWxsaWRpZm9saWEgc3Vic3AuIGFscGluYSAoV2lsbGQuKSBCLk0uRy4gSm9uZXMgCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDUzIHJlY29yZHMgZnJvbSAxMCBjb25zdGl0dWVudCBkYXRhc2V0czogCiA1IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiAxIHJlY29yZHMgZnJvbSBDSUJJTywgQWxpY2FudGU6QUJILUdCSUYuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDIgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMjcgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiAyIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgVmFzY3VsYXIgUGxhbnRzIENvbGxlY3Rpb24gb2YgdGhlIFVuaXZlcnNpdHkgb2YgRXh0cmVtYWR1cmEgKFNwYWluKS4gCiA4IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogNSByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:29:21Z","doi":"10.15468/DL.9C640Q","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay"],"publicationYear":"2015"},{"minted":"2015-04-08T05:29:43Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:29:43Z","doi":"10.15468/DL.UWM1LL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/2g6i0v","References:DOI:10.15468/iawody","References:DOI:10.15468/dqb9za","References:DOI:10.15468/uc1apo","References:DOI:10.5519/0002965","References:DOI:10.15468/kkb2x0","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ypoair","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wtlymk","References:DOI:10.15468/7gudyo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:30:12Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:30:12Z","doi":"10.15468/DL.PZ64QH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.5519/0002965","References:DOI:10.15468/kllkyl","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/euw5ge","References:DOI:10.15468/c4w4co","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody","References:DOI:10.15468/dipjcr","References:DOI:10.15468/2g6i0v"],"publicationYear":"2015"},{"minted":"2015-04-08T05:30:52Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:30:52Z","doi":"10.15468/DL.EOKYTT","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/hrztgn","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/lqmsih","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/xnlbke","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/0uv5bv","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/zrlqok","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/g1zohr","References:DOI:10.15468/kllkyl","References:DOI:10.15468/ewje4c","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:32:36Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnBwdTR2aTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNDMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tsbGt5bDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yNjEwNzY8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDExMzYgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJkYW1pbmUgaGVwdGFwaHlsbGEgKEwuKSBPLkUuIFNjaHVseiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMTEzNiByZWNvcmRzIGZyb20gMzcgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMjkwIHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogNyByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMTEgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDMwIHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDMwIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogNCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkZSBsJ0Fpbi4gCiA0IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZSBhZGRpdGlvbnMgc2luY2UgMjAwMC4gCiAxIHJlY29yZHMgZnJvbSBBcnRkYXRhLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE5hdmFycmEsIEhlcmJhcml1bTogUEFNUC1WYXNjdWxhciBQbGFudHMuIAogMzcgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMzkwIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAxIHJlY29yZHMgZnJvbSBpTmF0dXJhbGlzdCByZXNlYXJjaC1ncmFkZSBvYnNlcnZhdGlvbnMuIAogMyByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBMZWlkZW4uIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2V2aWxsYSwgU0VWLiAKIDEgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiA2IHJlY29yZHMgZnJvbSBVbml2ZXJzaXRhdCBkZSBHaXJvbmE6IEhHSS1Db3Jtb3BoeXRhLiAKIDggcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMTMgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEwNSByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiA0IHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogNSByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGVsIFBhw63CrXMgVmFzY28vRUhVLCBCaWxiYW86IEhlcmJhcmlvIEJJTy4gCiAxMyByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLiAKIDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAyIHJlY29yZHMgZnJvbSBKYXJkw61uIEJvdMOhbmljbyBkZSBDw7NyZG9iYTogSGVyYmFyaXVtIENPQS4gCiAyOCByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDY0IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAxIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiAxIHJlY29yZHMgZnJvbSBNaXNzb3VyaSBCb3RhbmljYWwgR2FyZGVuLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogNSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkdSBMaW1vdXNpbi4gCiAyIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAzNyByZWNvcmRzIGZyb20gQXRsYXMgZGVzIHBsYW50ZXMgdmFzY3VsYWlyZXMgZGUgTG9ycmFpbmUuIAogNSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgUMO6YmxpY2EgZGUgTmF2YXJyYSwgUGFtcGxvbmE6IFVQTkEtSC4gCiAxIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuIAogMTcgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRXNww6hjZXMgVsOpZ8OpdGFsZXMgTWVuYWPDqWVzIGRlIEZyYW5jZSBtw6l0cm9wb2xpdGFpbmUuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:32:36Z","doi":"10.15468/DL.PPU4VI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/pal1lb"],"publicationYear":"2015"},{"minted":"2015-04-08T05:32:45Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjIweGdteTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNDctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tsbGt5bDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT45NTc2ODwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzA5IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZGFtaW5lIHBlbnRhcGh5bGxvcyAoTC4pIENyYW50eiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMzA5IHJlY29yZHMgZnJvbSAyNyBjb25zdGl0dWVudCBkYXRhc2V0czogCiA5IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDEwIHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMSByZWNvcmRzIGZyb20gU0JULUxpdmluZy4gCiAxIHJlY29yZHMgZnJvbSBPSE4uIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDY5IHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogMTMgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDEwNSByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiA0IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiAyMCByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDEwIHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiAxIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogMSByZWNvcmRzIGZyb20gQ2F0w6Fsb2dvIEZsb3LDrXN0aWNvIEhpc3TDs3JpY28gZGUgTmF2YXJyYS4gR29iaWVybm8gZGUgTmF2YXJyYS4gCiAxNCByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiA5IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAyIHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogOSByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDMgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMSByZWNvcmRzIGZyb20gU0FOVCBoZXJiYXJpdW0gdmFzY3VsYXIgcGxhbnRzIGNvbGxlY3Rpb24uIAogOCByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gVkZELUg6IEhlaWRlbnJvZDogQmVja2VycyBXZWlkZSBtaXQgV2FsZC4gCiAxIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuIAogMTAgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAxIHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMiByZWNvcmRzIGZyb20gTmF0aW9uYWFsIEhlcmJhcml1bSBOZWRlcmxhbmQuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:32:45Z","doi":"10.15468/DL.20XGMY","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl"],"publicationYear":"2015"},{"minted":"2015-04-08T05:33:02Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:33:02Z","doi":"10.15468/DL.GEC4GX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ypoair","References:DOI:10.15468/uc1apo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/hrztgn","References:DOI:10.15468/dqb9za","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/7gudyo"],"publicationYear":"2015"},{"minted":"2015-04-08T05:33:53Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:33:53Z","doi":"10.15468/DL.XYVRIA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/ypoair","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/hrztgn","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/7gudyo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.5519/0002965","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/lmznjw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T05:34:28Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:34:28Z","doi":"10.15468/DL.9W4BCN","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/wtlymk","References:DOI:10.15468/s6ctus","References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/hrztgn","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ennulm","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/7gudyo","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.15468/dqb9za","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/ndwmnk","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/gkcp4x","References:DOI:10.15468/euw5ge","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T05:35:11Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:35:11Z","doi":"10.15468/DL.GBRSPW","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/o3pvnh","References:DOI:10.15468/mbhmmt","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/l8vpay","References:DOI:10.15468/wtlymk","References:DOI:10.15468/g1wfae","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/gkcp4x","References:DOI:10.15468/ennulm","References:DOI:10.15468/ygtutx","References:DOI:10.15468/ahunho","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/ypoair","References:DOI:10.15468/7gudyo","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/fdzzal","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.5519/0002965","References:DOI:10.15468/pal1lb","References:DOI:10.15468/xnlbke","References:DOI:10.15468/gja4jo","References:DOI:10.15468/uc1apo","References:DOI:10.15468/euw5ge","References:DOI:10.15468/4entqy","References:DOI:10.15468/dipjcr","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T05:36:38Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:36:38Z","doi":"10.15468/DL.DSYGJB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/hrztgn","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/l8vpay","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/g1wfae","References:DOI:10.15468/48pwft","References:DOI:10.15468/kllkyl","References:DOI:10.15468/ennulm","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/gkcp4x","References:DOI:10.15468/kkb2x0","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/4entqy","References:DOI:10.15468/g1zohr","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/gja4jo","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dipjcr","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:35Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjJoYml5bTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNTAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2lhd29keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MjcyMjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDE4IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZGFtaW5lIHRyaWZpZGEgKExhbS4gZXggUG9pci4pIEIuTS5HLiBKb25lcy4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMTggcmVjb3JkcyBmcm9tIDYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogNSByZWNvcmRzIGZyb20gVUFNIEhlcmJhcml1bSAoQUxBKSwgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiAoQXJjdG9zKS4gCiAzIHJlY29yZHMgZnJvbSBSb3lhbCBCb3RhbmljIEdhcmRlbiBFZGluYnVyZ2ggSGVyYmFyaXVtIChFKS4gCiAyIHJlY29yZHMgZnJvbSBCb3RhbnkgKFVQUykuIAogMyByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGNvbGxlY3Rpb24gKFApIG9mIHRoZSBNdXPDqXVtIG5hdGlvbmFsIGQnSGlzdG9pcmUgTmF0dXJlbGxlIChNTkhOIC0gUGFyaXMpLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:37:36Z","doi":"10.15468/DL.2HBIYM","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/iawody","References:DOI:10.15468/ypoair","References:DOI:10.5886/rtt57cc9"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:41Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLm1kMzl5NTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNTQtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2JrenYxbDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4zMTMwNjwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgOTAgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJkYW1pbm9wc2lzIHBldHJhZWEgKEwuKSBIaWl0b25lbiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOTAgcmVjb3JkcyBmcm9tIDEwIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBMaXZpbmcgUGxhbnQgQ29sbGVjdGlvbnMgKEUpLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDIgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdMOkdCBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBTQlQtTGl2aW5nLiAKIDEgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiAzMCByZWNvcmRzIGZyb20gT0hOLiAKIDQ5IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:37:41Z","doi":"10.15468/DL.MD39Y5","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/bkzv1l","References:DOI:10.15468/pal1lb"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:42Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnIxeXh2djwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNTEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT43NzEwNDwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNDU4IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZGFtaW5lIHRyaWZvbGlhIEwuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA0NTggcmVjb3JkcyBmcm9tIDI1IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDI4IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBQZXJjaHRvbGRzZG9yZmVyIEhlaWRlLiAKIDEgcmVjb3JkcyBmcm9tIHNjaHVsZ2FydGVuLiAKIDEgcmVjb3JkcyBmcm9tIFJ1ci4gCiAxIHJlY29yZHMgZnJvbSBUYWcgZGVyIEFydGVudmllbGZhbHQuIAogNSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMTAzIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiAyIHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBOYXZhcnJhLCBIZXJiYXJpdW06IFBBTVAtVmFzY3VsYXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiA1IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIFNjaHVsaG9mdW50ZXJzdWNodW5nIFRob21hcy1NYW5uLU9TLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDcgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDc4IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDE2OSByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDYgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYW4gTmF0aW9uYWwgSGVyYmFyaXVtIChDQU5CKS4gCiAzIHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogMzcgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMSByZWNvcmRzIGZyb20gTWl0dGVsc3RyZWlmZW4uIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:37:42Z","doi":"10.15468/DL.R1YXVV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/rhzrxw","References:DOI:10.15468/dqb9za","References:DOI:10.15468/uc1apo","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:43Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZqYWpyYjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNTMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+OTY0NTk8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDc1MCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmRhbWlub3BzaXMgaGFsbGVyaSAoTC4pIEhheWVrIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA3NTAgcmVjb3JkcyBmcm9tIDE2IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDQ1IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAzODEgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLiAKIDUgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIChOTFAgSGFyeiAvIEhvY2hoYXJ6KS4gCiA0IHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogNzMgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAxNCByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogOCByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMTg5IHJlY29yZHMgZnJvbSBGbG9yYSBvZiB0aGUgU3RvxYJvd2UgTXRzLi4gCiAyIHJlY29yZHMgZnJvbSBFRElUIC0gQVRCSSBpbiBHZW1lciBhcmVhIChTbG92YWtpYSkuIAogMTMgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgRnJhbmNvLUJlbGdlLiAKIDggcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW55IFVuaXQsIEZpbm5pc2ggTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoSCkuIAogMyByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDIgcmVjb3JkcyBmcm9tIEZsb3JhYmFuazEgLSBBIGdyaWQtYmFzZWQgZGF0YWJhc2Ugb24gdmFzY3VsYXIgcGxhbnQgIGRpc3RyaWJ1dGlvbiBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiBCZWxnaXVtIChGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgcmVnaW9uKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFuaWNhbCBNdXNldW0sIFVuaXZlcnNpdHkgb2YgT3VsdSwgRmlubGFuZCAoT1VMVSkuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:37:43Z","doi":"10.15468/DL.VJAJRB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.3897/phytokeys.12.2849"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:45Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmE3Ym01azwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNDktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2ZkenphbDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2w4dnBheTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yMDM2NjU8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDY5MyBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmRhbWluZSByZXNlZGlmb2xpYSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNjkzIHJlY29yZHMgZnJvbSA0MyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAzIHJlY29yZHMgZnJvbSBFRElUIC0gQVRCSSBpbiBNZXJjYW50b3VyL0FscGkgTWFyaXR0aW1lIChGcmFuY2UvSXRhbHkpLiAKIDEgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uLiAKIDEwIHJlY29yZHMgZnJvbSBBcmFuemFkaSBaaWVudHppIEVsa2FydGVhLiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDQgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiAxIHJlY29yZHMgZnJvbSBEcHRvIGRlIEJvdMOhbmljYSwgRWNvbG9nw61hIHkgRmlzaW9sb2fDrWEgVmVnZXRhbCAoSGVyYmFyaW8gQ09GQykuIEZhY3VsdGFkIGRlIENpZW5jaWFzLiBVbml2ZXJzaWRhZCBkZSBDw7NyZG9iYS4gCiAzMCByZWNvcmRzIGZyb20gQm90YW5pY2FsIEluZm9ybWF0aW9uIFN5c3RlbSBvZiBHZW5ldmEuIAogOSByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxMCByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDE3IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMSByZWNvcmRzIGZyb20gU2NobGVybiAtIChCb3plbikuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gSFNTIEZpbmNhIExhIE9yZGVuLVZhbGRlc2VxdWVyYSAoQ0lDWVRFWCkuIEdvYmllcm5vIGRlIEV4dHJlbWFkdXJhLiAKIDIgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBOYXZhcnJhLCBIZXJiYXJpdW06IFBBTVAtVmFzY3VsYXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy1IaXN0w7NyaWNvLiAKIDEgcmVjb3JkcyBmcm9tIEZsb1ZlZ1NJIC0gRmxvcmlzdGljYWwgYW5kIGZpdG9jZW5vbG9naWNhbCBkYXRhYmFzZSBvZiBaUkMgU0FaVS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogMSByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogMyByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgQmFyY2Vsb25hLiBHcnVwIGRJbnZlc3RpZ2FjacOzIEdlb2JvdMOhbmljYSBpIENhcnRvZ3JhZmlhIGRlIGxhIFZlZ2V0YWNpw7MuIAogMSByZWNvcmRzIGZyb20gQXJ0ZW52aWVsZmFsdCBhbSBTY2hsZXJuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDEgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiAyNyByZWNvcmRzIGZyb20gRmxvcmEgZCdBbmRvcnJhLiAKIDI0NSByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDYgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBWYXNjdWxhciBQbGFudHMgQ29sbGVjdGlvbiBvZiB0aGUgVW5pdmVyc2l0eSBvZiBFeHRyZW1hZHVyYSAoU3BhaW4pLiAKIDE5IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiAzIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy1CcmlvZi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDE2IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMSByZWNvcmRzIGZyb20gTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbi4gCiA0IHJlY29yZHMgZnJvbSBDYXTDoWxvZ28gRmxvcsOtc3RpY28gSGlzdMOzcmljbyBkZSBOYXZhcnJhLiBHb2JpZXJubyBkZSBOYXZhcnJhLiAKIDE0IHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiA1IHJlY29yZHMgZnJvbSBKYXJkw61uIEJvdMOhbmljbyBkZSBDw7NyZG9iYTogSGVyYmFyaXVtIENPQS4gCiAxIHJlY29yZHMgZnJvbSBDYXJ0b2dyYWbDrWEgZGUgdmVnZXRhY2nDs24gYSBlc2NhbGEgZGUgZGV0YWxsZSAxOjEwLjAwMCBkZSBsYSBtYXNhIGZvcmVzdGFsIGRlIEFuZGFsdWPDrWEuIAogNjcgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdGF0IGRlIEdpcm9uYTogSEdJLUNvcm1vcGh5dGEuIAogMTYyIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMTIgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T05:37:45Z","doi":"10.15468/DL.A7BM5K","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/fdzzal","References:DOI:10.15468/uc1apo","References:DOI:10.15468/l8vpay"],"publicationYear":"2015"},{"minted":"2015-04-08T05:37:53Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:37:53Z","doi":"10.15468/DL.8BRHBT","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.15468/xnlbke","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/rhzrxw"],"publicationYear":"2015"},{"minted":"2015-04-08T05:42:55Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjU3aGMycDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNTktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tsbGt5bDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xNDg0MDc8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDc1MiBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmR1dXMgcGVyc29uYXRhIChMLikgSmFjcS4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDc1MiByZWNvcmRzIGZyb20gNTMgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gQmF5ZXJpc2NoZSBEb25hdSAtIE5ldSBVbG0uIAogMSByZWNvcmRzIGZyb20gQmF5ZXJpc2NoZSBEb25hdSAtIEJsaW5kaGVpbSBEb25hdWJyw7xja2UuIAogMSByZWNvcmRzIGZyb20gQXJ0ZW52aWVsZmFsdCBhdWYgZGVyIFdpZXNlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEJheWVyaXNjaGUgRG9uYXUgLSBMZWlwaGVpbS4gCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDYgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBXaXJiYWNoLiAKIDEgcmVjb3JkcyBmcm9tIFBsYW50YWUsIFRBSUYgKFRhaXdhbiBlLUxlYXJuaW5nIGFuZCBEaWdpdGFsIEFyY2hpdmVzIFByb2dyYW0sIFRFTERBUCkuIAogMSByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiAxIHJlY29yZHMgZnJvbSBEYW5pZWxzYmVyZyAoTcO2bGx0YWwsIEvDpHJudGVuKS4gCiAxIHJlY29yZHMgZnJvbSBBcnRlbnZpZWxmYWx0IGltIEJlY2tlcmJydWNoIChEZXNzYXUpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdGlvbmFhbCBIZXJiYXJpdW0gTmVkZXJsYW5kLiAKIDEgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxIHJlY29yZHMgZnJvbSBTdWt6ZXNzaW9uIEluZHVzdHJpZWJyYWNoZS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0enN0YXRpb24gU2NobWlkc2ZlbGRlbi4gCiAyIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogMSByZWNvcmRzIGZyb20gV2llc2VuYmlvdG9wIGFtIFdhc3NlcnR1cm0uIAogMSByZWNvcmRzIGZyb20gRmFiZXJwYXJrIChOw7xybmJlcmcvU3RlaW4pLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDIgcmVjb3JkcyBmcm9tIEJ1dHRlcmJlcmcsIERhcmRlc2hlaW0uIAogMSByZWNvcmRzIGZyb20gTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbi4gCiAxIHJlY29yZHMgZnJvbSBCYW1tZW50YWxlciBEdWZ0LSB1bmQgSGVpbGtyw6R1dGVyZ2FydGVuLiAKIDEgcmVjb3JkcyBmcm9tIERvcmZyYW5kIE1hdWRlcm9kZS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gUmhvZW5tdXNldW0gRmxhZHVuZ2VuLiAKIDQxNCByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAyNSByZWNvcmRzIGZyb20gRmxvcmEgb2YgdGhlIFN0b8WCb3dlIE10cy4uIAogNzQgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDYxIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiA1IHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gR2VtZXIgYXJlYSAoU2xvdmFraWEpLiAKIDEgcmVjb3JkcyBmcm9tIFZvbSBHaXBmZWwgaW5zIE1vb3IsIFRyYW5zZWt0IGltIE5TRyBBbGxnw6R1ZXIgSG9jaGFscGVuLiAKIDEgcmVjb3JkcyBmcm9tIFNjaHVsd2FsZCBNYXJrc3VobC4gCiAyIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMzUgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMyByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDEgcmVjb3JkcyBmcm9tIEVobWtlbmRvcmYuIAogMSByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMSByZWNvcmRzIGZyb20gTmVja2FydGFsc8O8ZGhhbmcgKEhvcmIpLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogNDEgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDcgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogMTIgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAxIHJlY29yZHMgZnJvbSBEb25hdWluc2VsIGRlcyBCTiBiZWkgRW50YXUuIAogMSByZWNvcmRzIGZyb20gS2llc2JhZ2dlciAoTWl0dGVsaGF1c2VuKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAxNiByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gR3VyZ2x0YWwgKFRhcnJlbnopLiAKIDEgcmVjb3JkcyBmcm9tIDIwIEphaHJlIE5hdHVyc2NodXR6Z2ViaWV0IERyZWllbmJlcmcuIAogNiByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:42:55Z","doi":"10.15468/DL.57HC2P","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/kllkyl","References:DOI:10.15468/uc1apo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co"],"publicationYear":"2015"},{"minted":"2015-04-08T05:43:00Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:43:00Z","doi":"10.15468/DL.NRHKAV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay","References:DOI:10.15468/pal1lb","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/eaqv44","References:DOI:10.15468/zk8soo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T05:43:12Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:43:13Z","doi":"10.15468/DL.EQMIOM","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/hrztgn","References:DOI:10.15468/euw5ge","References:DOI:10.15468/pal1lb","References:DOI:10.15468/xnlbke","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.5519/0002965","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T05:43:14Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:43:14Z","doi":"10.15468/DL.OI67FC","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/w8gru5","References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/euw5ge","References:DOI:10.15468/ahunho","References:DOI:10.15468/7gudyo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ennulm","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl"],"publicationYear":"2015"},{"minted":"2015-04-08T05:43:53Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:43:53Z","doi":"10.15468/DL.FXVAY8","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/ly60bx","References:DOI:10.15468/ennulm","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/ke2ody","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/gkcp4x","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/w8gru5","References:DOI:10.15468/gja4jo","References:DOI:10.15468/dipjcr","References:DOI:10.15468/4entqy"],"publicationYear":"2015"},{"minted":"2015-04-08T05:43:56Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T05:43:56Z","doi":"10.15468/DL.ZGUIM0","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/hrztgn","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.5519/0002965","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/xnlbke","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/w8gru5","References:DOI:10.15468/qaevz2","References:DOI:10.15468/tm56sc","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/xzpcvv"],"publicationYear":"2015"},{"minted":"2015-04-08T05:53:36Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmxkc3N3eDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNjEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAyMSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IFByaW11bGEgY2FsZGVyaWFuYSBCYWxmLiBmLiAmYW1wOyBDb29wZXIgCkRhdGFzZXRLZXk6IFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBIZXJiYXJpdW0gKEUpLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAyMSByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyMSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIEhlcmJhcml1bSAoRSkuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T05:53:36Z","doi":"10.15468/DL.LDSSWX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair"],"publicationYear":"2015"},{"minted":"2015-04-08T05:54:42Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmRuZnVjeTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNjItMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2JrenYxbDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xMTM1ODwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNiBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IFByaW11bGEgY2FsZGVyaWFuYSBCYWxmLiBmLiAmYW1wOyBDb29wZXIgCkRhdGFzZXRLZXk6IFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBMaXZpbmcgUGxhbnQgQ29sbGVjdGlvbnMgKEUpLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA2IHJlY29yZHMgZnJvbSAxIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDYgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBMaXZpbmcgUGxhbnQgQ29sbGVjdGlvbnMgKEUpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T05:54:42Z","doi":"10.15468/DL.DNFUCY","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/bkzv1l"],"publicationYear":"2015"},{"minted":"2015-04-08T06:11:54Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmN3c3RiMDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNjMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yMzkxMTM8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDEzNDIgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBhbGJhIFNjb3AuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxMzQyIHJlY29yZHMgZnJvbSA0OCBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyIHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogMzIgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDQzMyByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogNDY5IHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAzNCByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogMyByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDUgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZGUgbCdBaW4uIAogMSByZWNvcmRzIGZyb20gUGVyY2h0b2xkc2RvcmZlciBIZWlkZS4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogMyByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gR2VtZXIgYXJlYSAoU2xvdmFraWEpLiAKIDQ0IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiAxIHJlY29yZHMgZnJvbSBTY2hsZXJuIC0gKEJvemVuKS4gCiAzOSByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMSByZWNvcmRzIGZyb20gQmF5ZXJpc2NoZSBEb25hdSAtIE5ldSBVbG0uIAogMiByZWNvcmRzIGZyb20gVmVnZXRhdGlvbiBkYXRhIGZyb20gcHJvdGVjdGVkIGFyZWFzIGluIERlbm1hcmsgKMKnIDMgaW4gdGhlIERhbmlzaCBOYXR1cmUgUHJvdGVjdGlvbiBBY3QpLiAKIDEgcmVjb3JkcyBmcm9tIEJheWVyaXNjaGUgRG9uYXUgLSBMZWlwaGVpbS4gCiA0NCByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDEgcmVjb3JkcyBmcm9tIFZvbSBHaXBmZWwgaW5zIE1vb3IsIFRyYW5zZWt0IGltIE5TRyBBbGxnw6R1ZXIgSG9jaGFscGVuLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogMSByZWNvcmRzIGZyb20gR0VPIEhhdXB0dmVyYW5zdGFsdHVuZyBUaXJvbCAoSW5uc2JydWNrKS4gCiAyMyByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAyIHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogMjAgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiA3IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMjUgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIEd1cmdsdGFsIChUYXJyZW56KS4gCiAyIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDQgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiAzIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBOYXZhcnJhLCBIZXJiYXJpdW06IFBBTVAtVmFzY3VsYXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIExhQm9PYjAyLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMSByZWNvcmRzIGZyb20gS8O2bmlnc3RldHRlbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAzNiByZWNvcmRzIGZyb20gQXRsYXMgZGVzIHBsYW50ZXMgdmFzY3VsYWlyZXMgZGUgTG9ycmFpbmUuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogNTIgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBCaW9zcGjDpHJlbnBhcmsgV2llbmVyd2FsZCAtIFBmYWZmc3TDpHR0ZW4uIAogNiByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDEgcmVjb3JkcyBmcm9tIE1mTiAtIEZvc3NpbCBwbGFudHMgKENlbm9waHl0aWMpLiAKIDE5IHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIE11c2V1bXMsIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiAxIHJlY29yZHMgZnJvbSBBcnRlbmJlc3RpbW11bmcuIAogNyByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBFc3DDqGNlcyBWw6lnw6l0YWxlcyBNZW5hY8OpZXMgZGUgRnJhbmNlIG3DqXRyb3BvbGl0YWluZS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T06:11:54Z","doi":"10.15468/DL.CWSTB0","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T06:11:59Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:11:59Z","doi":"10.15468/DL.F8AFHV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/w8gru5","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/zk8soo","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/xnlbke","References:DOI:10.5519/0002965","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/wtlymk"],"publicationYear":"2015"},{"minted":"2015-04-08T06:12:01Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:12:01Z","doi":"10.15468/DL.QU7ERM","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/kllkyl","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/euw5ge","References:DOI:10.15468/7gudyo","References:DOI:10.15468/ahunho"],"publicationYear":"2015"},{"minted":"2015-04-08T06:12:19Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:12:19Z","doi":"10.15468/DL.DZFOTJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/k88vjq","References:DOI:10.15468/ygtutx","References:DOI:10.15468/gja4jo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ypoair","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/uc1apo","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/7gudyo","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T06:12:26Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:12:26Z","doi":"10.15468/DL.YT5NPP","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/uc1apo","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/euw5ge","References:DOI:10.15468/7gudyo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/zrlqok","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ahunho","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/dqb9za","References:DOI:10.15468/s6zhid","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk"],"publicationYear":"2015"},{"minted":"2015-04-08T06:13:10Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:13:10Z","doi":"10.15468/DL.6YUALD","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ennulm","References:DOI:10.15468/kllkyl","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/uc1apo","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/qaevz2","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/eaqv44","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T06:15:51Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZwbmNyZzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNzAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yOTgyNTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzMgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBiYWxkZW5zaXMgTC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDMzIHJlY29yZHMgZnJvbSAxMCBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChBTFRBKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSBCb3RhbmljYWwgR2FyZGVuIENvbGxlY3Rpb25zIChVQkNCRykuIAogMSByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgQm90YW5pY2FsIENvbGxlY3Rpb24uIAogMSByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDQgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMjAgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:15:51Z","doi":"10.15468/DL.VPNCRG","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T06:16:05Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnRrMGhhYjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNzMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTU4NzU2PC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA5MDQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBib2hlbWljYSBTY2hyZWIuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA5MDQgcmVjb3JkcyBmcm9tIDMwIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiA2IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDExIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAyMiByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBKeXbDpHNreWzDpCBVbml2ZXJzaXR5IE11c2V1bS4gCiAxNjkgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uLiAKIDEyMCByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBCb3RhbnkgVW5pdCwgRmlubmlzaCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IChIKS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiA2IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogNSByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMzk3IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDIwIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFuaWNhbCBNdXNldW0sIFVuaXZlcnNpdHkgb2YgT3VsdSwgRmlubGFuZCAoT1VMVSkuIAogMiByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMzYgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogQXRsYXMgZGUgbGEgZmxvcmUgZGUgTG9ycmFpbmUuIAogNSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDMgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFuaWMgR2FyZGVuIG9mIHRoZSBGaW5uaXNoIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkuIAogMjEgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNCByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIE11c2V1bXMsIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiA3IHJlY29yZHMgZnJvbSBBdGxhcyBkZXMgcGxhbnRlcyB2YXNjdWxhaXJlcyBkZSBMb3JyYWluZS4gCiAxNCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDM1IHJlY29yZHMgZnJvbSBGbG9yaXN0aWMgRGF0YWJhc2VzIG9mIE1lY2tsZW5idXJnLVBvbWVyYW5pYSAtIEhpZ2hlciBQbGFudHMuIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogMSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBCb3RhbmljYWwgQ29sbGVjdGlvbi4gCiAyIHJlY29yZHMgZnJvbSBGbG9yYWJhbmsxIC0gQSBncmlkLWJhc2VkIGRhdGFiYXNlIG9uIHZhc2N1bGFyIHBsYW50ICBkaXN0cmlidXRpb24gaW4gdGhlIG5vcnRoZXJuIHBhcnQgb2YgQmVsZ2l1bSAoRmxhbmRlcnMgYW5kIHRoZSBCcnVzc2VscyBDYXBpdGFsIHJlZ2lvbikuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBNYWFzdHJpY2h0IChOTCkgLSBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogNCByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMSByZWNvcmRzIGZyb20gR290aGVuYnVyZyBIZXJiYXJpdW0gLSBHZW5lcmFsIChHQklGOklIOkdCOkhlcmJhcml1bSkuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T06:16:05Z","doi":"10.15468/DL.TK0HAB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo","References:DOI:10.15468/c4w4co","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T06:16:13Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:16:13Z","doi":"10.15468/DL.SMYMPH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/o3pvnh","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pal1lb","References:DOI:10.15468/iawody","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/wqsad9","References:DOI:10.15468/w8gru5","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/dqb9za","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc"],"publicationYear":"2015"},{"minted":"2015-04-08T06:16:25Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:16:25Z","doi":"10.15468/DL.AII27Q","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/zk8soo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ygtutx","References:DOI:10.15468/dqb9za","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/iawody","References:DOI:10.15468/c4w4co","References:DOI:10.15468/kaq5ol","References:DOI:10.5519/0002965","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wqsad9","References:DOI:10.15468/qaevz2","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/k88vjq"],"publicationYear":"2015"},{"minted":"2015-04-08T06:16:26Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnJjY2YyeTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNzUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1OTQvcGFuZ2FlYS44MTgzMjI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTA4MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IERhdGFzZXRLZXk6IChUYWJsZSAxKSBQcm9wb3J0aW9uIG9mIFRveG9wbGFzbWEgZ29uZGlpIHNlcm9wb3NpdGl2ZSBhcmN0aWMgZm94ZXMgKEFsb3BleCBsYWdvcHVzKSBieSBhZ2UgZ3JvdXAgYW5kIGdlb2dyYXBoaWMgYXJlYS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOCByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA4IHJlY29yZHMgZnJvbSAoVGFibGUgMSkgUHJvcG9ydGlvbiBvZiBUb3hvcGxhc21hIGdvbmRpaSBzZXJvcG9zaXRpdmUgYXJjdGljIGZveGVzIChBbG9wZXggbGFnb3B1cykgYnkgYWdlIGdyb3VwIGFuZCBnZW9ncmFwaGljIGFyZWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T06:16:26Z","doi":"10.15468/DL.RCCF2Y","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.1594/pangaea.818322"],"publicationYear":"2015"},{"minted":"2015-04-08T06:16:30Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:16:30Z","doi":"10.15468/DL.JKUSMJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/w8gru5","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/eaqv44","References:DOI:10.15468/wqsad9","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.5519/0002965","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co"],"publicationYear":"2015"},{"minted":"2015-04-08T06:22:25Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjlrb2FqYTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyNzctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT41NjQ3Njwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzA5IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggYnVla2lpIFdpbW0uIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAzMDkgcmVjb3JkcyBmcm9tIDEyIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDE5MiByZWNvcmRzIGZyb20gSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzLiAKIDQgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDkxIHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDkgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAyIHJlY29yZHMgZnJvbSBUaGUgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiBhdCB0aGUgQm90YW5pc2NoZSBTdGFhdHNzYW1tbHVuZyBNw7xuY2hlbi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMyByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogMSByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDIgcmVjb3JkcyBmcm9tIE5hdGlvbmFhbCBIZXJiYXJpdW0gTmVkZXJsYW5kLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:22:25Z","doi":"10.15468/DL.9KOAJA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T06:22:49Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:22:49Z","doi":"10.15468/DL.NFDSTK","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/g1zohr","References:DOI:10.15468/pal1lb","References:DOI:10.15468/ennulm","References:DOI:10.15468/rhzrxw"],"publicationYear":"2015"},{"minted":"2015-04-08T06:23:07Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:23:07Z","doi":"10.15468/DL.PEIUSS","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/kkb2x0","References:DOI:10.15468/7gudyo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/hrztgn","References:DOI:10.15468/euw5ge","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wqsad9","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq"],"publicationYear":"2015"},{"minted":"2015-04-08T06:23:11Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:23:11Z","doi":"10.15468/DL.RIAXAU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ygtutx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ypoair","References:DOI:10.15468/mbhmmt","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/qhqzub","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.15468/euw5ge","References:DOI:10.15468/gja4jo","References:DOI:10.15468/iawody","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T06:23:42Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:23:42Z","doi":"10.15468/DL.I6KQVX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zk8soo","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/xnlbke","References:DOI:10.5519/0002965","References:DOI:10.15468/qaevz2","References:DOI:10.15468/qhqzub","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T06:23:45Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:23:46Z","doi":"10.15468/DL.NCMDMW","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/zk8soo","References:DOI:10.15468/ypoair","References:DOI:10.15468/hrztgn","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/7gudyo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/euw5ge","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/eaqv44","References:DOI:10.5519/0002965","References:DOI:10.15468/ygtutx","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/gja4jo","References:DOI:10.15468/iawody","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/qaevz2","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T06:25:40Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:25:40Z","doi":"10.15468/DL.4PJM4N","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/w8gru5","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ennulm","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/tm56sc","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:25:41Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnJnbXRmZzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyODYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MjI4ODM4PC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA4NDMgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBjdXJ2dWxhIEFsbC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDg0MyByZWNvcmRzIGZyb20gMzcgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMTUgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJpZXIgQS4gTGUgR3JhbmQgKEJPVU0pLiAKIDEgcmVjb3JkcyBmcm9tIENvbGVjY2nDs24gZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBoZXJiYXJpbyBkZSBsYSBVbml2ZXJzaXRhdCBkZSBWYWzDqG5jaWEgKFZBTCkuLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy4gCiA1IHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiA0IHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogNTIwIHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogOCByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDggcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiA5IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSBIZXJiYXJpdW0gKFVCQykgLSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogNCByZWNvcmRzIGZyb20gQXJhbnphZGkgWmllbnR6aSBFbGthcnRlYS4gCiAxMTQgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiAxIHJlY29yZHMgZnJvbSBDSUJJTywgQWxpY2FudGU6QUJILUdCSUYuIAogMyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAzIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgUMO6YmxpY2EgZGUgTmF2YXJyYSwgUGFtcGxvbmE6IFVQTkEtSC4gCiAzNyByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMiByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLUhpc3TDs3JpY28uIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiA0IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBCYXJjZWxvbmEuIEdydXAgZEludmVzdGlnYWNpw7MgR2VvYm90w6FuaWNhIGkgQ2FydG9ncmFmaWEgZGUgbGEgVmVnZXRhY2nDsy4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMyByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDMxIHJlY29yZHMgZnJvbSBGbG9yYSBkJ0FuZG9ycmEuIAogNDAgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIE11c2V1bXMsIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiAyIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChBTFRBKS4gCiA2IHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBCb3RhbmljYWwgQ29sbGVjdGlvbi48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T06:25:41Z","doi":"10.15468/DL.RGMTFG","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/rhzrxw","References:DOI:10.5886/rtt57cc9","References:DOI:10.5519/0002965","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T06:25:45Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnU1aXZ5ODwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyODctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2VhcXY0NDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT41ODAxMzk8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDMwNDAgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBkYXZhbGxpYW5hIFNtLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMzA0MCByZWNvcmRzIGZyb20gNzEgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMiByZWNvcmRzIGZyb20gRHV0Y2ggVmVnZXRhdGlvbiBEYXRhYmFzZSAoTFZEKS4gCiA0MDcgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiA2IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDE1IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAzNDggcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBWaWVubmEsIEluc3RpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIFdVLiAKIDE1IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMzAgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDEgcmVjb3JkcyBmcm9tIFNjaGxlcm4gLSAoQm96ZW4pLiAKIDU1IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMiByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6c3RhdGlvbiBTY2htaWRzZmVsZGVuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy1IaXN0w7NyaWNvLiAKIDIgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMjAgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogQXRsYXMgZGUgbGEgZmxvcmUgZGUgTG9ycmFpbmUuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2V2aWxsYSwgU0VWLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiA3IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAxIHJlY29yZHMgZnJvbSBNaXNzb3VyaSBCb3RhbmljYWwgR2FyZGVuLiAKIDkgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMTQgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy4gCiAxMCByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMiByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBCb3RhbmljYWwgQ29sbGVjdGlvbi4gCiAxIHJlY29yZHMgZnJvbSBQcm9tYmVyZzEuIAogMyByZWNvcmRzIGZyb20gSmFyZMOtbiBCb3TDoW5pY28gZGUgQ8OzcmRvYmE6IEhlcmJhcml1bSBDT0EuIAogMyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFJob2VubXVzZXVtIEZsYWR1bmdlbi4gCiAxNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gTWFhc3RyaWNodCAoTkwpIC0gSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogMjU4IHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiAxIHJlY29yZHMgZnJvbSAyMCBKYWhyZSBOYXR1cnNjaHV0emdlYmlldCBEcmVpZW5iZXJnLiAKIDQgcmVjb3JkcyBmcm9tIEZsb1ZlZ1NJIC0gRmxvcmlzdGljYWwgYW5kIGZpdG9jZW5vbG9naWNhbCBkYXRhYmFzZSBvZiBaUkMgU0FaVS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEZlbGRiZW9iYWNodHVuZ3NkYXRlbiBQZmxhbnplbi4gCiAxMTQ4IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDE3IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiA3IHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBOYXZhcnJhLCBIZXJiYXJpdW06IFBBTVAtVmFzY3VsYXIgUGxhbnRzLiAKIDEwIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBCYXJjZWxvbmEuIEdydXAgZEludmVzdGlnYWNpw7MgR2VvYm90w6FuaWNhIGkgQ2FydG9ncmFmaWEgZGUgbGEgVmVnZXRhY2nDsy4gCiAxIHJlY29yZHMgZnJvbSBNZk4gLSBGb3NzaWwgcGxhbnRzIChDZW5vcGh5dGljKS4gCiAxIHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBQw7pibGljYSBkZSBOYXZhcnJhLCBQYW1wbG9uYTogVVBOQS1ILiAKIDIgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiAyIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgY29sbGVjdGlvbiAoUCkgb2YgdGhlIE11c8OpdW0gbmF0aW9uYWwgZCdIaXN0b2lyZSBOYXR1cmVsbGUgKE1OSE4gLSBQYXJpcykuIAogMTk4IHJlY29yZHMgZnJvbSBGbG9yYSBkJ0FuZG9ycmEuIAogMjggcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDMgcmVjb3JkcyBmcm9tIEZsb3JhIG9mIHRoZSBTdG/Fgm93ZSBNdHMuLiAKIDIzIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxOSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDIgcmVjb3JkcyBmcm9tIEVESVQgLSBBVEJJIGluIEdlbWVyIGFyZWEgKFNsb3Zha2lhKS4gCiA3MiByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMTEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogMyByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDEgcmVjb3JkcyBmcm9tIFZvbSBHaXBmZWwgaW5zIE1vb3IsIFRyYW5zZWt0IGltIE5TRyBBbGxnw6R1ZXIgSG9jaGFscGVuLiAKIDMgcmVjb3JkcyBmcm9tIFRoZSBGdW5nYWwgQ29sbGVjdGlvbiBhdCB0aGUgU2VuY2tlbmJlcmcgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBHw7ZybGl0ei4gCiAxMiByZWNvcmRzIGZyb20gQmFuY28gZGUgR2VybW9wbGFzbWEgZGVsIEphcmTDrW4gQm90w6FuaWNvIEF0bMOhbnRpY28uIAogODQgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiA1IHJlY29yZHMgZnJvbSBBcmFuemFkaSBaaWVudHppIEVsa2FydGVhLiAKIDMgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiA1MiByZWNvcmRzIGZyb20gSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMzAgcmVjb3JkcyBmcm9tIEJpb0ZyZXNoIFBvbmQgRGF0YS4gCiAxIHJlY29yZHMgZnJvbSBHdXJnbHRhbCAoVGFycmVueikuIAogMzEgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS4gCiAzIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T06:25:46Z","doi":"10.15468/DL.U5IVY8","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo","References:DOI:10.15468/eaqv44","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:25:47Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:25:47Z","doi":"10.15468/DL.YY8X9E","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/gja4jo","References:DOI:10.15468/zrlqok","References:DOI:10.15468/iawody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/k88vjq","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T06:26:26Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:26:26Z","doi":"10.15468/DL.MITURL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/qaevz2","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ke2ody","References:DOI:10.15468/ennulm","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/w8gru5","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wqsad9","References:DOI:10.15468/4entqy"],"publicationYear":"2015"},{"minted":"2015-04-08T06:31:22Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmJkdnBtejwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyODktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA2MjEgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBkZXBhdXBlcmF0YSBDdXJ0aXMgZXggU3Rva2VzIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA2MjEgcmVjb3JkcyBmcm9tIDM5IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDYgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIEhTUyBGaW5jYSBMYSBPcmRlbi1WYWxkZXNlcXVlcmEgKENJQ1lURVgpLiBHb2JpZXJubyBkZSBFeHRyZW1hZHVyYS4gCiAyIHJlY29yZHMgZnJvbSBCb3RhbmljYWwgSW5mb3JtYXRpb24gU3lzdGVtIG9mIEdlbmV2YS4gCiAxNCByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiA3IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBOYXZhcnJhLCBIZXJiYXJpdW06IFBBTVAtVmFzY3VsYXIgUGxhbnRzLiAKIDIgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxNzQgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDI4IHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMTI5IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDIxIHJlY29yZHMgZnJvbSBQbGFudGxpZmUgSW50ZXJuYXRpb25hbCAtIEJhY2sgZnJvbSB0aGUgQnJpbmsgdmFzY3VsYXIgcGxhbnQgc3BlY2llcyBhYnVuZGFuY2UgYW5kIGRpc3RyaWJ1dGlvbiBmb3IgR3JlYXQgQnJpdGFpbiBmb3IgdGhlIHBlcmlvZCAyMDAyLTIwMDkgLiAKIDEgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDEgcmVjb3JkcyBmcm9tIE1mTiAtIEZvc3NpbCBwbGFudHMgKENlbm9waHl0aWMpLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMTU4IHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiA4IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAyIHJlY29yZHMgZnJvbSBHZW9ncmFwaGljYWxseSB0YWdnZWQgSU5TREMgc2VxdWVuY2VzLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxIHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiAxNSByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMSByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogNiByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDMgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlIGFkZGl0aW9ucyBzaW5jZSAyMDAwLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIE11c2VvIGRlIExhIFNhbGxlIEJvZ290w6EgKE1MUykuIAogMiByZWNvcmRzIGZyb20gRHIgRnJhbmNpcyBSb3NlIEZpZWxkIE5vdGVib29rIFByb2plY3QgLSBGaWVsZCBOb3RlYm9vayBSZWNvcmRzIG9mIERyIEZyYW5jaXMgUm9zZSAxOTUwJ3MgdG8gMTk5MCdzLiAKIDEgcmVjb3JkcyBmcm9tIENvdW50cnlzaWRlIENvdW5jaWwgZm9yIFdhbGVzIC0gUmFyZSBGbG93ZXJpbmcgUGxhbnQgYW5kIEZlcm4gRGF0YS4gCiAyIHJlY29yZHMgZnJvbSBBcmFuemFkaSBaaWVudHppIEVsa2FydGVhLiAKIDYgcmVjb3JkcyBmcm9tIEJpb2xvZ2ljYWwgYW5kIHBhbGFlb250b2xvZ2ljYWwgY29sbGVjdGlvbiBhbmQgb2JzZXJ2YXRpb24gZGF0YSBNTkhOTC4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEZlbGRiZW9iYWNodHVuZ3NkYXRlbiBQZmxhbnplbi4gCiA2IHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDMgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJpZXIgQS4gTGUgR3JhbmQgKEJPVU0pLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogNyByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgKEkwOTMpIDogRmxvcmUgZHUgTWFzc2lmIEFybW9yaWNhaW4uIAogMSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBCb3RhbmljYWwgQ29sbGVjdGlvbi4gCiAxIHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMiByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGNvbGxlY3Rpb24gKFApIG9mIHRoZSBNdXPDqXVtIG5hdGlvbmFsIGQnSGlzdG9pcmUgTmF0dXJlbGxlIChNTkhOIC0gUGFyaXMpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:31:22Z","doi":"10.15468/DL.BDVPMZ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T06:31:46Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmlrbzVpeDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyODgtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3c4Z3J1NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wajJ5cmg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9qeGJocXg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ocnp0Z248L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9namE0am88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9yaHpyeHc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93cXNhZDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC95Z3R1dHg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9tYmhtbXQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC94bmxia2U8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93dGx5bWs8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96cmxxb2s8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC90dm5qazc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9lYXF2NDQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ra2IyeDA8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9nMXpvaHI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+Mjk3ODIzNjwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTcwMTQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBkZW1pc3NhIEhvcm5lbS4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDE3MDE0IHJlY29yZHMgZnJvbSA5NiBjb25zdGl0dWVudCBkYXRhc2V0czogCiA3NzcgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW55IFVuaXQsIEZpbm5pc2ggTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoSCkuIAogMSByZWNvcmRzIGZyb20gQ3V4aGF2ZW5lciBLw7xzdGVuaGVpZGVuLiAKIDE1OCByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDEgcmVjb3JkcyBmcm9tIEtuZWNodHdlaWRlIChLb2hsZnVydGgpLiAKIDYgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiAxMjczIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBPc2xvIChPKS4gCiAyIHJlY29yZHMgZnJvbSBCaW9GcmVzaCBQb25kIERhdGEuIAogNDggcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDMwNCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBGcmFuY28tQmVsZ2UuIAogNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiA2ODIgcmVjb3JkcyBmcm9tIEZsb3JhYmFuazEgLSBBIGdyaWQtYmFzZWQgZGF0YWJhc2Ugb24gdmFzY3VsYXIgcGxhbnQgIGRpc3RyaWJ1dGlvbiBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiBCZWxnaXVtIChGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgcmVnaW9uKS4gCiAxMyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBNdXNldW0gb2YgQXJjaGFlb2xvZ3ksIFVuaXZlcnNpdHkgb2YgU3RhdmFuZ2VyLiAKIDEgcmVjb3JkcyBmcm9tIEJVTkQgLSBEYXNzb3dlciBTZWUgKEzDvGJlY2svRGFzc293KS4gCiAyMjcgcmVjb3JkcyBmcm9tIFRyb21zw7ggTXVzZXVtLCBWYXNjdWxhciBwbGFudHMuIAogMjYwIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudCBoZXJiYXJpdW0sIEFnZGVyIG5hdHVybXVzZXVtIG9nIGJvdGFuaXNrZSBoYWdlLiAKIDEwOSByZWNvcmRzIGZyb20gQmlvRm9rdXMuIAogNDk5IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGQnSWxsZS1ldC1WaWxhaW5lLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAoSUNFTCkuIAogMSByZWNvcmRzIGZyb20gTmV3IFplYWxhbmQgQmlvZGl2ZXJzaXR5IFJlY29yZGluZyBOZXR3b3JrLiAKIDEgcmVjb3JkcyBmcm9tIExCViAxMDAgLSBBcnRlbnZpZWxmYWx0IGFtIFJvdGhzZWUuIAogMTUzMyByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxNiByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gQm90YW55IERpdmlzaW9uLCBZYWxlIFBlYWJvZHkgTXVzZXVtLiAKIDExIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gVm9uZGVyYXUgLSBGVUxELiAKIDIxMCByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDEgcmVjb3JkcyBmcm9tIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgaW4gIldpbGR0aWVybGFuZCIuIAogNDEgcmVjb3JkcyBmcm9tIEJhc2UgZGUgZGF0b3MgZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBQYcOtcyBWYXNjbzogQVJBTi1FSC4gCiAyNjkgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIEFnZGVyIG5hdHVybXVzZXVtIChLTU4pLiAKIDMyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFuaWNhbCBNdXNldW0sIFVuaXZlcnNpdHkgb2YgT3VsdSwgRmlubGFuZCAoT1VMVSkuIAogMTM5IHJlY29yZHMgZnJvbSBPSE4uIAogNDYyIHJlY29yZHMgZnJvbSBOb3J3ZWdpYW4gU3BlY2llcyBPYnNlcnZhdGlvbiBTZXJ2aWNlLiAKIDYgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgRmVsZGJlb2JhY2h0dW5nc2RhdGVuIFBmbGFuemVuLiAKIDcgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy4gCiA1IHJlY29yZHMgZnJvbSBDT05OLiAKIDMwIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMjUgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYSdzIFZpcnR1YWwgSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNldmlsbGEsIFNFVi4gCiA2IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08tQnJpb2YuIAogMSByZWNvcmRzIGZyb20gQXJ0ZW52aWVsZmFsdCBhdWYgZGVyIFdlaWRlIC0gR0VPLUhhdXB0dmVyYW5zdGFsdHVuZyBpbiBDcmF3aW5rZWwuIAogMSByZWNvcmRzIGZyb20gTmF0dXJzY2h1dHpnZWJpZXQgTMO8bmVidXJnZXIgSGVpZGUuIAogMSByZWNvcmRzIGZyb20gYm90YW5pY2FsY29sbGVjdGlvbi4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAyMDMgcmVjb3JkcyBmcm9tIEpvcmRhbC4gCiAxIHJlY29yZHMgZnJvbSBGYXVuLiAKIDIgcmVjb3JkcyBmcm9tIE5ldyBaZWFsYW5kIE5hdGlvbmFsIFZlZ2V0YXRpb24gU3VydmV5IERhdGFiYW5rLiAKIDE2IHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDIgcmVjb3JkcyBmcm9tIFBoYW5lcm9nYW1pYyBCb3RhbmljYWwgQ29sbGVjdGlvbnMgKFMpLiAKIDMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIEhlcmJhcml1bSwgTk1CVS4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIChOTFAgSGFyeiAvIEhvY2hoYXJ6KS4gCiA3IHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAoQU1OSCkuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIEFzb2NpYWNpw7NuIEJJR0EgcGFyYSBlbCBlc3R1ZGlvIGRlbCBwYXRyaW1vbmlvIG5hdHVyYWwgZGUgR2FsaWNpYTogRkJJR0EuIAogNDM3MiByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiA0NCByZWNvcmRzIGZyb20gQmVsZ2lhbiBJRkJMIEZsb3JhIENoZWNrbGlzdHMgKDE5MzktMTk3MSkuIAogMjQ2IHJlY29yZHMgZnJvbSBWZWdldGF0aW9uIGRhdGEgZnJvbSBwcm90ZWN0ZWQgYXJlYXMgaW4gRGVubWFyayAowqcgMyBpbiB0aGUgRGFuaXNoIE5hdHVyZSBQcm90ZWN0aW9uIEFjdCkuIAogMjkgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogODI2IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIE9zbG8gKE8pLiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiAzMyByZWNvcmRzIGZyb20gSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAow4VibyBBa2FkZW1pKSwgQ2VudHJlIGZvciBCaW9kaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgVHVya3UgKFRVUkEpLiAKIDIgcmVjb3JkcyBmcm9tIENvbGVjY2nDs24gZGUgcGxhbnRhcyB2YXNjdWxhcmVzIGRlbCBoZXJiYXJpbyBkZSBsYSBVbml2ZXJzaXRhdCBkZSBWYWzDqG5jaWEgKFZBTCkuLiAKIDEgcmVjb3JkcyBmcm9tIEJlcmdrYW1lbi0gQmVyZ2VoYWxkZSBHcm/Dn2VzIEhvbHouIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFJob2VubXVzZXVtIEZsYWR1bmdlbi4gCiAzMzUgcmVjb3JkcyBmcm9tIEdvdGhlbmJ1cmcgSGVyYmFyaXVtIC0gR2VuZXJhbCAoR0JJRjpJSDpHQjpIZXJiYXJpdW0pLiAKIDcgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDEgcmVjb3JkcyBmcm9tIFdpbGRlc01vb3IgYmVpIFNjaHdhYnN0ZWR0LiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIEhTUyBGaW5jYSBMYSBPcmRlbi1WYWxkZXNlcXVlcmEgKENJQ1lURVgpLiBHb2JpZXJubyBkZSBFeHRyZW1hZHVyYS4gCiA1NzEgcmVjb3JkcyBmcm9tIEx1bmQgQm90YW5pY2FsIE11c2V1bSAoTEQpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6Z2ViaWV0IFNpc3RpZy1LcmVrZWxlci1IZWlkZS4gCiAxMzQgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiA4IHJlY29yZHMgZnJvbSBCb3RhbnkgcmVnaXN0cmF0aW9uIGRhdGFiYXNlIGJ5IERhbmlzaCBib3RhbmlzdHMuIAogODEgcmVjb3JkcyBmcm9tIFdldGxhbmQgSW52ZW50b3J5IChOVikuIAogMSByZWNvcmRzIGZyb20gTmF0aW9uYWwgU3lzdGVtIG9mIFByb3RlY3RlZCBBcmVhcyBpbiBQb2xhbmQgLSBQbGFudHMuIAogMTIgcmVjb3JkcyBmcm9tIE5ldyBaZWFsYW5kIE5hdGlvbmFsIFBsYW50IEhlcmJhcml1bSAoQ0hSKS4gCiAxMDcgcmVjb3JkcyBmcm9tIEZsb3Jpc3RpYyBEYXRhYmFzZXMgb2YgTWVja2xlbmJ1cmctUG9tZXJhbmlhIC0gSGlnaGVyIFBsYW50cy4gCiA1ODcgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVHJvbmRoZWltIChUUkgpLiAKIDggcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogNjY5IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIFVpQi4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1LCBGaW5sYW5kIChUVVIpLiAKIDMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgT2JzZXJ2YXRpb25zLCBPc2xvIChPKS4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBQw7pibGljYSBkZSBOYXZhcnJhLCBQYW1wbG9uYTogVVBOQS1ILiAKIDI5NCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgKEkwOTMpIDogRmxvcmUgZHUgTWFzc2lmIEFybW9yaWNhaW4uIAogMiByZWNvcmRzIGZyb20gQXJ0ZW5GaW5kZXIuIAogMyByZWNvcmRzIGZyb20gQmFuY28gZGUgR2VybW9wbGFzbWEgZGVsIEphcmTDrW4gQm90w6FuaWNvIEF0bMOhbnRpY28uIAogNTgwIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgaW4gRGVubWFyayByZWNvcmRlZCB1bmRlciB0aGUgVGhlIE5hdGlvbndpZGUgTW9uaXRvcmluZyBhbmQgQXNzZXNzbWVudCBQcm9ncmFtbWUgZm9yIHRoZSBBcXVhdGljIGFuZCBUZXJyZXN0cmlhbCBFbnZpcm9ubWVudHMgKE5PVkFOQSkuIAogMjAyIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGR1IExpbW91c2luLiAKIDUgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAzNDUgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIFRyb25kaGVpbSAoVFJIKS4gCiAxIHJlY29yZHMgZnJvbSBQcmllc3QgUG90IHNwZWNpZXMgbGlzdCwgQ3VtYnJpYSwgQnJpdGFpbi4gCiAxIHJlY29yZHMgZnJvbSBPYmVyZXMgU2NoaW5kZWxiYWNodGFsLiAKIDc1IHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMiByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBzcGVjaW1lbnMgb2YgSmFyZGlucyBib3RhbmlxdWVzIGFuZCBDb25zZXJ2YXRvaXJlCQlCb3RhbmlxdWUgb2YgTmFuY3kgKE5DWSkuIAogMSByZWNvcmRzIGZyb20gQm90YW5pY2FsIEluZm9ybWF0aW9uIFN5c3RlbSBvZiBHZW5ldmEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T06:31:46Z","doi":"10.15468/DL.IKO5IX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/w8gru5","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/gja4jo","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wqsad9","References:DOI:10.15468/ygtutx","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/eaqv44","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T06:31:54Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:31:54Z","doi":"10.15468/DL.CWP5ET","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/euw5ge","References:DOI:10.15468/hrztgn","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/uc1apo","References:DOI:10.15468/7gudyo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/c4w4co","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/iawody","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ahunho","References:DOI:10.15468/qaevz2","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/eaqv44","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T06:31:55Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:31:55Z","doi":"10.15468/DL.ON2GGT","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/wtlymk","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/euw5ge","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/gja4jo","References:DOI:10.15468/kllkyl","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/iawody","References:DOI:10.15468/c4w4co","References:DOI:10.15468/qaevz2","References:DOI:10.15468/zrlqok","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/wqsad9","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq"],"publicationYear":"2015"},{"minted":"2015-04-08T06:31:59Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnQwNGoweDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAyOTEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lndHV0eDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BqMnlyaDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L21iaG1tdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d6dzBrMjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d0bHltazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tlMm9keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2FodW5obzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2trYjJ4MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3R2bmprNzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2dqYTRqbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2p4YmhxeDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93OGdydTU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96cmxxb2s8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93cXNhZDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+NDcxMjIwNDwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzE0OTQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBkaWdpdGF0YSBMLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMzE0OTQgcmVjb3JkcyBmcm9tIDEzNyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEZsb3JhIHNlbGVjdGEgZXhzaWNjYXRhIHB1Ymxpw6kgcGFyIENoLiBNQUdOSUVSIChCT1VNKS4gCiAyIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiA1MDEgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxIHJlY29yZHMgZnJvbSBQZXJjaHRvbGRzZG9yZmVyIEhlaWRlLiAKIDc4NCByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBCb3RhbmljYWwgTXVzZXVtLCBVbml2ZXJzaXR5IG9mIE91bHUsIEZpbmxhbmQgKE9VTFUpLiAKIDIgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBIZXJiYXJpdW0gKEUpLiAKIDEwNiByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEJvdGFuaWNhbCBDb2xsZWN0aW9uLiAKIDIyMzkgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMyByZWNvcmRzIGZyb20gRmF1bi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBNdXNlbyBkZSBMYSBTYWxsZSBCb2dvdMOhIChNTFMpLiAKIDQgcmVjb3JkcyBmcm9tIERyIEZyYW5jaXMgUm9zZSBGaWVsZCBOb3RlYm9vayBQcm9qZWN0IC0gRmllbGQgTm90ZWJvb2sgUmVjb3JkcyBvZiBEciBGcmFuY2lzIFJvc2UgMTk1MCdzIHRvIDE5OTAncy4gCiA2NTQ5IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFueSBVbml0LCBGaW5uaXNoIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkgKEgpLiAKIDM4NiByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBGcmFuY28tQmVsZ2UuIAogNiByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogNTYgcmVjb3JkcyBmcm9tIFNvdXRoIEVhc3QgV2FsZXMgQmlvZGl2ZXJzaXR5IFJlY29yZHMgQ2VudHJlIC0gQ0NXIFJlZ2lvbmFsIERhdGEgOiBTb3V0aCBFYXN0IFdhbGVzIE5vbi1zZW5zaXRpdmUgU3BlY2llcyBSZWNvcmRzLiAKIDIwIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBMZWlkZW4uIAogMjggcmVjb3JkcyBmcm9tIFJvdGhlcmhhbSBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gUm90aGVyaGFtIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBOb24tc2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gCiAxIHJlY29yZHMgZnJvbSBQbGFudGFlLCBUQUlGIChUYWl3YW4gZS1MZWFybmluZyBhbmQgRGlnaXRhbCBBcmNoaXZlcyBQcm9ncmFtLCBURUxEQVApLiAKIDIgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogMSByZWNvcmRzIGZyb20gR0VPIEhhdXB0dmVyYW5zdGFsdHVuZyBUaXJvbCAoSW5uc2JydWNrKS4gCiAxIHJlY29yZHMgZnJvbSBBbnltYWxzK3BsYW50cyAtIENpdGl6ZW4gU2NpZW5jZSBEYXRhLiAKIDEyMyByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDI0IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE11c2V1bSBvZiBBcmNoYWVvbG9neSwgVW5pdmVyc2l0eSBvZiBTdGF2YW5nZXIuIAogNyByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLiAKIDE3IHJlY29yZHMgZnJvbSBDYXTDoWxvZ28gRmxvcsOtc3RpY28gSGlzdMOzcmljbyBkZSBOYXZhcnJhLiBHb2JpZXJubyBkZSBOYXZhcnJhLiAKIDggcmVjb3JkcyBmcm9tIE5vcnRoICZhbXA7IEVhc3QgWW9ya3NoaXJlIEVjb2xvZ2ljYWwgRGF0YSBDZW50cmUgLSBOb3J0aCBhbmQgRWFzdCBZb3Jrc2hpcmUgRWNvbG9naWNhbCBEYXRhIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAuIAogMjEgcmVjb3JkcyBmcm9tIEZsb3JhIGQnQW5kb3JyYS4gCiA0MSByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogNiByZWNvcmRzIGZyb20gRmxvcmEgb2YgdGhlIFN0b8WCb3dlIE10cy4uIAogNiByZWNvcmRzIGZyb20gVmFzY3VsYXIgSGVyYmFyaXVtLCBOTUJVLiAKIDE0IHJlY29yZHMgZnJvbSBTV0VDTy4gCiAzNSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMiByZWNvcmRzIGZyb20gSW5zdGl0dXRvIGRlIEJvdMOhbmljYSBEYXJ3aW5pb24uIAogMSByZWNvcmRzIGZyb20gQmlvc3Bow6RyZW5wYXJrIFdpZW5lcndhbGQgLSBXaWVuZXIgU3RlaW5ob2ZncsO8bmRlLiAKIDcgcmVjb3JkcyBmcm9tIE5hdGlvbmFsIFN5c3RlbSBvZiBQcm90ZWN0ZWQgQXJlYXMgaW4gUG9sYW5kIC0gUGxhbnRzLiAKIDMgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE5hdmFycmEsIEhlcmJhcml1bTogUEFNUC1WYXNjdWxhciBQbGFudHMuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2V2aWxsYSwgU0VWLiAKIDE5IHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEZlbGRiZW9iYWNodHVuZ3NkYXRlbiBQZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBLw7ZuaWdzdGV0dGVuLiAKIDQgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogOCByZWNvcmRzIGZyb20gU2hyb3BzaGlyZSBFY29sb2dpY2FsIERhdGEgTmV0d29yayAtIFNocm9wc2hpcmUgRWNvbG9naWNhbCBEYXRhIE5ldHdvcmsgRGF0YWJhc2UuIAogMSByZWNvcmRzIGZyb20gS0FSU1RMQU5EU0NIQUZUIFPDnERIQVJaIC0gVk9NIEdJUFNBQkJBVSBCRURST0hUICAoR3JlbnpzdHJlaWZlbiBhbSBSw7ZzZWJlcmcpLiAKIDY3NyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBPc2xvIChPKS4gCiAzMDAgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAxMDUgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBpbiBEZW5tYXJrIHJlY29yZGVkIHVuZGVyIHRoZSBUaGUgTmF0aW9ud2lkZSBNb25pdG9yaW5nIGFuZCBBc3Nlc3NtZW50IFByb2dyYW1tZSBmb3IgdGhlIEFxdWF0aWMgYW5kIFRlcnJlc3RyaWFsIEVudmlyb25tZW50cyAoTk9WQU5BKS4gCiAxIHJlY29yZHMgZnJvbSBGZWxzLSB1bmQgV2VpbmJlcmdzZmzDpGNoZW4gaW4gSGF0emVucG9ydC9UZXJyYXNzZW5tb3NlbC4gCiA2NyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIEp5dsOkc2t5bMOkIFVuaXZlcnNpdHkgTXVzZXVtLiAKIDEwIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMTUgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogNyByZWNvcmRzIGZyb20gRkxPUklWT04uIAogMSByZWNvcmRzIGZyb20gVkZELUJXLCBEaW5rZWxiZXJnOiBQZmVyZGV3ZWlkZW4gT2Jlcm1pbnNlbG4uIAogMjE4IHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiAxIHJlY29yZHMgZnJvbSBWZWdldGF0aW9uIGRhdGEgZnJvbSBwcm90ZWN0ZWQgYXJlYXMgaW4gRGVubWFyayAowqcgMyBpbiB0aGUgRGFuaXNoIE5hdHVyZSBQcm90ZWN0aW9uIEFjdCkuIAogMSByZWNvcmRzIGZyb20gTmVja2FydGFsc8O8ZGhhbmcgKEhvcmIpLiAKIDEgcmVjb3JkcyBmcm9tIFZvbSBHaXBmZWwgaW5zIE1vb3IsIFRyYW5zZWt0IGltIE5TRyBBbGxnw6R1ZXIgSG9jaGFscGVuLiAKIDEgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZHUgTGltb3VzaW4uIAogMTMgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMzcgcmVjb3JkcyBmcm9tIER1dGNoIFZlZ2V0YXRpb24gRGF0YWJhc2UgKExWRCkuIAogNDggcmVjb3JkcyBmcm9tIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCBkaXN0cmlidXRpb24gaW4gdGhlIE1lc2hjaGVyYSBOYXRpb25hbCBQYXJrLCBWbGFkaW1pciBPYmxhc3QsIFJ1c3NpYS4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgY29sbGVjdGlvbiAoUCkgb2YgdGhlIE11c8OpdW0gbmF0aW9uYWwgZCdIaXN0b2lyZSBOYXR1cmVsbGUgKE1OSE4gLSBQYXJpcykuIAogMyByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gR2VtZXIgYXJlYSAoU2xvdmFraWEpLiAKIDEgcmVjb3JkcyBmcm9tIFNoZWZmaWVsZCBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU2hlZmZpZWxkIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAuIAogMzE3IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBUcm9uZGhlaW0gKFRSSCkuIAogMyByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogNyByZWNvcmRzIGZyb20gQmFuY28gZGUgRGF0b3MgZGUgbGEgQmlvZGl2ZXJzaWRhZCBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYS4gCiA2NyByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gVGFnIGRlciBBcnRlbnZpZWxmYWx0IGltIFRhdWJlbnRhbC4gCiAyIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogMjQgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBJbmZvcm1hdGlvbiBTeXN0ZW0gb2YgR2VuZXZhLiAKIDEgcmVjb3JkcyBmcm9tIFdhbGRyw6RuZGVyIGRlciBGcmFua2VuaMO2aGUgKFJvdGhlbmJ1cmcgb2IgZGVyIFRhdWJlcikuIAogMTIgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDE0NzcgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6c3RhdGlvbiBTY2htaWRzZmVsZGVuLiAKIDggcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiA4IHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IFdhZ2VuaW5nZW4uIAogMSByZWNvcmRzIGZyb20gR2VtZWluZGUgU3Vyc2VlLiAKIDM3OCByZWNvcmRzIGZyb20gQXRsYXMgZGVzIHBsYW50ZXMgdmFzY3VsYWlyZXMgZGUgTG9ycmFpbmUuIAogMyByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBPYnNlcnZhdGlvbnMsIE9zbG8gKE8pLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogOTc4IHJlY29yZHMgZnJvbSBOYXRpb25hbCBGb3Jlc3QgSW52ZW50b3J5IChTTFUpLiAKIDIxIHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMyByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkZSBsJ0Fpbi4gCiAyNDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIEFnZGVyIG5hdHVybXVzZXVtIChLTU4pLiAKIDE1MCByZWNvcmRzIGZyb20gT0hOLiAKIDE5IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpLiAKIDExMyByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBSaG9lbm11c2V1bSBGbGFkdW5nZW4uIAogMTUxIHJlY29yZHMgZnJvbSBGbG9yaXN0aWMgRGF0YWJhc2VzIG9mIE1lY2tsZW5idXJnLVBvbWVyYW5pYSAtIEhpZ2hlciBQbGFudHMuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBNYWFzdHJpY2h0IChOTCkgLSBIZXJiYXJpdW0uIAogMTM1NyByZWNvcmRzIGZyb20gTm9yd2VnaWFuIFNwZWNpZXMgT2JzZXJ2YXRpb24gU2VydmljZS4gCiA0MDcgcmVjb3JkcyBmcm9tIEJpb0Zva3VzLiAKIDY3IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBVU1UtVVRDIFNwZWNpbWVuIERhdGFiYXNlLiAKIDUgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYSdzIFZpcnR1YWwgSGVyYmFyaXVtLiAKIDQgcmVjb3JkcyBmcm9tIEJvdGFueSByZWdpc3RyYXRpb24gZGF0YWJhc2UgYnkgRGFuaXNoIGJvdGFuaXN0cy4gCiAzMyByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSwgRmlubGFuZCAoVFVSKS4gCiAxIHJlY29yZHMgZnJvbSBHdXJnbHRhbCAoVGFycmVueikuIAogMyByZWNvcmRzIGZyb20gTmF0aW9uYWFsIEhlcmJhcml1bSBOZWRlcmxhbmQuIAogMSByZWNvcmRzIGZyb20gU2NobGVybiAtIChCb3plbikuIAogNTggcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBCaW9zcGjDpHJlbnBhcmsgV2llbmVyd2FsZCAtIFBmYWZmc3TDpHR0ZW4uIAogMjIgcmVjb3JkcyBmcm9tIEZsb3JhYmFuazEgLSBBIGdyaWQtYmFzZWQgZGF0YWJhc2Ugb24gdmFzY3VsYXIgcGxhbnQgIGRpc3RyaWJ1dGlvbiBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiBCZWxnaXVtIChGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgcmVnaW9uKS4gCiAyMTkzIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBPc2xvIChPKS4gCiAxNSByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMTU4IHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudCBoZXJiYXJpdW0sIEFnZGVyIG5hdHVybXVzZXVtIG9nIGJvdGFuaXNrZSBoYWdlLiAKIDg0NTkgcmVjb3JkcyBmcm9tIEFydGRhdGEuIAogNiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFZvbmRlcmF1IC0gRlVMRC4gCiA0NDggcmVjb3JkcyBmcm9tIEx1bmQgQm90YW5pY2FsIE11c2V1bSAoTEQpLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYXVmIGRlciBXZWlkZSAtIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgaW4gQ3Jhd2lua2VsLiAKIDkgcmVjb3JkcyBmcm9tIFRoZSBGdW5nYWwgQ29sbGVjdGlvbiBhdCB0aGUgU2VuY2tlbmJlcmcgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBHw7ZybGl0ei4gCiA0MDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVHJvbmRoZWltIChUUkgpLiAKIDI4IHJlY29yZHMgZnJvbSBib3RhbmljYWxjb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAyNzIgcmVjb3JkcyBmcm9tIEdvdGhlbmJ1cmcgSGVyYmFyaXVtIC0gR2VuZXJhbCAoR0JJRjpJSDpHQjpIZXJiYXJpdW0pLiAKIDE1IHJlY29yZHMgZnJvbSBXaWx0c2hpcmUgYW5kIFN3aW5kb24gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFdpbHRzaGlyZSAmYW1wOyBTd2luZG9uIFNpdGUtYmFzZWQgU3VydmV5IFJlY29yZHMuIAogMTQgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAzNjcgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEyIHJlY29yZHMgZnJvbSBGaWVsZGpvdXJuYWwub3JnIG9ic2VydmF0aW9uIGRhdGFiYXNlLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogODIgcmVjb3JkcyBmcm9tIEpvcmRhbC4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEhlcmJhcml1bSBPZXNhdS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gKMOFYm8gQWthZGVtaSksIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1IChUVVJBKS4gCiAxIHJlY29yZHMgZnJvbSBWRkQtQlcsIE9iZXJyaGVpbi9TY2h3YXJ6d2FsZHJhbmQ6IFBmZXJkZXdlaWRlbiBMaWVsLiAKIDEyIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuIAogNDAgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIEJhcmNlbG9uYS4gR3J1cCBkSW52ZXN0aWdhY2nDsyBHZW9ib3TDoW5pY2EgaSBDYXJ0b2dyYWZpYSBkZSBsYSBWZWdldGFjacOzLiAKIDIgcmVjb3JkcyBmcm9tIEFydGVuRmluZGVyLiAKIDIwMSByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEgcmVjb3JkcyBmcm9tIE5BQlUtUHJvamVrdCAoT3N0ZXJvZGUgYW0gSGFyeikgU8O8ZGhhcnplciBHaXBza2Fyc3QuIAogMTEgcmVjb3JkcyBmcm9tIEJyaXN0b2wgUmVnaW9uYWwgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIEJSRVJDIE9jdG9iZXIgMjAwOS4gCiAxOTEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVWlCLiAKIDYgcmVjb3JkcyBmcm9tIFdldGxhbmQgSW52ZW50b3J5IChOVikuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLiAKIDI4IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgQ29sbGVjdGlvbi48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T06:31:59Z","doi":"10.15468/DL.T04J0X","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/ahunho","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/gja4jo","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T06:32:02Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:32:02Z","doi":"10.15468/DL.D6GMVS","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/g1zohr","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ypoair","References:DOI:10.15468/xnlbke","References:DOI:10.15468/hrztgn","References:DOI:10.15468/qaevz2","References:DOI:10.15468/g1wfae","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/wtlymk","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T06:41:09Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:41:09Z","doi":"10.15468/DL.RFHOSI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/ahunho","References:DOI:10.15468/ke2ody","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ypoair","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/ly60bx","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:41:18Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:41:18Z","doi":"10.15468/DL.6KLB6W","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/gja4jo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/pal1lb","References:DOI:10.15468/mbhmmt","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ke2ody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.5519/0002965","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/wtlymk"],"publicationYear":"2015"},{"minted":"2015-04-08T06:41:21Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:41:21Z","doi":"10.15468/DL.HQD9H6","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/ypoair","References:DOI:10.15468/7gudyo","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/fdzzal","References:DOI:10.15468/g1zohr","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/g1wfae","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/tm56sc","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T06:41:41Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:41:41Z","doi":"10.15468/DL.1GYMT9","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/ke2ody","References:DOI:10.15468/nema2n","References:DOI:10.15468/l8vpay","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/ahunho","References:DOI:10.15468/c4w4co","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/tm56sc","References:DOI:10.5519/0002965","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T06:42:05Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:42:05Z","doi":"10.15468/DL.GIHPYV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/qhqzub","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/s6ctus","References:DOI:10.15468/ke2ody","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/hrztgn","References:DOI:10.15468/7gudyo","References:DOI:10.15468/ahunho","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/eaqv44","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/gja4jo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/k88vjq","References:DOI:10.15468/iawody","References:DOI:10.15468/ygtutx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/uc1apo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/euw5ge","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T06:42:06Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:42:06Z","doi":"10.15468/DL.FX4NM6","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/o3pvnh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/gja4jo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/w8gru5","References:DOI:10.15468/2g6i0v","References:DOI:10.5519/0002965","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/c4w4co","References:DOI:10.15468/qaevz2","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T06:47:04Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLndmdmR1OTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMDItMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAxODIgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBmaXJtYSBIb3N0IApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxODIgcmVjb3JkcyBmcm9tIDI1IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYSdzIFZpcnR1YWwgSGVyYmFyaXVtLiAKIDU2IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDEwIHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiAxIHJlY29yZHMgZnJvbSBOU0cgS2Fyd2VuZGVsLiAKIDEgcmVjb3JkcyBmcm9tIFNjaGxlcm4gLSAoQm96ZW4pLiAKIDI0IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMSByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gTWFhc3RyaWNodCAoTkwpIC0gSGVyYmFyaXVtLiAKIDE5IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAyIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogMiByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDM1IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMSByZWNvcmRzIGZyb20gQXJ0ZW52aWVsZmFsdCBhbSBTY2hsZXJuLiAKIDEgcmVjb3JkcyBmcm9tIFRoZSBFeHNpY2NhdGFsIFNlcmllcyAiVHJpZWJlbCwgTWljcm9mdW5naSBleHNpY2NhdGkiLiAKIDMgcmVjb3JkcyBmcm9tIEJpb0ZyZXNoIFBvbmQgRGF0YS4gCiAxIHJlY29yZHMgZnJvbSBWb20gR2lwZmVsIGlucyBNb29yLCBUcmFuc2VrdCBpbSBOU0cgQWxsZ8OkdWVyIEhvY2hhbHBlbi4gCiA0IHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMiByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDEgcmVjb3JkcyBmcm9tIEdFTyBIYXVwdHZlcmFuc3RhbHR1bmcgVGlyb2wgKElubnNicnVjaykuIAogMyByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDQgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgQm90YW5pY2FsIENvbGxlY3Rpb24uIAogNSByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:47:04Z","doi":"10.15468/DL.WFVDU9","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T06:47:08Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLndlNnlxbzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMDEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2hyenRnbjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTI5NzkyPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAzOTggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBmZXJydWdpbmVhIFNjb3AuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAzOTggcmVjb3JkcyBmcm9tIDM4IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDYgcmVjb3JkcyBmcm9tIEJvdGFueSBEaXZpc2lvbiwgWWFsZSBQZWFib2R5IE11c2V1bS4gCiAxIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMyByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkZSBsJ0Fpbi4gCiAxIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiAxIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiA3MSByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDEgcmVjb3JkcyBmcm9tIEdFTyBIYXVwdHZlcmFuc3RhbHR1bmcgVGlyb2wgKElubnNicnVjaykuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiAyIHJlY29yZHMgZnJvbSBNYXJpZS1WaWN0b3JpbiBIZXJiYXJpdW0gKE1UKS4gCiAxMyByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDQgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxMzggcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogNiByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gTlNHIEthcndlbmRlbC4gCiAxMCByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBWaWVubmEsIEluc3RpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIFdVLiAKIDYgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiAxIHJlY29yZHMgZnJvbSBTY2hsZXJuIC0gKEJvemVuKS4gCiA0MyByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAyIHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogNSByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDEgcmVjb3JkcyBmcm9tIFZvbSBHaXBmZWwgaW5zIE1vb3IsIFRyYW5zZWt0IGltIE5TRyBBbGxnw6R1ZXIgSG9jaGFscGVuLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE5hdmFycmEsIEhlcmJhcml1bTogUEFNUC1WYXNjdWxhciBQbGFudHMuIAogNSByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAyNCByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDMgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDIgcmVjb3JkcyBmcm9tIEJpb0ZyZXNoIFBvbmQgRGF0YS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogMzAgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgQm90YW5pY2FsIENvbGxlY3Rpb24uIAogMSByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:47:08Z","doi":"10.15468/DL.WE6YQO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/hrztgn","References:DOI:10.15468/pal1lb","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T06:47:16Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZhYmJsNzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMDUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xNjU3MTU8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDY0OCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IGZyaWdpZGEgQWxsLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNjQ4IHJlY29yZHMgZnJvbSAzNSBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXTDpHQgU2FsemJ1cmcuIAogMSByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDIgcmVjb3JkcyBmcm9tIEphcmTDrW4gQm90w6FuaWNvIEF0bMOhbnRpY28sIEdpasOzbjogSkJBRy1MYcOtbnouIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDcyIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0emdlYmlldCBTaXN0aWctS3Jla2VsZXItSGVpZGUuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiAzIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiAxMjMgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiA4IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiA5IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMiByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDY1IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMyByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMjIgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDcgcmVjb3JkcyBmcm9tIENhcm5ldCBlbiBMaWduZS4gCiA5IHJlY29yZHMgZnJvbSBBcmFuemFkaSBaaWVudHppIEVsa2FydGVhLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMyByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLiAKIDEgcmVjb3JkcyBmcm9tIEJpb0ZyZXNoIFBvbmQgRGF0YS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMSByZWNvcmRzIGZyb20gSGVyYmllciBBLiBMZSBHcmFuZCAoQk9VTSkuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLiAKIDkgcmVjb3JkcyBmcm9tIGluYXR1cmEgLSBFcmxlYm5pcyBOYXR1cnNjaGF1IERvcm5iaXJuLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogMTQgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS4gCiA2IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgSW5mb3JtYXRpb24gU3lzdGVtIG9mIEdlbmV2YS4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08tQnJpb2YuIAogMSByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiAxNjIgcmVjb3JkcyBmcm9tIEZsb3JhIGQnQW5kb3JyYS4gCiAxMDMgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiAyIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiA0IHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T06:47:16Z","doi":"10.15468/DL.VABBL7","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T06:47:35Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:47:35Z","doi":"10.15468/DL.JADGLL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/wtlymk","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/l8vpay","References:DOI:10.15468/gja4jo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/w8gru5","References:DOI:10.15468/zrlqok","References:DOI:10.15468/tm56sc","References:DOI:10.15468/ke2ody","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:48:08Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:48:08Z","doi":"10.15468/DL.0RLCCQ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/g1zohr","References:DOI:10.15468/l8vpay","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/mbhmmt","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/hrztgn","References:DOI:10.15468/xnlbke","References:DOI:10.15468/ennulm","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/gja4jo","References:DOI:10.15468/iawody","References:DOI:10.15468/ahunho","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:49:05Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:49:05Z","doi":"10.15468/DL.MXPALY","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/g1wfae","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/xnlbke","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ennulm","References:DOI:10.15468/zrlqok","References:DOI:10.15468/eaqv44","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/k88vjq","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/4entqy","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T06:50:19Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmp6eGNpdzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMDYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xOTk3Njwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTMgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBmcml0c2NoaWkgV2Fpc2IuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxMyByZWNvcmRzIGZyb20gNiBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDUgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:50:19Z","doi":"10.15468/DL.JZXCIW","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dqb9za","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:50:26Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmJidzdlcjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMDgtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+NzYzMzI8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDI4OCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IGdyYWNpbGlzIFdpbW0uIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAyODggcmVjb3JkcyBmcm9tIDE4IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDEgcmVjb3JkcyBmcm9tIE1mTiAtIEZvc3NpbCBwbGFudHMgKENlbm9waHl0aWMpLiAKIDMxIHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogNSByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDMgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChBTFRBKS4gCiAxMTcgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiA1MyByZWNvcmRzIGZyb20gRmxvcmEgb2YgdGhlIFN0b8WCb3dlIE10cy4uIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLiAKIDcgcmVjb3JkcyBmcm9tIE5hdGlvbmFsIFN5c3RlbSBvZiBQcm90ZWN0ZWQgQXJlYXMgaW4gUG9sYW5kIC0gUGxhbnRzLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSBIZXJiYXJpdW0gKFVCQykgLSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uLiAKIDQgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiA1IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDI2IHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXTDpHQgU2FsemJ1cmcuIAogMjQgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T06:50:26Z","doi":"10.15468/DL.BBW7ER","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dqb9za","References:DOI:10.5886/rtt57cc9","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T06:50:36Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:50:36Z","doi":"10.15468/DL.JZV416","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/iawody","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/k88vjq","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/wtlymk","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T06:50:37Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnJvdDV6ajwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMTEtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2w4dnBheTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2ZkenphbDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xMjI5ODM8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDM1NSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IGhvcmRlaXN0aWNob3MgVmlsbC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDM1NSByZWNvcmRzIGZyb20gMzYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBWaWVubmEsIEluc3RpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIFdVLiAKIDI4IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDUxIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogNCByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLiAKIDI2IHJlY29yZHMgZnJvbSBCYW5jbyBkZSBEYXRvcyBkZSBsYSBCaW9kaXZlcnNpZGFkIGRlIGxhIENvbXVuaXRhdCBWYWxlbmNpYW5hLiAKIDE2IHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiA2NSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBBdGxhcyBkZSBsYSBmbG9yZSBkZSBMb3JyYWluZS4gCiAyMCByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDIgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDQxIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAxIHJlY29yZHMgZnJvbSBDSUJJTywgQWxpY2FudGU6QUJILUdCSUYuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTcOhbGFnYTogTUdDLUNvcm1vZi4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgVmFzY3VsYXIgUGxhbnRzIENvbGxlY3Rpb24gb2YgdGhlIFVuaXZlcnNpdHkgb2YgRXh0cmVtYWR1cmEgKFNwYWluKS4gCiAxOCByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogNyByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBwcm90w6lnw6llIGR1IERhdXBoaW7DqS4gCiA3IHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMSByZWNvcmRzIGZyb20gUGVyY2h0b2xkc2RvcmZlciBIZWlkZS4gCiA2IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZS4gCiAzIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTZXZpbGxhLCBTRVYuIAogMSByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiA1IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMSByZWNvcmRzIGZyb20gTWZOIC0gRm9zc2lsIHBsYW50cyAoQ2Vub3BoeXRpYykuIAogNyByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBGZWxkYmVvYmFjaHR1bmdzZGF0ZW4gUGZsYW56ZW4uIAogOCByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiA2IHJlY29yZHMgZnJvbSBDYXTDoWxvZ28gRmxvcsOtc3RpY28gSGlzdMOzcmljbyBkZSBOYXZhcnJhLiBHb2JpZXJubyBkZSBOYXZhcnJhLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAzIHJlY29yZHMgZnJvbSBBdGxhcyBkZXMgcGxhbnRlcyB2YXNjdWxhaXJlcyBkZSBMb3JyYWluZS4gCiAyIHJlY29yZHMgZnJvbSBEcHRvIGRlIEJvdMOhbmljYSwgRWNvbG9nw61hIHkgRmlzaW9sb2fDrWEgVmVnZXRhbCAoSGVyYmFyaW8gQ09GQykuIEZhY3VsdGFkIGRlIENpZW5jaWFzLiBVbml2ZXJzaWRhZCBkZSBDw7NyZG9iYS4gCiAyIHJlY29yZHMgZnJvbSBHb3RoZW5idXJnIEhlcmJhcml1bSAtIEdlbmVyYWwgKEdCSUY6SUg6R0I6SGVyYmFyaXVtKS4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAzIHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMiByZWNvcmRzIGZyb20gQnV0dGVyYmVyZywgRGFyZGVzaGVpbS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBQw7pibGljYSBkZSBOYXZhcnJhLCBQYW1wbG9uYTogVVBOQS1ILiAKIDEgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiA1IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEVzcMOoY2VzIFbDqWfDqXRhbGVzIE1lbmFjw6llcyBkZSBGcmFuY2UgbcOpdHJvcG9saXRhaW5lLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T06:50:37Z","doi":"10.15468/DL.ROT5ZJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/l8vpay","References:DOI:10.15468/c4w4co","References:DOI:10.15468/fdzzal"],"publicationYear":"2015"},{"minted":"2015-04-08T06:50:43Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:50:43Z","doi":"10.15468/DL.M1BOFO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/l8vpay","References:DOI:10.15468/c4w4co"],"publicationYear":"2015"},{"minted":"2015-04-08T06:52:53Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T06:52:53Z","doi":"10.15468/DL.PKQP6M","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ahunho","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/qaevz2","References:DOI:10.15468/iawody","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dipjcr","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/4entqy"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:16Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmFybWJzNDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMTctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xNDg5MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDc3NSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IGxpZ2VyaWNhIEouR2F5IApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyA3NzUgcmVjb3JkcyBmcm9tIDIyIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDE1IHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgaW4gRGVubWFyayByZWNvcmRlZCB1bmRlciB0aGUgVGhlIE5hdGlvbndpZGUgTW9uaXRvcmluZyBhbmQgQXNzZXNzbWVudCBQcm9ncmFtbWUgZm9yIHRoZSBBcXVhdGljIGFuZCBUZXJyZXN0cmlhbCBFbnZpcm9ubWVudHMgKE5PVkFOQSkuIAogMiByZWNvcmRzIGZyb20gUGFsZW9iaW9sb2d5IERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIFJveWFsIEJvdGFuaWMgR2FyZGVuIEVkaW5idXJnaCBIZXJiYXJpdW0gKEUpLiAKIDEwNiByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMTYgcmVjb3JkcyBmcm9tIFRoZSBGdW5nYWwgQ29sbGVjdGlvbiBhdCB0aGUgU2VuY2tlbmJlcmcgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBHw7ZybGl0ei4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IFdhZ2VuaW5nZW4uIAogNSByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDEgcmVjb3JkcyBmcm9tIFN1ZGVuaWVkZXJ1bmcgKEFtdCBOZXVoYXVzKS4gCiA4NiByZWNvcmRzIGZyb20gRHV0Y2ggVmVnZXRhdGlvbiBEYXRhYmFzZSAoTFZEKS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiAyIHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogNCByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMjc1IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDEzNSByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25zIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGR1IEJhc3NpbiBwYXJpc2llbi4uIAogMSByZWNvcmRzIGZyb20gU0JULUxpdmluZy4gCiAxIHJlY29yZHMgZnJvbSBTdWRlbmllZGVydW5nIChBbXQgTmV1aGF1cyksIExhbmRrcmVpcyBMw7xuZWJ1cmcuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDEgcmVjb3JkcyBmcm9tIEJpb3NwaMOkcmVucmVzZXJ2YXQgTWl0dGVsZWxiZS4gCiAxNCByZWNvcmRzIGZyb20gT0hOLiAKIDIgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiA5NyByZWNvcmRzIGZyb20gRmxvcmlzdGljIERhdGFiYXNlcyBvZiBNZWNrbGVuYnVyZy1Qb21lcmFuaWEgLSBIaWdoZXIgUGxhbnRzLiAKIDcgcmVjb3JkcyBmcm9tIE5pam1lZ2VuIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKE5MKSAtIEhlcmJhcml1bS48L2Rlc2NyaXB0aW9uPgogICAgPC9kZXNjcmlwdGlvbnM+CjwvcmVzb3VyY2U+Cg==","updated":"2015-04-08T07:01:16Z","doi":"10.15468/DL.ARMBS4","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/c4w4co","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:27Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:01:27Z","doi":"10.15468/DL.13UEYH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5519/0002965","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:29Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:01:29Z","doi":"10.15468/DL.R8DTTG","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay","References:DOI:10.15468/qaevz2","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/c4w4co","References:DOI:10.15468/xnlbke","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/ly60bx"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:50Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:01:50Z","doi":"10.15468/DL.LCH6QL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/ypoair","References:DOI:10.15468/pj2yrh","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/wtlymk","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho","References:DOI:10.15468/qhqzub","References:DOI:10.15468/kkb2x0","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/g1zohr","References:DOI:10.15468/l8vpay","References:DOI:10.15468/wqsad9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/eaqv44","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/i5cqdk","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:53Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:01:53Z","doi":"10.15468/DL.Z3ASOJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/pal1lb","References:DOI:10.15468/xnlbke","References:DOI:10.15468/uc1apo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dqb9za","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/zrlqok","References:DOI:10.15468/eaqv44","References:DOI:10.15468/qaevz2","References:DOI:10.15468/4entqy"],"publicationYear":"2015"},{"minted":"2015-04-08T07:01:58Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:01:58Z","doi":"10.15468/DL.CBUNWR","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/gja4jo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/iv6y8m","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/hrztgn","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/euw5ge","References:DOI:10.15468/7gudyo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/iawody","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/wqsad9","References:DOI:10.15468/w8gru5","References:DOI:10.15468/s6zhid","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/qaevz2","References:DOI:10.15468/ahunho","References:DOI:10.15468/kllkyl"],"publicationYear":"2015"},{"minted":"2015-04-08T07:06:16Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnNld2Q5bzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMjAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT43OTAyMTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMjQxIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggbWVsYW5vc3RhY2h5YSBNLkJpZWIuIGV4IFdpbGxkLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgMjQxIHJlY29yZHMgZnJvbSAyMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIE1hYXN0cmljaHQgKE5MKSAtIEhlcmJhcml1bS4gCiA0IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGRlIGwnQWluLiAKIDggcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiA4IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNiByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDE0IHJlY29yZHMgZnJvbSBSLiBMLiBNY0dyZWdvciBIZXJiYXJpdW0gVmFzY3VsYXIgUGxhbnRzIENvbGxlY3Rpb24uIAogMTggcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBGZWxkYmVvYmFjaHR1bmdzZGF0ZW4gUGZsYW56ZW4uIAogMyByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMTQzIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAxIHJlY29yZHMgZnJvbSBCYXNlIGRlIGRhdG9zIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgUGHDrXMgVmFzY286IEFSQU4tRUguIAogMTcgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW5pY2FsIE11c2V1bSwgVW5pdmVyc2l0eSBvZiBPdWx1LCBGaW5sYW5kIChPVUxVKS4gCiA1IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIEJvdGFueSBVbml0LCBGaW5uaXNoIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkgKEgpLiAKIDEgcmVjb3JkcyBmcm9tIENhbmFkaWFuIE11c2V1bSBvZiBOYXR1cmUgSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIEx1bmQgQm90YW5pY2FsIE11c2V1bSAoTEQpLiAKIDEgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiAzIHJlY29yZHMgZnJvbSBSb3lhbCBCb3RhbmljIEdhcmRlbiBFZGluYnVyZ2ggSGVyYmFyaXVtIChFKS4gCiAxIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:06:16Z","doi":"10.15468/DL.SEWD9O","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/ypoair"],"publicationYear":"2015"},{"minted":"2015-04-08T07:06:24Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZuNGFzazwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMTktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xMzM3NjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDM2MSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IGxpcGFyb2NhcnBvcyBHYXVkaW4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDM2MSByZWNvcmRzIGZyb20gMzYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAzMiByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDMgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMSByZWNvcmRzIGZyb20gQm90YW55IChVUFMpLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogNiByZWNvcmRzIGZyb20gSW5zdGl0dXQgQm90YW5pYyBkZSBCYXJjZWxvbmEsIEJDLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAzIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiA3IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogNCByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogMTAgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS4gCiA0MCByZWNvcmRzIGZyb20gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGEgdmVnZXRhY2nDs24gSWLDqXJpY2EgeSBNYWNhcm9uw6lzaWNhLiAKIDE4IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiA5NiByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25zIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGR1IEJhc3NpbiBwYXJpc2llbi4uIAogMyByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBWaWVubmEsIEluc3RpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIFdVLiAKIDIgcmVjb3JkcyBmcm9tIEJpb2RpdmVyc2l0w6R0c2RhdGVuYmFuayBkZXMgTGFuZGVzIFNhbHpidXJnLiAKIDMgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiA2IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08tQnJpb2YuIAogMSByZWNvcmRzIGZyb20gQ2F0w6Fsb2dvIEZsb3LDrXN0aWNvIEhpc3TDs3JpY28gZGUgTmF2YXJyYS4gR29iaWVybm8gZGUgTmF2YXJyYS4gCiAyIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAxIHJlY29yZHMgZnJvbSBpbmF0dXJhIC0gRXJsZWJuaXMgTmF0dXJzY2hhdSBEb3JuYmlybi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBQw7pibGljYSBkZSBOYXZhcnJhLCBQYW1wbG9uYTogVVBOQS1ILiAKIDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50cyBjb2xsZWN0aW9uIChQKSBvZiB0aGUgTXVzw6l1bSBuYXRpb25hbCBkJ0hpc3RvaXJlIE5hdHVyZWxsZSAoTU5ITiAtIFBhcmlzKS4gCiAxMiByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDggcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZGUgbCdBaW4uIAogNiByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIEhTUyBGaW5jYSBMYSBPcmRlbi1WYWxkZXNlcXVlcmEgKENJQ1lURVgpLiBHb2JpZXJubyBkZSBFeHRyZW1hZHVyYS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiA2IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAzIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiA1IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBCYXJjZWxvbmEuIEdydXAgZEludmVzdGlnYWNpw7MgR2VvYm90w6FuaWNhIGkgQ2FydG9ncmFmaWEgZGUgbGEgVmVnZXRhY2nDsy4gCiA1OSByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDkgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:06:24Z","doi":"10.15468/DL.VN4ASK","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5519/0002965","References:DOI:10.15468/pal1lb","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co"],"publicationYear":"2015"},{"minted":"2015-04-08T07:06:34Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:06:34Z","doi":"10.15468/DL.VUTXN4","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/2g6i0v","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/iawody","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/zrlqok","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/euw5ge","References:DOI:10.15468/7gudyo","References:DOI:10.15468/4entqy"],"publicationYear":"2015"},{"minted":"2015-04-08T07:06:39Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:06:39Z","doi":"10.15468/DL.SEXQD0","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T07:06:52Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:06:52Z","doi":"10.15468/DL.2W8MKL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/hrztgn","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/wqsad9","References:DOI:10.15468/qaevz2","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iawody","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/euw5ge","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/k88vjq","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T07:10:58Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:10:59Z","doi":"10.15468/DL.VLJPGL","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/euw5ge","References:DOI:10.15468/l8vpay","References:DOI:10.15468/pal1lb","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/hrztgn","References:DOI:10.15468/7gudyo","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/fdzzal","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/hpasyo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dipjcr"],"publicationYear":"2015"},{"minted":"2015-04-08T07:16:22Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLm5vZnpoZTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMjUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1OTQvcGFuZ2FlYS44MTgzMjI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTA4MjQ8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDggc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IERhdGFzZXRLZXk6IChUYWJsZSAxKSBQcm9wb3J0aW9uIG9mIFRveG9wbGFzbWEgZ29uZGlpIHNlcm9wb3NpdGl2ZSBhcmN0aWMgZm94ZXMgKEFsb3BleCBsYWdvcHVzKSBieSBhZ2UgZ3JvdXAgYW5kIGdlb2dyYXBoaWMgYXJlYS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgOCByZWNvcmRzIGZyb20gMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA4IHJlY29yZHMgZnJvbSAoVGFibGUgMSkgUHJvcG9ydGlvbiBvZiBUb3hvcGxhc21hIGdvbmRpaSBzZXJvcG9zaXRpdmUgYXJjdGljIGZveGVzIChBbG9wZXggbGFnb3B1cykgYnkgYWdlIGdyb3VwIGFuZCBnZW9ncmFwaGljIGFyZWEuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:16:22Z","doi":"10.15468/DL.NOFZHE","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.1594/pangaea.818322"],"publicationYear":"2015"},{"minted":"2015-04-08T07:30:34Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLm85OGs0cDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMjYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2FkcHAweDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT41MzgxMTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMTc1IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggbXVjcm9uYXRhIEFsbC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDE3NSByZWNvcmRzIGZyb20gMjAgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogNTUgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMSByZWNvcmRzIGZyb20gTlNHIEthcndlbmRlbC4gCiA4IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBNYWFzdHJpY2h0IChOTCkgLSBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIHNwZWNpbWVucyBvZiB0aGUgTXVzw6l1bSBkJ0hpc3RvaXJlIE5hdHVyZWxsZSBkJ0F1dHVuIChBVVQpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIFNjaGxlcm4gLSAoQm96ZW4pLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxOSByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMSByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gTGluZGF1IGltIEJvZGVuc2VlLiAKIDI5IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2l0w6R0IFNhbHpidXJnLiAKIDQ1IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAxIHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogMSByZWNvcmRzIGZyb20gR0VPIEhhdXB0dmVyYW5zdGFsdHVuZyBUaXJvbCAoSW5uc2JydWNrKS4gCiAxIHJlY29yZHMgZnJvbSBBcnRlbnZpZWxmYWx0IGFtIFNjaGxlcm4uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:30:34Z","doi":"10.15468/DL.O98K4P","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/adpp0x","References:DOI:10.15468/pal1lb"],"publicationYear":"2015"},{"minted":"2015-04-08T07:30:51Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLm92NzgzZjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMzAtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tsbGt5bDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvMmZ2YTVwNHI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9yaHpyeHc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41ODg2L3J0dDU3Y2M5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvaWF3b2R5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZXV3NWdlPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDwvcmVsYXRlZElkZW50aWZpZXJzPgogICAgPHNpemVzPgogICAgICAgIDxzaXplPjI3NzU3Nzwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgOTcxIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggb2J0dXNhdGEgTGlsai4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDk3MSByZWNvcmRzIGZyb20gMjggY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogNyByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBVU1UtVVRDIFNwZWNpbWVuIERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIFNCVC1MaXZpbmcuIAogNDQzIHJlY29yZHMgZnJvbSBBcnRkYXRhLiAKIDIwIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIE1hbml0b2JhIEhlcmJhcml1bSAoV0lOKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMSByZWNvcmRzIGZyb20gVUEgSGVyYmFyaXVtLiAKIDE0MyByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogNTggcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogNjUgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDIgcmVjb3JkcyBmcm9tIE1hcmllLVZpY3RvcmluIEhlcmJhcml1bSAoTVQpLiAKIDExIHJlY29yZHMgZnJvbSBDb2xvcmFkbyBTdGF0ZSBVbml2ZXJzaXR5IEhlcmJhcml1bS4gCiAxIHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiA0MyByZWNvcmRzIGZyb20gT0hOLiAKIDMwIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiAzIHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMyByZWNvcmRzIGZyb20gUi4gTC4gTWNHcmVnb3IgSGVyYmFyaXVtIFZhc2N1bGFyIFBsYW50cyBDb2xsZWN0aW9uLiAKIDEgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogOTIgcmVjb3JkcyBmcm9tIFVBTSBIZXJiYXJpdW0gKEFMQSksIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gKEFyY3RvcykuIAogMiByZWNvcmRzIGZyb20gVFJURSBIZXJiYXJpdW0gKFRSVEUpLiAKIDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gLSBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24gSGVyYmFyaXVtIChXVFUpLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDIzIHJlY29yZHMgZnJvbSBDYW5hZGlhbiBNdXNldW0gb2YgTmF0dXJlIEhlcmJhcml1bS4gCiAxIHJlY29yZHMgZnJvbSBDT05OLiAKIDIgcmVjb3JkcyBmcm9tIE5ldyBaZWFsYW5kIE5hdGlvbmFsIFZlZ2V0YXRpb24gU3VydmV5IERhdGFiYW5rLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiAxMSByZWNvcmRzIGZyb20gS2F0aHJ5biBLYWxtYmFjaCBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gVXRhaCBWYWxsZXkgU3RhdGUgQ29sbGVnZSBIZXJiYXJpdW0uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:30:51Z","doi":"10.15468/DL.OV783F","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T07:31:02Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:31:02Z","doi":"10.15468/DL.2NMHTH","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/gja4jo","References:DOI:10.15468/pal1lb","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/euw5ge","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T07:31:06Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:31:06Z","doi":"10.15468/DL.CKFDRR","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/w8gru5","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/zrlqok"],"publicationYear":"2015"},{"minted":"2015-04-08T07:31:52Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnZnbmdhYzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMjctMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9tYmhtbXQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93encwazI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC95cG9haXI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rZTJvZHk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ocnp0Z248L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93dGx5bWs8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC90dm5qazc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9sOHZwYXk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4zODk3L3BoeXRva2V5cy4xMi4yODQ5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvd3FzYWQ5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvanhiaHF4PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0Njgvcmh6cnh3PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvdWMxYXBvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvZ2phNGpvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvMmc2aTB2PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvYzR3NGNvPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvenJscW9rPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvcGFsMWxiPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuNTUxOS8wMDAyOTY1PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvcGoyeXJoPC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuNTg4Ni8yZnZhNXA0cjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3c4Z3J1NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2trYjJ4MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tsbGt5bDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzBlYTdxaTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yNTY1Nzc1PC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAxNjUwMSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IG11cmljYXRhIEwuIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxNjUwMSByZWNvcmRzIGZyb20gMTk5IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDMgcmVjb3JkcyBmcm9tIEludmVudGFyaW8gRXNwYcOxb2wgZGUgRXNwZWNpZXMgVGVycmVzdHJlcyAoTUFHUkFNQSkuIAogMSByZWNvcmRzIGZyb20gUGVyY2h0b2xkc2RvcmZlciBIZWlkZS4gCiAxIHJlY29yZHMgZnJvbSBTdWRlbmllZGVydW5nIChBbXQgTmV1aGF1cykuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gTXVzZW8gZGUgTGEgU2FsbGUgQm9nb3TDoSAoTUxTKS4gCiAxIHJlY29yZHMgZnJvbSBTY2h1c3NlbmF1ZSAoV2VpbmdhcnRlbikuIAogNTcgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW5pY2FsIE11c2V1bSwgVW5pdmVyc2l0eSBvZiBPdWx1LCBGaW5sYW5kIChPVUxVKS4gCiA1MTYgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW55IFVuaXQsIEZpbm5pc2ggTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoSCkuIAogMSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBDaGFuZ2luZyBGbG9yYSBvZiBHbGFzZ293IDE5ODItMjAwMC4gCiAxNiByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIEhlcmJhcml1bSAoVUJDKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMiByZWNvcmRzIGZyb20gTmF0dXIgZXJsZWJlbiBydW5kIHVtIGRlbiBTZW1pbmFyYmF1ZXJuaG9mIEd1dCBIb2hlbmJlcmcuIAogMSByZWNvcmRzIGZyb20gT2JzdHdpZXNlIE9zdGVyYmVyZy4gCiAyNiByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAzIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBBbG1lcmlhLiAKIDEgcmVjb3JkcyBmcm9tIEdpZXNlbGJhY2h0YWwgRnVsZGEtSGFybWVyei4gCiA5IHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogNSByZWNvcmRzIGZyb20gQXJhbnphZGkgWmllbnR6aSBFbGthcnRlYS4gCiAyIHJlY29yZHMgZnJvbSBCdWxhdS4gCiAxNiByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIEp5dsOkc2t5bMOkIFVuaXZlcnNpdHkgTXVzZXVtLiAKIDEgcmVjb3JkcyBmcm9tIFRhZyBkZXIgQXJ0ZW52aWVsZmFsdCBpbSBUYXViZW50YWwuIAogMSByZWNvcmRzIGZyb20gQW4gZGVyIE9obSwgKFdldHRzYWFzZW4pLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2Rpdi1DYW1wIFNhbmRtYWdlcnJhc2VuIGluIE7DvHJuYmVyZy9MYW5nd2Fzc2VyLiAKIDEgcmVjb3JkcyBmcm9tIEJpb2xvZ2lzY2hlIFN0YXRpb24gaW0gS3JlaXMgV2VzZWwuIAogMiByZWNvcmRzIGZyb20gV2FsZHLDpG5kZXIgZGVyIEZyYW5rZW5ow7ZoZSAoUm90aGVuYnVyZyBvYiBkZXIgVGF1YmVyKS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0enN0YXRpb24gU2NobWlkc2ZlbGRlbi4gCiAyNCByZWNvcmRzIGZyb20gVGhhbWVzIFZhbGxleSBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gTG9jYWwgV2lsZGxpZmUgU2l0ZSBTdXJ2ZXlzIEJlcmtzaGlyZS4gCiAzNSByZWNvcmRzIGZyb20gQlNCSSB0ZXRyYWQgZGF0YSBmb3IgSXJlbGFuZC4gCiAxIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMtSGlzdMOzcmljby4gCiA0IHJlY29yZHMgZnJvbSBSLiBMLiBNY0dyZWdvciBIZXJiYXJpdW0gVmFzY3VsYXIgUGxhbnRzIENvbGxlY3Rpb24uIAogNDMgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogMTk2IHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogMjQgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgRmVsZGJlb2JhY2h0dW5nc2RhdGVuIFBmbGFuemVuLiAKIDEgcmVjb3JkcyBmcm9tIEZyZWlidXJnZXIgVGFnIGRlciBBcnRlbnZpZWxmYWx0LiAKIDM2IHJlY29yZHMgZnJvbSBIZXJ0Zm9yZHNoaXJlIE5hdHVyYWwgSGlzdG9yeSBTb2NpZXR5IEZsb3JhIEdyb3VwIC0gSGVydGZvcmRzaGlyZSBGbG9yYSBTdXJ2ZXkgUmVjb3JkcyAxOTg3LTIwMDUuIAogMTUgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiA1IHJlY29yZHMgZnJvbSBDYW5hZGlhbiBNdXNldW0gb2YgTmF0dXJlIEhlcmJhcml1bS4gCiA2IHJlY29yZHMgZnJvbSBWYXNjdWxhciBIZXJiYXJpdW0sIE5NQlUuIAogMyByZWNvcmRzIGZyb20gQ09OTi4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIChOTFAgSGFyeiAvIEhvY2hoYXJ6KS4gCiA0NDQ5IHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDEgcmVjb3JkcyBmcm9tIFNXRUNPLiAKIDIyOCByZWNvcmRzIGZyb20gVmVnZXRhdGlvbiBkYXRhIGZyb20gcHJvdGVjdGVkIGFyZWFzIGluIERlbm1hcmsgKMKnIDMgaW4gdGhlIERhbmlzaCBOYXR1cmUgUHJvdGVjdGlvbiBBY3QpLiAKIDQgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE5hdmFycmEsIEhlcmJhcml1bTogUEFNUC1WYXNjdWxhciBQbGFudHMuIAogMjYgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMiByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIEhlcmJhcml1bSAoRSkuIAogMTIgcmVjb3JkcyBmcm9tIEZsb3JhIGQnQW5kb3JyYS4gCiAyOSByZWNvcmRzIGZyb20gRkxPUklWT04uIAogMyByZWNvcmRzIGZyb20gQm90YW55IERpdmlzaW9uLCBZYWxlIFBlYWJvZHkgTXVzZXVtLiAKIDEzNjcgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlIGFkZGl0aW9ucyBzaW5jZSAyMDAwLiAKIDIxOCByZWNvcmRzIGZyb20gU2hyb3BzaGlyZSBFY29sb2dpY2FsIERhdGEgTmV0d29yayAtIFNocm9wc2hpcmUgRWNvbG9naWNhbCBEYXRhIE5ldHdvcmsgRGF0YWJhc2UuIAogOSByZWNvcmRzIGZyb20gQ0lCSU8sIEFsaWNhbnRlOkFCSC1HQklGLiAKIDIzMyByZWNvcmRzIGZyb20gSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzLiAKIDYyMyByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGluIERlbm1hcmsgcmVjb3JkZWQgdW5kZXIgdGhlIFRoZSBOYXRpb253aWRlIE1vbml0b3JpbmcgYW5kIEFzc2Vzc21lbnQgUHJvZ3JhbW1lIGZvciB0aGUgQXF1YXRpYyBhbmQgVGVycmVzdHJpYWwgRW52aXJvbm1lbnRzIChOT1ZBTkEpLiAKIDEyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uIC0gVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uIEhlcmJhcml1bSAoV1RVKS4gCiA1MiByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkdSBMaW1vdXNpbi4gCiAzIHJlY29yZHMgZnJvbSBNaW5pc3RlcmlvIGRlIE1lZGlvIEFtYmllbnRlLCB5IE1lZGlvIFJ1cmFsIHkgTWFyaW5vLiBEaXJlY2Npw7NuIEdlbmVyYWwgZGUgTWVkaW8gTmF0dXJhbCB5IFBvbMOtdGljYSBGb3Jlc3RhbC4gSW52ZW50YXJpbyBOYWNpb25hbCBkZSBCaW9kaXZlcnNpZGFkIDIwMDcsIEZsb3JhIFZhc2N1bGFyIEFtZW5hemFkYS4gCiA1NzYgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgT3NsbyAoTykuIAogMSByZWNvcmRzIGZyb20gUMO2aGxiZXJnIGJlaSBBbm5hYmVyZy4gCiAxIHJlY29yZHMgZnJvbSBHRU8gQmlvZGl2ZXJzaXR5IERheS4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE9ic2VydmF0aW9ucywgT3NsbyAoTykuIAogMSByZWNvcmRzIGZyb20gTmF0aW9uYWwgVHJ1c3QgLSBTdXR0b24gSG9vIHNwZWNpZXMgZGF0YSBoZWxkIGJ5IFRoZSBOYXRpb25hbCBUcnVzdC4uIAogNiByZWNvcmRzIGZyb20gRS4gQy4gU21pdGggSGVyYmFyaXVtIChBQ0FEKS4gCiAxNSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAxIHJlY29yZHMgZnJvbSBCaW9zcGjDpHJlbnBhcmsgV2llbmVyd2FsZCAtIFBmYWZmc3TDpHR0ZW4uIAogMyByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBBbGJlcnRhIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoQUxUQSkuIAogMSByZWNvcmRzIGZyb20gR3JpbGxow7x0dGUgV2V0dHNhYXNlbiwgV2llc2UsIEhlY2tlbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gUmhvZW5tdXNldW0gRmxhZHVuZ2VuLiAKIDEgcmVjb3JkcyBmcm9tIENhcnRvZ3JhZsOtYSBkZSB2ZWdldGFjacOzbiBhIGVzY2FsYSBkZSBkZXRhbGxlIDE6MTAuMDAwIGRlIGxhIG1hc2EgZm9yZXN0YWwgZGUgQW5kYWx1Y8OtYS4gCiA0IHJlY29yZHMgZnJvbSBFRElUIC0gQVRCSSBpbiBHZW1lciBhcmVhIChTbG92YWtpYSkuIAogMSByZWNvcmRzIGZyb20gVm9yZGVyZXIgVGllcmdhcnRlbiAoRGVzc2F1KS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiaWVyIEEuIExlIEdyYW5kIChCT1VNKS4gCiAxOCByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMjAgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIChJMDkzKSA6IEZsb3JlIGR1IE1hc3NpZiBBcm1vcmljYWluLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBWYXNjdWxhciBQbGFudHMgQ29sbGVjdGlvbiBvZiB0aGUgVW5pdmVyc2l0eSBvZiBFeHRyZW1hZHVyYSAoU3BhaW4pLiAKIDEzMiByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25zIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGR1IEJhc3NpbiBwYXJpc2llbi4uIAogMSByZWNvcmRzIGZyb20gQmF5ZXJpc2NoZSBEb25hdSAtIEJsaW5kaGVpbSBEb25hdWJyw7xja2UuIAogMjkgcmVjb3JkcyBmcm9tIEZsb3JhYmFuazEgLSBBIGdyaWQtYmFzZWQgZGF0YWJhc2Ugb24gdmFzY3VsYXIgcGxhbnQgIGRpc3RyaWJ1dGlvbiBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiBCZWxnaXVtIChGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgcmVnaW9uKS4gCiA1IHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogMTYgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMSByZWNvcmRzIGZyb20gQlVORCAtIERhc3Nvd2VyIFNlZSAoTMO8YmVjay9EYXNzb3cpLiAKIDEgcmVjb3JkcyBmcm9tIFRoYW1lcyBWYWxsZXkgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIE5hdHVyZSBDb25zZXJ2YW5jeSBDb3VuY2lsIEJlcmtzaGlyZSBNZWFkb3dzIFN1cnZleSAxOTg0LTg3IChhcyBoZWxkIGJ5IFRoYW1lcyBWYWxsZXkgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSkuIAogNDEgcmVjb3JkcyBmcm9tIEJpb2xvZ2llemVudHJ1bSBMaW56LiAKIDIyODUgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gTWFhc3RyaWNodCAoTkwpIC0gSGVyYmFyaXVtLiAKIDExIHJlY29yZHMgZnJvbSBKb3JkYWwuIAogMTcgcmVjb3JkcyBmcm9tIFRoYW1lcyBWYWxsZXkgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIExvY2FsIFdpbGRsaWZlIFNpdGUgU3VydmV5cyBPeGZvcmRzaGlyZS4gCiAzIHJlY29yZHMgZnJvbSBTdGFmZm9yZHNoaXJlIEVjb2xvZ2ljYWwgUmVjb3JkIC0gU0VSIFNpdGUtYmFzZWQgU3VydmV5cy4gCiAyMTYgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgRnJhbmNvLUJlbGdlLiAKIDEgcmVjb3JkcyBmcm9tIFN1ZGVuaWVkZXJ1bmcgKEFtdCBOZXVoYXVzKSwgTGFuZGtyZWlzIEzDvG5lYnVyZy4gCiAxIHJlY29yZHMgZnJvbSBDb3VudHJ5c2lkZSBDb3VuY2lsIGZvciBXYWxlcyAtIFJhcmUgRmxvd2VyaW5nIFBsYW50IGFuZCBGZXJuIERhdGEuIAogMSByZWNvcmRzIGZyb20gSW5uZW5zdGFkdCBHw7Z0dGluZ2VuIC0gTmF0dXIgWnVoYXVzZS4gCiAxIHJlY29yZHMgZnJvbSBMdXN0YWR0ZXIgV2FsZCAuLiAKIDQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBXaWxsaW5nLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogMyByZWNvcmRzIGZyb20gVW5pdmVyc2l0eSBvZiBWaWVubmEsIEluc3RpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIFdVLiAKIDEgcmVjb3JkcyBmcm9tIFNjaGxlcm4gLSAoQm96ZW4pLiAKIDQ0IHJlY29yZHMgZnJvbSBEdXRjaCBWZWdldGF0aW9uIERhdGFiYXNlIChMVkQpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6Z2ViaWV0IEJhdXNlbmJlcmcuIAogMSByZWNvcmRzIGZyb20gV2lsdHNoaXJlIGFuZCBTd2luZG9uIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBXaWx0c2hpcmUgJmFtcDsgU3dpbmRvbiBTaXRlLWJhc2VkIFN1cnZleSBSZWNvcmRzLiAKIDEzNCByZWNvcmRzIGZyb20gQmlvRm9rdXMuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIEFzb2NpYWNpw7NuIEJJR0EgcGFyYSBlbCBlc3R1ZGlvIGRlbCBwYXRyaW1vbmlvIG5hdHVyYWwgZGUgR2FsaWNpYTogRkJJR0EuIAogMyByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogNiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgQmFyY2Vsb25hLiBHcnVwIGRJbnZlc3RpZ2FjacOzIEdlb2JvdMOhbmljYSBpIENhcnRvZ3JhZmlhIGRlIGxhIFZlZ2V0YWNpw7MuIAogNDYwIHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogMSByZWNvcmRzIGZyb20gVHJpZWJlc2JhY2ggKFpldWxlbnJvZGEtVHJpZWJlcykuIAogODggcmVjb3JkcyBmcm9tIFRoZSBGbG9yYSBvZiBDb3VudHkgV2V4Zm9yZC4gCiA4OCByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogNyByZWNvcmRzIGZyb20gU291dGggRWFzdCBXYWxlcyBCaW9kaXZlcnNpdHkgUmVjb3JkcyBDZW50cmUgLSBDQ1cgUmVnaW9uYWwgRGF0YSA6IFNvdXRoIEVhc3QgV2FsZXMgTm9uLXNlbnNpdGl2ZSBTcGVjaWVzIFJlY29yZHMuIAogMyByZWNvcmRzIGZyb20gR0VPLUhhdXB0dmVyYW5zdGFsdHVuZyBpbSBOYXRpb25hbHBhcmsgQmF5ZXJpc2NoZXIgV2FsZC4gCiA2IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBBZ2RlciBuYXR1cm11c2V1bSAoS01OKS4gCiA2IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMSByZWNvcmRzIGZyb20gR2VtZWluZGUgU3Vyc2VlLiAKIDEgcmVjb3JkcyBmcm9tIFBmbGFuemVuIHVuZCBUaWVyZSBpbSBCdXJnd2FsZC4gCiAxIHJlY29yZHMgZnJvbSBBbGwgb2JzZXJ2YXRpb25zIGV4dHJhY3RlZCBmcm9tIHRoZSBGbG9yYSBvZiBOb3J0aHVtYmVybGFuZCBhbmQgRHVyaGFtIDE4MzEuIAogMzMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50IGhlcmJhcml1bSwgQWdkZXIgbmF0dXJtdXNldW0gb2cgYm90YW5pc2tlIGhhZ2UuIAogMTM0IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAyMjkgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVHJvbmRoZWltIChUUkgpLiAKIDQzNSByZWNvcmRzIGZyb20gRmxvcmlzdGljIERhdGFiYXNlcyBvZiBNZWNrbGVuYnVyZy1Qb21lcmFuaWEgLSBIaWdoZXIgUGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVuRmluZGVyLiAKIDMgcmVjb3JkcyBmcm9tIEJvdGFueSByZWdpc3RyYXRpb24gZGF0YWJhc2UgYnkgRGFuaXNoIGJvdGFuaXN0cy4gCiA0MiByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSwgVW5pdmVyc2l0eSBvZiBUdXJrdSwgRmlubGFuZCAoVFVSKS4gCiAxIHJlY29yZHMgZnJvbSBHZXdhbm4gS3JhbXBmIChIZWlsYnJvbm4pLiAKIDEgcmVjb3JkcyBmcm9tIELDnEcuIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBMZWlkZW4uIAogMiByZWNvcmRzIGZyb20gUm90aGVyaGFtIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAKIDQgcmVjb3JkcyBmcm9tIERvcnNldCBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gRG9yc2V0IFNTU0kgU3BlY2llcyBSZWNvcmRzIDE5NTIgLSAyMDA0IChOYXR1cmFsIEVuZ2xhbmQpLiAKIDEgcmVjb3JkcyBmcm9tICJUcmUgUGluaSIgKE1vbnRlYmVsbHVuYSwgSXRhbGllbikuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTcOhbGFnYTogTUdDLUNvcm1vZi4gCiA1MSByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogMSByZWNvcmRzIGZyb20gUHJvamVrdCBEZWxsYnLDvGNrZXIgSGVpZGUuIAogNCByZWNvcmRzIGZyb20gTm9ydGggJmFtcDsgRWFzdCBZb3Jrc2hpcmUgRWNvbG9naWNhbCBEYXRhIENlbnRyZSAtIE5vcnRoIGFuZCBFYXN0IFlvcmtzaGlyZSBFY29sb2dpY2FsIERhdGEgQ2VudHJlIC0gTm9uLXNlbnNpdGl2ZSBSZWNvcmRzIGZyb20gYWxsIHRheG9ub21pYyBncm91cHMuIC4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0emdlYmlldCBMw7xuZWJ1cmdlciBIZWlkZS4gCiAxIHJlY29yZHMgZnJvbSBBcnRlbnZpZWxmYWx0IGFtIFNjaGxlcm4uIAogMTIgcmVjb3JkcyBmcm9tIEJyaXN0b2wgUmVnaW9uYWwgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIEJSRVJDIE9jdG9iZXIgMjAwOS4gCiA0MSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTG9uZG9uKSBDb2xsZWN0aW9uIFNwZWNpbWVucy4gCiAxODAgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVWlCLiAKIDEgcmVjb3JkcyBmcm9tIFJpZWQgdW5kIFNhbmQgLSBBcnRlbnZpZWxmYWx0IGR1cmNoIEJld2VpZHVuZy4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIChEdWlzYnVyZykuIAogNDAgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS4gCiAxIHJlY29yZHMgZnJvbSBTdGFmZm9yZHNoaXJlIEVjb2xvZ2ljYWwgUmVjb3JkIC0gU0VSIFNwZWNpZXMtYmFzZWQgU3VydmV5cy4gCiA4IHJlY29yZHMgZnJvbSBEciBGcmFuY2lzIFJvc2UgRmllbGQgTm90ZWJvb2sgUHJvamVjdCAtIEZpZWxkIE5vdGVib29rIFJlY29yZHMgb2YgRHIgRnJhbmNpcyBSb3NlIDE5NTAncyB0byAxOTkwJ3MuIAogMSByZWNvcmRzIGZyb20gR0VPIEhhdXB0dmVyYW5zdGFsdHVuZyBUaXJvbCAoSW5uc2JydWNrKS4gCiA0IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE11c2V1bSBvZiBBcmNoYWVvbG9neSwgVW5pdmVyc2l0eSBvZiBTdGF2YW5nZXIuIAogMSByZWNvcmRzIGZyb20gS8O2bmlnc3RldHRlbi4gCiAxIHJlY29yZHMgZnJvbSBGw7ZocmVucmllZCAoRnJvbnJldXRlIHVuZCBCYWluZHQpLiAKIDEgcmVjb3JkcyBmcm9tIFVuc2VyIGtsZWluZXMgUmFzZW5zdMO8Y2svIETDvHJlci1HeW1uYXNpdW0gTsO8cm5iZXJnLiAKIDEgcmVjb3JkcyBmcm9tIFdhbGxkb3JmLVdpZXNsb2NoOiAgIk5hdHVyIMO8YmVyIGRlbiBHbGVpc2VuIi4gCiA4IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiA1NiByZWNvcmRzIGZyb20gQmFuY28gZGUgRGF0b3MgZGUgbGEgQmlvZGl2ZXJzaWRhZCBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYS4gCiAxIHJlY29yZHMgZnJvbSAyMCBKYWhyZSBOYXR1cnNjaHV0emdlYmlldCBEcmVpZW5iZXJnLiAKIDUgcmVjb3JkcyBmcm9tIEpvaW50IE5hdHVyZSBDb25zZXJ2YXRpb24gQ29tbWl0dGVlIC0gVmVnZXRhdGlvbiBzdXJ2ZXlzIG9mIGNvYXN0YWwgc2hpbmdsZSBpbiBHcmVhdCBCcml0YWluLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiAzMCByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgTWFuaXRvYmEgSGVyYmFyaXVtIChXSU4pIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiAyIHJlY29yZHMgZnJvbSBIZXJ0Zm9yZHNoaXJlIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBIZXJ0Zm9yZHNoaXJlIExvd2xhbmQgTWVhZG93IEludmVudG9yeSBTdXJ2ZXkgMjAxMC4gCiAxIHJlY29yZHMgZnJvbSBNYXVlcm5hY2tlciAoV2V0dHNhYXNlbikuIAogMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLiAKIDUxOCByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBGaWVsZCBub3RlcywgT3NsbyAoTykuIAogNCByZWNvcmRzIGZyb20gSGVyYmFyaW8gSFNTIEZpbmNhIExhIE9yZGVuLVZhbGRlc2VxdWVyYSAoQ0lDWVRFWCkuIEdvYmllcm5vIGRlIEV4dHJlbWFkdXJhLiAKIDEgcmVjb3JkcyBmcm9tIFRoZSBGdW5nYWwgQ29sbGVjdGlvbiBhdCB0aGUgU2VuY2tlbmJlcmcgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBHw7ZybGl0ei4gCiA0MCByZWNvcmRzIGZyb20gTmlqbWVnZW4gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTkwpIC0gSGVyYmFyaXVtLiAKIDEgcmVjb3JkcyBmcm9tIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgKEluc2VsIFZpbG0pLiAKIDEgcmVjb3JkcyBmcm9tIEdlbMOkbmRlIGRlcyBJVkwgKFplY2tlcm4pLiAKIDE2IHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiAxIHJlY29yZHMgZnJvbSBCaW9zcGjDpHJlbnBhcmsgV2llbmVyd2FsZCAtIFdpZW5lciBTdGVpbmhvZmdyw7xuZGUuIAogMSByZWNvcmRzIGZyb20gU2hlZmZpZWxkIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBTaGVmZmllbGQgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZS0gTm9uLXNlbnNpdGl2ZSBSZWNvcmRzIGZyb20gYWxsIHRheG9ub21pYyBncm91cHMuIC4gCiA2IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNjEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIFRyb25kaGVpbSAoVFJIKS4gCiAzIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLiAKIDEyIHJlY29yZHMgZnJvbSBTY290dGlzaCBXaWxkbGlmZSBUcnVzdCAtIENvbW1pc3Npb25lZCBzdXJ2ZXlzIGFuZCBzdGFmZiBzdXJ2ZXlzIGFuZCByZXBvcnRzIGZvciBTV1QgcmVzZXJ2ZXMuIC4gCiA4OCByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMiByZWNvcmRzIGZyb20gR2VvZ3JhcGhpY2FsbHkgdGFnZ2VkIElOU0RDIHNlcXVlbmNlcy4gCiAxNTcgcmVjb3JkcyBmcm9tIE9ITi4gCiAyMzMgcmVjb3JkcyBmcm9tIE5vcndlZ2lhbiBTcGVjaWVzIE9ic2VydmF0aW9uIFNlcnZpY2UuIAogNjAgcmVjb3JkcyBmcm9tIEVjb1JlY29yZCAtIFZhc2N1bGFyIHBsYW50IHJlY29yZHMgaGVsZCBieSBFY29SZWNvcmQgZm9yIHRoZSBCaXJtaW5naGFtIGFuZCB0aGUgQmxhY2sgQ291bnRyeSBhcmVhIGNvbGxhdGVkIHByaW9yIHRvIE1hcmNoIDIwMTMuIAogMSByZWNvcmRzIGZyb20gUmVnZW5yw7xja2hhbHRlYmVja2VuIChaZXVsZW5yb2RhKS4gCiAxIHJlY29yZHMgZnJvbSBKYXJkw61uIEJvdMOhbmljbyBkZSBDw7NyZG9iYTogSGVyYmFyaXVtIENPQS4gCiAxIHJlY29yZHMgZnJvbSBTY2hsYXR0c3RhbGxlciBUYWwgKExlbm5pbmdlbikuIAogMSByZWNvcmRzIGZyb20gVVNVLVVUQyBTcGVjaW1lbiBEYXRhYmFzZS4gCiA1NzggcmVjb3JkcyBmcm9tIEFydGRhdGEuIAogMTAgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogMTAgcmVjb3JkcyBmcm9tIEthcmwgRnJhbnplbnMgVW5pdmVyc2l0eSBvZiBHcmF6LCBJbnNpdHV0ZSBmb3IgQm90YW55IC0gSGVyYmFyaXVtIEdaVS4gCiA0IHJlY29yZHMgZnJvbSBib3RhbmljYWxjb2xsZWN0aW9uLiAKIDI3MCByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEgcmVjb3JkcyBmcm9tIEZsb3JhIG9mIFPFgm93acWEc2tpIE5hdGlvbmFsIFBhcmssIFBvbGFuZC4gCiAxIHJlY29yZHMgZnJvbSBXZWluYmVyZyBSZWljaGVyc2RvcmYuIAogNyByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDMwMCByZWNvcmRzIGZyb20gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gU3VmZm9sayBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIChTQlJDKSBkYXRhc2V0LiAKIDI2IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGQnSWxsZS1ldC1WaWxhaW5lLiAKIDI5IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiA4IHJlY29yZHMgZnJvbSBOZXcgWmVhbGFuZCBOYXRpb25hbCBQbGFudCBIZXJiYXJpdW0gKENIUikuIAogNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDQgcmVjb3JkcyBmcm9tIE5NTkggb2NjdXJyZW5jZSBEd0MtQS4gCiA2MSByZWNvcmRzIGZyb20gVGhlIEZsb3JhIG9mIENvdW50eSBXYXRlcmZvcmQuIAogMiByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBIZXJiYXJpdW0gT2VzYXUuIAogNyByZWNvcmRzIGZyb20gUm95YWwgSG9ydGljdWx0dXJhbCBTb2NpZXR5IC0gUkhTIG1vbml0b3Jpbmcgb2YgbmF0aXZlIGFuZCBuYXR1cmFsaXNlZCBwbGFudHMgYW5kIGFuaW1hbHMgYXQgaXRzIGdhcmRlbnMgYW5kIHN1cnJvdW5kaW5nIGFyZWFzLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAow4VibyBBa2FkZW1pKSwgQ2VudHJlIGZvciBCaW9kaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgVHVya3UgKFRVUkEpLiAKIDQgcmVjb3JkcyBmcm9tIFdldGxhbmQgSW52ZW50b3J5IChOVikuIAogMSByZWNvcmRzIGZyb20gTmF0dXJwYXJhZGllcyBpbiBHcsOkZmVuaGF1c2VuIGFtIFRyaWZlbHMgKGJlaSBBbm53ZWlsZXIpLiAKIDQgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBDb2xsZWN0aW9uLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:31:52Z","doi":"10.15468/DL.VGNGAC","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/dqb9za","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/wqsad9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/pal1lb","References:DOI:10.5519/0002965","References:DOI:10.15468/pj2yrh","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/kllkyl","References:DOI:10.15468/dipjcr","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T07:33:07Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:33:07Z","doi":"10.15468/DL.HPOCGZ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/eaqv44","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wqsad9","References:DOI:10.15468/ahunho","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/qhqzub","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/k88vjq","References:DOI:10.15468/dqb9za","References:DOI:10.15468/c4w4co","References:DOI:10.15468/pal1lb","References:DOI:10.15468/lmznjw","References:DOI:10.15468/4entqy","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/kllkyl","References:DOI:10.15468/euw5ge","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2","References:DOI:10.15468/9axq0b"],"publicationYear":"2015"},{"minted":"2015-04-08T07:34:13Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjdpcnh4YjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMzUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4xNDAyMDE8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDUzOSBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IHBhcnZpZmxvcmEgSG9zdCAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNTM5IHJlY29yZHMgZnJvbSAzMCBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyMzMgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDEgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy4gCiAxIHJlY29yZHMgZnJvbSBDZURvYyBkZSBCaW9kaXZlcnNpdGF0IFZlZ2V0YWw6IEJDTi1TZWVkcy4gCiAxNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLiAKIDIgcmVjb3JkcyBmcm9tIEphcmTDrW4gQm90w6FuaWNvIEF0bMOhbnRpY28sIEdpasOzbjogSkJBRy1MYcOtbnouIAogMiByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogOSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDQzIHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiAyIHJlY29yZHMgZnJvbSBDYXTDoWxvZ28gRmxvcsOtc3RpY28gSGlzdMOzcmljbyBkZSBOYXZhcnJhLiBHb2JpZXJubyBkZSBOYXZhcnJhLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJpZXIgQS4gTGUgR3JhbmQgKEJPVU0pLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogMTAgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogMiByZWNvcmRzIGZyb20gRURJVCAtIEFUQkkgaW4gTWVyY2FudG91ci9BbHBpIE1hcml0dGltZSAoRnJhbmNlL0l0YWx5KS4gCiAzIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIFZpZW5uYSwgSW5zdGl0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gV1UuIAogMyByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIChGUikuIAogMSByZWNvcmRzIGZyb20gQmlvRnJlc2ggUG9uZCBEYXRhLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdMOkdCBTYWx6YnVyZy4gCiAxMCByZWNvcmRzIGZyb20gVklUIEhlcmJhcml1bSAtIFZhc2N1bGFyIFBsYW50cyAoVGhlIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gb2YgQWxhdmEpLiAKIDQgcmVjb3JkcyBmcm9tIG5hdHVyZ3Vja2VyLiAKIDE4IHJlY29yZHMgZnJvbSBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChNYWRyaWQpLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKE1BKS4gCiA2IHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiAxMCByZWNvcmRzIGZyb20gVGlyb2xlciBMYW5kZXNtdXNldW0gRmVyZGluYW5kZXVtLiAKIDMgcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMTM1IHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMiByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGUgUGxhbnRhcyBWYXNjdWxhcmVzIGRlIGxhIFVuaXZlcnNpZGFkIGRlIFNhbGFtYW5jYTogU0FMQS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNCByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:34:13Z","doi":"10.15468/DL.7IRXXB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T07:34:26Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:34:26Z","doi":"10.15468/DL.79SXP8","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/wtlymk","References:DOI:10.15468/hrztgn","References:DOI:10.15468/gja4jo","References:DOI:10.15468/k88vjq","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/zrlqok","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T07:34:44Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:34:44Z","doi":"10.15468/DL.TPUUT6","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ygtutx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iawody","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/hrztgn","References:DOI:10.15468/gja4jo","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/2g6i0v","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/g1zohr","References:DOI:10.15468/zrlqok","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T07:35:06Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:35:06Z","doi":"10.15468/DL.CU9EQA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/w8gru5","References:DOI:10.15468/gja4jo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/nema2n","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ennulm","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/tm56sc","References:DOI:10.15468/wqsad9","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:35:17Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:35:17Z","doi":"10.15468/DL.CDNFXI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ypoair","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/ahunho","References:DOI:10.15468/uc1apo","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/c4w4co","References:DOI:10.15468/k88vjq","References:DOI:10.15468/ygtutx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/gja4jo","References:DOI:10.15468/iawody","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/dipjcr","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:35:28Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnlrb3VtbzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMzMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2p4YmhxeDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3dxc2FkOTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tlMm9keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d0bHltazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L21iaG1tdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2VhcXY0NDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3lwb2FpcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2hyenRnbjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2s4OHZqcTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2dqYTRqbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3R2bmprNzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9lbm51bG08L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96cmxxb2s8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC95Z3R1dHg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC91YzFhcG88L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8wZWE3cWk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wYWwxbGI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wajJ5cmg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9ra2IyeDA8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93OGdydTU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9xYWV2ejI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTUxNjY4MDM8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDExMTM4OCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IHBhbmljZWEgTC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDExMTM4OCByZWNvcmRzIGZyb20gMjEyIGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDQgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy1IaXN0w7NyaWNvLiAKIDEgcmVjb3JkcyBmcm9tIEdlc2Now7x0enRlciBMYW5kc2NoYWZ0c2Jlc3RhbmR0ZWlsIC0gR0xCICJUcm9wcGFjaCIuIAogMSByZWNvcmRzIGZyb20gTmF0dXIgZXJsZWJlbiBydW5kIHVtIGRlbiBTZW1pbmFyYmF1ZXJuaG9mIEd1dCBIb2hlbmJlcmcuIAogMjAwIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCAoSTA5MykgOiBGbG9yZSBkdSBNYXNzaWYgQXJtb3JpY2Fpbi4gCiAxIHJlY29yZHMgZnJvbSBCVU5EIC0gRGFzc293ZXIgU2VlIChMw7xiZWNrL0Rhc3NvdykuIAogNzYyIHJlY29yZHMgZnJvbSBCaW9Gb2t1cy4gCiA3NDcgcmVjb3JkcyBmcm9tIEZsb3Jpc3RpYyBEYXRhYmFzZXMgb2YgTWVja2xlbmJ1cmctUG9tZXJhbmlhIC0gSGlnaGVyIFBsYW50cy4gCiA0ODcgcmVjb3JkcyBmcm9tIEpvcmRhbC4gCiAxIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIGluICJXaWxkdGllcmxhbmQiLiAKIDEgcmVjb3JkcyBmcm9tIFBlcmNodG9sZHNkb3JmZXIgSGVpZGUuIAogMTc5NiByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBCb3RhbnkgVW5pdCwgRmlubmlzaCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IChIKS4gCiAyNyByZWNvcmRzIGZyb20gRG9yc2V0IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBCcnlvcGh5dGUgU3VydmV5IG9mIHRoZSBQb29sZSBCYXNpbiBNaXJlcyAtIE5CTiBTb3V0aCBXZXN0IFBpbG90IFByb2plY3QgQ2FzZSBTdHVkaWVzLiAKIDIyIHJlY29yZHMgZnJvbSBOYXR1cmhpc3RvcmlzY2hlcyBNdXNldW0gTWFpbnosIEZlbGRiZW9iYWNodHVuZ3NkYXRlbiBQZmxhbnplbi4gCiAyOTkgcmVjb3JkcyBmcm9tIFRyb21zw7ggTXVzZXVtLCBWYXNjdWxhciBwbGFudHMuIAogNDI5IHJlY29yZHMgZnJvbSBGTE9SSVZPTi4gCiA2OTQgcmVjb3JkcyBmcm9tIFNocm9wc2hpcmUgRWNvbG9naWNhbCBEYXRhIE5ldHdvcmsgLSBTaHJvcHNoaXJlIEVjb2xvZ2ljYWwgRGF0YSBOZXR3b3JrIERhdGFiYXNlLiAKIDIgcmVjb3JkcyBmcm9tIENJQklPLCBBbGljYW50ZTpBQkgtR0JJRi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnNjaHV0enN0YXRpb24gU2NobWlkc2ZlbGRlbi4gCiAxIHJlY29yZHMgZnJvbSBKb2huIE11aXIgVHJ1c3QgLSBQbGFudHMgYW5kIEJyeW9waHl0ZXMgcmVjb3JkZWQgb24gU2NoaWVoYWxsaW9uIDI1LTMwIEp1bmUgMjAwMC4gCiA3IHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBMb2NhbCBXaWxkbGlmZSBTaXRlIFN1cnZleXMgQmVya3NoaXJlLiAKIDE3MCByZWNvcmRzIGZyb20gSGVyYmFyaXVtIChJQ0VMKS4gCiAxIHJlY29yZHMgZnJvbSBXw6RsZGVyIGJlaSBOb3Jka2lyY2hlbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBNdXNlbyBkZSBMYSBTYWxsZSBCb2dvdMOhIChNTFMpLiAKIDUwMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtLCBCb3RhbmljYWwgTXVzZXVtLCBVbml2ZXJzaXR5IG9mIE91bHUsIEZpbmxhbmQgKE9VTFUpLiAKIDEgcmVjb3JkcyBmcm9tIEpvaG4gTXVpciBUcnVzdCAtIFBsYW50cywgQnJ5b3BoeXRlcyBhbmQgTGljaGVucyByZWNvcmRlZCBvbiB0aGUgTMODwqwgYW5kIENvaXJlIERob3JyY2FpbCBFc3RhdGUgZHVyaW5nIEp1bmUgMjAwMS4uIAogNiByZWNvcmRzIGZyb20gVGhlIEZsb3JhIG9mIENvdW50eSBDbGFyZS4gCiAxIHJlY29yZHMgZnJvbSBMQlYgMTAwIC0gQXJ0ZW52aWVsZmFsdCBhbSBSb3Roc2VlLiAKIDMgcmVjb3JkcyBmcm9tIENlRG9jIGRlIEJpb2RpdmVyc2l0YXQgVmVnZXRhbDogQkNOLVNlZWRzLiAKIDQzOCByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDEgcmVjb3JkcyBmcm9tIEpvaG4gTXVpciBUcnVzdCAtIFBsYW50cywgQnJ5b3BoeXRlcyBhbmQgTGljaGVucyByZWNvcmRlZCBvbiBRdWluYWcgaW4gMjAwNi0yMDA3LiAKIDkgcmVjb3JkcyBmcm9tIENPTk4uIAogMzg4NyByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBWRkQtQlcsIERpbmtlbGJlcmc6IFBmZXJkZXdlaWRlbiBPYmVybWluc2Vsbi4gCiAyIHJlY29yZHMgZnJvbSBOYXRpb25hbCBTeXN0ZW0gb2YgUHJvdGVjdGVkIEFyZWFzIGluIFBvbGFuZCAtIFBsYW50cy4gCiA2NjIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgT3NsbyAoTykuIAogMTI0NiByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogMSByZWNvcmRzIGZyb20gT2JlcmVzIFNjaGluZGVsYmFjaHRhbC4gCiAxMDkxIHJlY29yZHMgZnJvbSBCU0JJIHRldHJhZCBkYXRhIGZvciBJcmVsYW5kLiAKIDQgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBMYXJzIExldmkgTGFlc3RhZGl1cy4gCiAyIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBOYXR1cmUgQ29uc2VydmFuY3kgQ291bmNpbCBTdXJ2ZXkgb2YgQW5jaWVudCBXb29kbGFuZHMgaW4gQmVya3NoaXJlLi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIE1hYXN0cmljaHQgKE5MKSAtIEhlcmJhcml1bS4gCiA5NiByZWNvcmRzIGZyb20gUm90aGVyaGFtIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzLiAKIDEzNCByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBTTkggU2l0ZSBDb25kaXRpb24gTW9uaXRvcmluZyAtIFZhc2N1bGFyIHBsYW50cyAoMjAwMC0yMDA2KS4gCiAyOSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBDaGFuZ2luZyBGbG9yYSBvZiBHbGFzZ293IDE5ODItMjAwMC4gCiA0NiByZWNvcmRzIGZyb20gSGVydGZvcmRzaGlyZSBOYXR1cmFsIEhpc3RvcnkgU29jaWV0eSBGbG9yYSBHcm91cCAtIEhlcnRmb3Jkc2hpcmUgRmxvcmEgU3VydmV5IFJlY29yZHMgMTk4Ny0yMDA1LiAKIDEgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIEhlcmJhcml1bSwgTk1CVS4gCiAxMyByZWNvcmRzIGZyb20gSXJlbGFuZCdzIEJpb0JsaXR6IDIwMTIuIAogODcgcmVjb3JkcyBmcm9tIENhcm5ldCBlbiBMaWduZS4gCiAxMiByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiAyNzEgcmVjb3JkcyBmcm9tIElCRiBNb25pdG9yaW5nIG9mIFZhc2N1bGFyIFBsYW50cy4gCiAzOSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIEp5dsOkc2t5bMOkIFVuaXZlcnNpdHkgTXVzZXVtLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJpZXIgQS4gTGUgR3JhbmQgKEJPVU0pLiAKIDUyIHJlY29yZHMgZnJvbSBTY290dGlzaCBCb3JkZXJzIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBTV1QgU2NvdHRpc2ggQm9yZGVycyBMb2NhbCBXaWxkbGlmZSBTaXRlIFN1cnZleSBkYXRhIDE5OTYtMjAwMCAtIHNwZWNpZXMgaW5mb3JtYXRpb24uIAogMSByZWNvcmRzIGZyb20gQ3V4aGF2ZW5lciBLw7xzdGVuaGVpZGVuLiAKIDMgcmVjb3JkcyBmcm9tIEh1bWJlciBFbnZpcm9ubWVudGFsIERhdGEgQ2VudHJlIC0gSHVtYmVyIEVudmlyb25tZW50YWwgRGF0YSBDZW50cmUgLSBOb24gU2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gCiA0IHJlY29yZHMgZnJvbSBCYW5jbyBkZSBHZXJtb3BsYXNtYSBkZWwgSmFyZMOtbiBCb3TDoW5pY28gQXRsw6FudGljby4gCiAzMCByZWNvcmRzIGZyb20gQm90YW55IHJlZ2lzdHJhdGlvbiBkYXRhYmFzZSBieSBEYW5pc2ggYm90YW5pc3RzLiAKIDE0IHJlY29yZHMgZnJvbSBTdGFmZm9yZHNoaXJlIEVjb2xvZ2ljYWwgUmVjb3JkIC0gU0VSIFNwZWNpZXMtYmFzZWQgU3VydmV5cy4gCiAyNDEgcmVjb3JkcyBmcm9tIERvcnNldCBFbnZpcm9ubWVudGFsIFJlY29yZHMgQ2VudHJlIC0gRG9yc2V0IFNTU0kgU3BlY2llcyBSZWNvcmRzIDE5NTIgLSAyMDA0IChOYXR1cmFsIEVuZ2xhbmQpLiAKIDQ4MSByZWNvcmRzIGZyb20gQmVsZ2lhbiBJRkJMIEZsb3JhIENoZWNrbGlzdHMgKDE5MzktMTk3MSkuIAogMSByZWNvcmRzIGZyb20gTmF0dXJzY2h1dHpnZWJpZXQgU2lzdGlnLUtyZWtlbGVyLUhlaWRlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgV2FnZW5pbmdlbi4gCiA0NyByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDIgcmVjb3JkcyBmcm9tIEdlb2dyYXBoaWNhbGx5IHRhZ2dlZCBJTlNEQyBzZXF1ZW5jZXMuIAogMSByZWNvcmRzIGZyb20gU2NobGVybiAtIChCb3plbikuIAogMzc2NyByZWNvcmRzIGZyb20gQ291bnRyeXNpZGUgQ291bmNpbCBmb3IgV2FsZXMgLSBQaGFzZSAyIExvd2xhbmQgR3Jhc3NsYW5kIFN1cnZleSBvZiBXYWxlcy4gCiA1IHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogMjMgcmVjb3JkcyBmcm9tIENhdMOhbG9nbyBGbG9yw61zdGljbyBIaXN0w7NyaWNvIGRlIE5hdmFycmEuIEdvYmllcm5vIGRlIE5hdmFycmEuIAogMSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW4gRWRpbmJ1cmdoIEhlcmJhcml1bSAoRSkuIAogNiByZWNvcmRzIGZyb20gQm90YW55IERpdmlzaW9uLCBZYWxlIFBlYWJvZHkgTXVzZXVtLiAKIDEzMjggcmVjb3JkcyBmcm9tIFZlZ2V0YXRpb24gZGF0YSBmcm9tIHByb3RlY3RlZCBhcmVhcyBpbiBEZW5tYXJrICjCpyAzIGluIHRoZSBEYW5pc2ggTmF0dXJlIFByb3RlY3Rpb24gQWN0KS4gCiAxMCByZWNvcmRzIGZyb20gQXJhbnphZGkgWmllbnR6aSBFbGthcnRlYS4gCiA4NTk1IHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgaW4gRGVubWFyayByZWNvcmRlZCB1bmRlciB0aGUgVGhlIE5hdGlvbndpZGUgTW9uaXRvcmluZyBhbmQgQXNzZXNzbWVudCBQcm9ncmFtbWUgZm9yIHRoZSBBcXVhdGljIGFuZCBUZXJyZXN0cmlhbCBFbnZpcm9ubWVudHMgKE5PVkFOQSkuIAogMSByZWNvcmRzIGZyb20gSm9obiBNdWlyIFRydXN0IC0gVmFzY3VsYXIgUGxhbnRzIGFuZCBCcnlvcGh5dGVzIG9mIEdsZW4gU2xpZ2FjaGFuLiAKIDIwIHJlY29yZHMgZnJvbSBFLiBDLiBTbWl0aCBIZXJiYXJpdW0gKEFDQUQpLiAKIDI3IHJlY29yZHMgZnJvbSBBdGxhcyBkZXMgcGxhbnRlcyB2YXNjdWxhaXJlcyBkZSBMb3JyYWluZS4gCiAyIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgQXNvY2lhY2nDs24gQklHQSBwYXJhIGVsIGVzdHVkaW8gZGVsIHBhdHJpbW9uaW8gbmF0dXJhbCBkZSBHYWxpY2lhOiBGQklHQS4gCiA1IHJlY29yZHMgZnJvbSBBdXN0cmFsaWEncyBWaXJ0dWFsIEhlcmJhcml1bS4gCiAxIHJlY29yZHMgZnJvbSBKb2huIE11aXIgVHJ1c3QgLSBQbGFudHMsIEJyeW9waHl0ZXMgYW5kIExpY2hlbnMgcmVjb3JkZWQgb24gdGhlIE5ldmlzIEVzdGF0ZSBkdXJpbmcgc3VtbWVyIDIwMDMuLiAKIDEgcmVjb3JkcyBmcm9tIEFydGVudmllbGZhbHQgYW0gU2NobGVybi4gCiAyMDMgcmVjb3JkcyBmcm9tIEJyaXN0b2wgUmVnaW9uYWwgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIEJSRVJDIE9jdG9iZXIgMjAwOS4gCiA2IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIChMb25kb24pIENvbGxlY3Rpb24gU3BlY2ltZW5zLiAKIDEyIHJlY29yZHMgZnJvbSBFY29mYWN0LiAKIDIwIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBMb2NhbCBXaWxkbGlmZSBTaXRlIFN1cnZleXMgT3hmb3Jkc2hpcmUuIAogNzg3IHJlY29yZHMgZnJvbSBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYSB2ZWdldGFjacOzbiBJYsOpcmljYSB5IE1hY2Fyb27DqXNpY2EuIAogMiByZWNvcmRzIGZyb20gUGFsZW9iaW9sb2d5IERhdGFiYXNlLiAKIDM1NCByZWNvcmRzIGZyb20gRHIgRnJhbmNpcyBSb3NlIEZpZWxkIE5vdGVib29rIFByb2plY3QgLSBGaWVsZCBOb3RlYm9vayBSZWNvcmRzIG9mIERyIEZyYW5jaXMgUm9zZSAxOTUwJ3MgdG8gMTk5MCdzLiAKIDEgcmVjb3JkcyBmcm9tIFRyaWViZXNiYWNoIChaZXVsZW5yb2RhLVRyaWViZXMpLiAKIDEyIHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiAxIHJlY29yZHMgZnJvbSBWb20gR2lwZmVsIGlucyBNb29yLCBUcmFuc2VrdCBpbSBOU0cgQWxsZ8OkdWVyIEhvY2hhbHBlbi4gCiA2IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogNTMgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDggcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIEJvdGFuaXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4uIAogNDk3IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBBZ2RlciBuYXR1cm11c2V1bSAoS01OKS4gCiAxIHJlY29yZHMgZnJvbSBCYXllcmlzY2hlIERvbmF1IC0gTGVpcGhlaW0uIAogMSByZWNvcmRzIGZyb20gR2VtZWluZGUgU3Vyc2VlLiAKIDIgcmVjb3JkcyBmcm9tIEphcmTDrW4gQm90w6FuaWNvIGRlIEPDs3Jkb2JhOiBIZXJiYXJpdW0gQ09BLiAKIDEgcmVjb3JkcyBmcm9tIEdFTy1IYXVwdHZlcmFuc3RhbHR1bmcgKE5MUCBIYXJ6IC8gSG9jaGhhcnopLiAKIDIgcmVjb3JkcyBmcm9tIE5hdHVyaGlzdG9yaXNjaGVzIE11c2V1bSBNYWlueiwgQm90YW5pY2FsIENvbGxlY3Rpb24uIAogMzMyIHJlY29yZHMgZnJvbSBGbG9yYSBkJ0FuZG9ycmEuIAogNTA1OSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMzYwIHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIGR1IExpbW91c2luLiAKIDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgT2JzZXJ2YXRpb25zLCBPc2xvIChPKS4gCiAxIHJlY29yZHMgZnJvbSBQcmllc3QgUG90IHNwZWNpZXMgbGlzdCwgQ3VtYnJpYSwgQnJpdGFpbi4gCiAyMjUxIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiAzMyByZWNvcmRzIGZyb20gWW9ya3NoaXJlIFdpbGRsaWZlIFRydXN0IC0gWW9ya3NoaXJlIFdpbGRsaWZlIFRydXN0IC0gTm9uLXNlbnNpdGl2ZSByZWNvcmRzIGZyb20gYWxsIHRheG9ub21pYyBncm91cHMuIAogMSByZWNvcmRzIGZyb20gQmF5ZXJpc2NoZSBEb25hdSAtIEJsaW5kaGVpbSBEb25hdWJyw7xja2UuIAogMjkgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIChGUikuIAogMTMxNyByZWNvcmRzIGZyb20gRmxvcmFiYW5rMSAtIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCAgZGlzdHJpYnV0aW9uIGluIHRoZSBub3J0aGVybiBwYXJ0IG9mIEJlbGdpdW0gKEZsYW5kZXJzIGFuZCB0aGUgQnJ1c3NlbHMgQ2FwaXRhbCByZWdpb24pLiAKIDExIHJlY29yZHMgZnJvbSBGbG9WZWdTSSAtIEZsb3Jpc3RpY2FsIGFuZCBmaXRvY2Vub2xvZ2ljYWwgZGF0YWJhc2Ugb2YgWlJDIFNBWlUuIAogMSByZWNvcmRzIGZyb20gTGFCb09iMDIuIAogMTIgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMSByZWNvcmRzIGZyb20gQm90YW55IChVUFMpLiAKIDIyIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBOYXR1cmUgQ29uc2VydmFuY3kgQ291bmNpbCBCZXJrc2hpcmUgTWVhZG93cyBTdXJ2ZXkgMTk4NC04NyAoYXMgaGVsZCBieSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUpLiAKIDEzNiByZWNvcmRzIGZyb20gRHV0Y2ggRm91bmRhdGlvbiBmb3IgQXBwbGllZCBXYXRlciBSZXNlYXJjaCAoU1RPV0EpIC0gTGltbm9kYXRhIE5lZXJsYW5kaWNhLiAKIDMgcmVjb3JkcyBmcm9tIFNoaXJlIEdyb3VwIG9mIEludGVybmFsIERyYWluYWdlIEJvYXJkcyAtIFNoaXJlIEdyb3VwIElEQiBzcGVjaWVzIGRhdGEgMjAwNCB0byBwcmVzZW50LiAKIDExOCByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnQgaGVyYmFyaXVtLCBBZ2RlciBuYXR1cm11c2V1bSBvZyBib3Rhbmlza2UgaGFnZS4gCiAyMjMgcmVjb3JkcyBmcm9tIFdpbHRzaGlyZSBhbmQgU3dpbmRvbiBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIC0gV2lsdHNoaXJlICZhbXA7IFN3aW5kb24gU2l0ZS1iYXNlZCBTdXJ2ZXkgUmVjb3Jkcy4gCiA1MyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIChBTU5IKS4gCiAyOCByZWNvcmRzIGZyb20gQmlvbG9naWV6ZW50cnVtIExpbnouIAogNTEwIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAzNjYgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVHJvbmRoZWltIChUUkgpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyc2NodXR6Z2ViaWV0IEzDvG5lYnVyZ2VyIEhlaWRlLiAKIDggcmVjb3JkcyBmcm9tIEFydGVuRmluZGVyLiAKIDE1NjE3IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFZhc2N1bGFyIFBsYW50cyBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBHdXJnbHRhbCAoVGFycmVueikuIAogNTc0IHJlY29yZHMgZnJvbSBTdGFmZm9yZHNoaXJlIEVjb2xvZ2ljYWwgUmVjb3JkIC0gU0VSIFNpdGUtYmFzZWQgU3VydmV5cy4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBwbGFudHMgb2YgQW1ydW0gMjAwNy0yMDA4LiAKIDcxIHJlY29yZHMgZnJvbSBUdWxsaWUgSG91c2UgTXVzZXVtIC0gVHVsbGllIEhvdXNlIE11c2V1bS4gQ3VtYnJpYSBXaWxkbGlmZSBUcnVzdCBzdXJ2ZXkgcmVjb3JkcyBmcm9tIDE5NzAgLSAyMDA3IG9mIEN1bWJyaWEgV2lsZGxpZmUgU2l0ZXMuIFZhcmlvdXMuLiAKIDI1IHJlY29yZHMgZnJvbSBHcmVhdGVyIE1hbmNoZXN0ZXIgRWNvbG9neSBVbml0IC0gSGlnaGVyIFBsYW50IFJlY29yZHMgRnJvbSBHcmVhdGVyIE1hbmNoZXN0ZXIuIAogMjAxMyByZWNvcmRzIGZyb20gTm9ydGhlcm4gSXJlbGFuZCBFbnZpcm9ubWVudCBBZ2VuY3kgLSBFSFMgU3BlY2llcyBEYXRhc2V0cy4gCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gUmhvZW5tdXNldW0gRmxhZHVuZ2VuLiAKIDEgcmVjb3JkcyBmcm9tIENhcnRvZ3JhZsOtYSBkZSB2ZWdldGFjacOzbiBhIGVzY2FsYSBkZSBkZXRhbGxlIDE6MTAuMDAwIGRlIGxhIG1hc2EgZm9yZXN0YWwgZGUgQW5kYWx1Y8OtYS4gCiA5IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBCYXJjZWxvbmEuIEdydXAgZEludmVzdGlnYWNpw7MgR2VvYm90w6FuaWNhIGkgQ2FydG9ncmFmaWEgZGUgbGEgVmVnZXRhY2nDsy4gCiA0MjAgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVWlCLiAKIDQzIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0sIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1LCBGaW5sYW5kIChUVVIpLiAKIDQ0IHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogMSByZWNvcmRzIGZyb20gRmF1bi4gCiA1MDAgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgRnJhbmNvLUJlbGdlLiAKIDggcmVjb3JkcyBmcm9tIFRoYW1lcyBWYWxsZXkgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIE5hdHVyZSBDb25zZXJ2YW5jeSBDb3VuY2lsIE94Zm9yZHNoaXJlIEZlbiBTdXJ2ZXkgMTk4MyAoYXMgaGVsZCBieSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUpLiAKIDEgcmVjb3JkcyBmcm9tIFByb21iZXJnMS4gCiA2MyByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMTA5OTEgcmVjb3JkcyBmcm9tIE1lYWRvdyBhbmQgUGFzdHVyZSBJbnZlbnRvcnkgKFNKVikuIAogMTEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0sIFZpZW5uYSAtIEhlcmJhcml1bSBXLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpZGFkIFDDumJsaWNhIGRlIE5hdmFycmEsIFBhbXBsb25hOiBVUE5BLUguIAogMSByZWNvcmRzIGZyb20gQm9yc3RncmFzcmFzZW4gdW0gZGllIEJ1cmcgQmFsZGVuYXUgaW0gT2JlcmVuIERocm9udGFsLiAKIDggcmVjb3JkcyBmcm9tIEpvaG4gTXVpciBUcnVzdCAtIFBsYW50cywgQnJ5b3BoeXRlcyBhbmQgTGljaGVucyByZWNvcmRlZCBvbiB0aGUgU2t5ZSBFc3RhdGUgZHVyaW5nIE9jdG9iZXIgMTk5NSDDosKAwpMgT2N0b2JlciAyMDA0Li4gCiA4IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogMSByZWNvcmRzIGZyb20gTW9vc3dhbGQgKEZyZWlidXJnKS4gCiAxIHJlY29yZHMgZnJvbSBHb3RoZW5idXJnIEhlcmJhcml1bSAtIEdlbmVyYWwgKEdCSUY6SUg6R0I6SGVyYmFyaXVtKS4gCiA1IHJlY29yZHMgZnJvbSBLYXJsIEZyYW56ZW5zIFVuaXZlcnNpdHkgb2YgR3JheiwgSW5zaXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBHWlUuIAogMSByZWNvcmRzIGZyb20gQXJ0ZW52aWVsZmFsdCBhdWYgZGVyIFdlaWRlIC0gR0VPLUhhdXB0dmVyYW5zdGFsdHVuZyBpbiBDcmF3aW5rZWwuIAogMjg0IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdhdGVyZm9yZC4gCiA3IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gKMOFYm8gQWthZGVtaSksIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1IChUVVJBKS4gCiAxNjIyIHJlY29yZHMgZnJvbSBXZXRsYW5kIEludmVudG9yeSAoTlYpLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDE5IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE11c2V1bSBvZiBBcmNoYWVvbG9neSwgVW5pdmVyc2l0eSBvZiBTdGF2YW5nZXIuIAogNDk0IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdleGZvcmQuIAogMTggcmVjb3JkcyBmcm9tIE1lcnNleXNpZGUgQmlvQmFuayAtIE5vcnRoIE1lcnNleXNpZGUgRmxvd2VyaW5nIFBsYW50cyAodmVyaWZpZWQpLiAKIDQ4IHJlY29yZHMgZnJvbSBGbG9yYSBvZiB0aGUgU3RvxYJvd2UgTXRzLi4gCiAxMTggcmVjb3JkcyBmcm9tIE5hdGlvbmFsIFRydXN0IC0gV2lja2VuIEZlbiBuYXR1cmUgcmVzZXJ2ZSBzcGVjaWVzIGRhdGEgaGVsZCBieSBUaGUgTmF0aW9uYWwgVHJ1c3QuIAogMTgzIHJlY29yZHMgZnJvbSBTaGVmZmllbGQgQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIFNoZWZmaWVsZCBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlLSBOb24tc2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gLiAKIDQgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogMTMzIHJlY29yZHMgZnJvbSBPSE4uIAogMTI0NDUgcmVjb3JkcyBmcm9tIER1dGNoIFZlZ2V0YXRpb24gRGF0YWJhc2UgKExWRCkuIAogMSByZWNvcmRzIGZyb20gSW52ZW50YXJpbyBkZSBGbG9yYSB5IFZlZ2V0YWNpw7NuIGRlbCBNdW5pY2lwaW8gZGUgRW5ndcOtZGFub3MgKEN1ZW5jYSksIDIwMTAuIEFzb2NpYWNpw7NuIGRlIERlc2Fycm9sbG8gSW50ZWdyYWwgZGUgbGEgTWFuY2h1ZWxhIENvbnF1ZW5zZSAoQURJTUFOKS4gCiAxIHJlY29yZHMgZnJvbSBXaWxkZXNNb29yIGJlaSBTY2h3YWJzdGVkdC4gCiAxIHJlY29yZHMgZnJvbSBQZmluZ3N0ZXhrdXJzaW9uIEFsdGVyIEJlc3Npbi4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cnBhcmFkaWVzIGluIEdyw6RmZW5oYXVzZW4gYW0gVHJpZmVscyAoYmVpIEFubndlaWxlcikuIAogMTEgcmVjb3JkcyBmcm9tIEZ1bmd1cyBDb2xsZWN0aW9ucyBhdCBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSAoSGVyYmFyaXVtIEtSKS4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBNw6FsYWdhOiBNR0MtQ29ybW9mLiAKIDQgcmVjb3JkcyBmcm9tIE5hdGlvbmFsIFRydXN0IC0gSGF0ZmllbGQgRm9yZXN0IHNwZWNpZXMgZGF0YSBoZWxkIGJ5IFRoZSBOYXRpb25hbCBUcnVzdC4uIAogMiByZWNvcmRzIGZyb20gUG9uZCBDb25zZXJ2YXRpb24gLSBOYXRpb25hbCBQb25kIE1vbml0b3JpbmcgTmV0d29yayBjb2xsYXRlZCBwb25kIHN1cnZleSBkYXRhIGZvciBHcmVhdCBCcml0YWluIDE5NzIgdG8gMjAwNy4gCiA4NzggcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIFRyb25kaGVpbSAoVFJIKS4gCiAxIHJlY29yZHMgZnJvbSBTY2hhdHppbnNlbCBOb3JkZXJuZXkuIAogNjYgcmVjb3JkcyBmcm9tIEpvaW50IE5hdHVyZSBDb25zZXJ2YXRpb24gQ29tbWl0dGVlIC0gVmVnZXRhdGlvbiBzdXJ2ZXlzIG9mIGNvYXN0YWwgc2hpbmdsZSBpbiBHcmVhdCBCcml0YWluLiAKIDE2ODMgcmVjb3JkcyBmcm9tIE5vcndlZ2lhbiBTcGVjaWVzIE9ic2VydmF0aW9uIFNlcnZpY2UuIAogNzMgcmVjb3JkcyBmcm9tIEVjb1JlY29yZCAtIFZhc2N1bGFyIHBsYW50IHJlY29yZHMgaGVsZCBieSBFY29SZWNvcmQgZm9yIHRoZSBCaXJtaW5naGFtIGFuZCB0aGUgQmxhY2sgQ291bnRyeSBhcmVhIGNvbGxhdGVkIHByaW9yIHRvIE1hcmNoIDIwMTMuIAogNDI1OCByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBGaWVsZCBub3RlcywgT3NsbyAoTykuIAogMTcwIHJlY29yZHMgZnJvbSBTdWZmb2xrIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgLSBTdWZmb2xrIEJpb2xvZ2ljYWwgUmVjb3JkcyBDZW50cmUgKFNCUkMpIGRhdGFzZXQuIAogNyByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXR5IHJlY29yZHMgZnJvbSBJcmVsYW5kIC0gZ2VuZXJhbC4gCiA0MSByZWNvcmRzIGZyb20gRmxvcmEgb2YgU8WCb3dpxYRza2kgTmF0aW9uYWwgUGFyaywgUG9sYW5kLiAKIDE4MiByZWNvcmRzIGZyb20gSXJpc2ggdmFzY3VsYXIgcGxhbnQgZGF0YSAxOTk5LTIwMDkuIAogNTcyIHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbmFsIGRhdGFiYXNlIG9mIEljZWxhbmRpYyBwbGFudHMuIAogNDI0IHJlY29yZHMgZnJvbSBOb3J0aCAmYW1wOyBFYXN0IFlvcmtzaGlyZSBFY29sb2dpY2FsIERhdGEgQ2VudHJlIC0gTm9ydGggYW5kIEVhc3QgWW9ya3NoaXJlIEVjb2xvZ2ljYWwgRGF0YSBDZW50cmUgLSBOb24tc2Vuc2l0aXZlIFJlY29yZHMgZnJvbSBhbGwgdGF4b25vbWljIGdyb3Vwcy4gLiAKIDgyMSByZWNvcmRzIGZyb20gU2NvdHRpc2ggTmF0dXJhbCBIZXJpdGFnZSAtIFN0YW5kaW5nIFdhdGVycyBEYXRhYmFzZS4gCiA3MDIgcmVjb3JkcyBmcm9tIFNvdXRoIEVhc3QgV2FsZXMgQmlvZGl2ZXJzaXR5IFJlY29yZHMgQ2VudHJlIC0gQ0NXIFJlZ2lvbmFsIERhdGEgOiBTb3V0aCBFYXN0IFdhbGVzIE5vbi1zZW5zaXRpdmUgU3BlY2llcyBSZWNvcmRzLiAKIDE0MiByZWNvcmRzIGZyb20gTmF0aW9uYWwgVHJ1c3QgZm9yIFNjb3RsYW5kIC0gTlRTIFByb3BlcnRpZXMgU3BlY2llcyBSZWNvcmRzIDE4MDAtMjAxMy4gCiAyIHJlY29yZHMgZnJvbSBHRU8tSGF1cHR2ZXJhbnN0YWx0dW5nIGltIE5hdGlvbmFscGFyayBCYXllcmlzY2hlciBXYWxkLiAKIDczIHJlY29yZHMgZnJvbSBCaW9GcmVzaCBQb25kIERhdGEuIAogNSByZWNvcmRzIGZyb20gQmFuY28gZGUgRGF0b3MgZGUgbGEgQmlvZGl2ZXJzaWRhZCBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYS4gCiAxIHJlY29yZHMgZnJvbSAyMCBKYWhyZSBOYXR1cnNjaHV0emdlYmlldCBEcmVpZW5iZXJnLiAKIDE1NyByZWNvcmRzIGZyb20gU2NvdHRpc2ggV2lsZGxpZmUgVHJ1c3QgLSBDb21taXNzaW9uZWQgc3VydmV5cyBhbmQgc3RhZmYgc3VydmV5cyBhbmQgcmVwb3J0cyBmb3IgU1dUIHJlc2VydmVzLiAuIAogNTUgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAxIHJlY29yZHMgZnJvbSBOU0cgS2Fyd2VuZGVsLiAKIDIgcmVjb3JkcyBmcm9tIFVTVS1VVEMgU3BlY2ltZW4gRGF0YWJhc2UuIAogMTI2MTcgcmVjb3JkcyBmcm9tIEFydGRhdGEuIAogMTAgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogNSByZWNvcmRzIGZyb20gTmlqbWVnZW4gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTkwpIC0gSGVyYmFyaXVtLiAKIDI4MCByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDEyIHJlY29yZHMgZnJvbSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUgLSBFbmdsaXNoIE5hdHVyZSBPeGZvcmRzaGlyZSBGZW4gU3VydmV5IDE5OTAtMTk5MSAoQSBDb21wYXJhdGl2ZSBTdXJ2ZXkgb2YgUmljaCBDYWxjYXJlb3VzIEZlbnMgb2YgT3hmb3Jkc2hpcmUpICAoYXMgaGVsZCBieSBUaGFtZXMgVmFsbGV5IEVudmlyb25tZW50YWwgUmVjb3JkcyBDZW50cmUpLiAKIDExIHJlY29yZHMgZnJvbSBDb3VudHJ5c2lkZSBDb3VuY2lsIGZvciBXYWxlcyAtIFdlbHNoIEludmVydGVicmF0ZSBEYXRhYmFzZSAoV0lEKS4gCiA0MjkgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZCdJbGxlLWV0LVZpbGFpbmUuIAogOCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgT3ZpZWRvLiBEZXBhcnRhbWVudG8gZGUgQmlvbG9nw61hIGRlIE9yZ2FuaXNtb3MgeSBTaXN0ZW1hczogRkNPLUJyaW9mLiAKIDQgcmVjb3JkcyBmcm9tIGJvdGFuaWNhbGNvbGxlY3Rpb24uIAogMjQgcmVjb3JkcyBmcm9tIE9ubGluZSBBdGxhcyBvZiB2YXNjdWxhciBwbGFudHMgMjAxMi0yMDIwLiAKIDc0IHJlY29yZHMgZnJvbSBCaW9kaXZlcnNpdMOkdHNkYXRlbmJhbmsgZGVzIExhbmRlcyBTYWx6YnVyZy4gCiA0IHJlY29yZHMgZnJvbSBKb2huIE11aXIgVHJ1c3QgLSBQbGFudHMsIEJyeW9waHl0ZXMgYW5kIExpY2hlbnMgcmVjb3JkZWQgb24gdGhlIFNhbmR3b29kIEVzdGF0ZSBkdXJpbmcgMTk5OCDDosKAwpMgMjAwNi4uIAogNyByZWNvcmRzIGZyb20gVGhlIEZ1bmdhbCBDb2xsZWN0aW9uIGF0IHRoZSBTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6LiAKIDQgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBDb2xsZWN0aW9uLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:35:28Z","doi":"10.15468/DL.YKOUMO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/wqsad9","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/eaqv44","References:DOI:10.15468/xnlbke","References:DOI:10.15468/ypoair","References:DOI:10.15468/hrztgn","References:DOI:10.15468/rhzrxw","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/gja4jo","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ygtutx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:41:05Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmh3a2JmdjwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzMzktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RxYjl6YTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2FodW5obzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4wPC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyA1NTYgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBwaWxvc2EgU2NvcC4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDU1NiByZWNvcmRzIGZyb20gNDMgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMjUzIHJlY29yZHMgZnJvbSBGbG9yS2FydCAtIEZsb3JlbkthcnRpZXJ1bmcgR2VmYWVzc3BmbGFuemVuLiAKIDMgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZGUgbCdBaW4uIAogMiByZWNvcmRzIGZyb20gSW5zdGl0dXRvIGRlIEJvdMOhbmljYSBEYXJ3aW5pb24uIAogOSByZWNvcmRzIGZyb20gTmF0aW9uYWwgU3lzdGVtIG9mIFByb3RlY3RlZCBBcmVhcyBpbiBQb2xhbmQgLSBQbGFudHMuIAogMTkgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiAzIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMSByZWNvcmRzIGZyb20gUGxhbnRhZSwgVEFJRiAoVGFpd2FuIGUtTGVhcm5pbmcgYW5kIERpZ2l0YWwgQXJjaGl2ZXMgUHJvZ3JhbSwgVEVMREFQKS4gCiAxIHJlY29yZHMgZnJvbSBLw7ZuaWdzdGV0dGVuLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gTWFhc3RyaWNodCAoTkwpIC0gSGVyYmFyaXVtLiAKIDIgcmVjb3JkcyBmcm9tIEJvdGFueSAoVVBTKS4gCiAxOSByZWNvcmRzIGZyb20gaW5hdHVyYSAtIEVybGVibmlzIE5hdHVyc2NoYXUgRG9ybmJpcm4uIAogOCByZWNvcmRzIGZyb20gRnVuZ3VzIENvbGxlY3Rpb25zIGF0IFN0YWF0bGljaGVzIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgS2FybHNydWhlIChIZXJiYXJpdW0gS1IpLiAKIDEgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDMgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgVmllbm5hLCBJbnN0aXR1dGUgZm9yIEJvdGFueSAtIEhlcmJhcml1bSBXVS4gCiAyIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMTIgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgRnJhbmNvLUJlbGdlLiAKIDIgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBWb25kZXJhdSAtIEZVTEQuIAogMiByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gRktTRS1IZXJiYXJpdW0gc3BlY2ltZW5zIG9mIEZhY3VsdHkgb2YgU3ltYmlvdGljIFN5c3RlbXMgU2NpZW5jZSwgRnVrdXNoaW1hIFVuaXZlcnNpdHksIEphcGFuLiAKIDEgcmVjb3JkcyBmcm9tIE5pam1lZ2VuIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKE5MKSAtIEhlcmJhcml1bS4gCiAyNyByZWNvcmRzIGZyb20gRmxvVmVnU0kgLSBGbG9yaXN0aWNhbCBhbmQgZml0b2Nlbm9sb2dpY2FsIGRhdGFiYXNlIG9mIFpSQyBTQVpVLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBNdXNldW1zLCBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0uIAogMSByZWNvcmRzIGZyb20gR2VtZWluZGUgU3Vyc2VlLiAKIDYgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogQXRsYXMgZGUgbGEgZmxvcmUgZGUgTG9ycmFpbmUuIAogNSByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMzIgcmVjb3JkcyBmcm9tIE9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uLiAKIDE4IHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBQZXJjaHRvbGRzZG9yZmVyIEhlaWRlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEJpb3NwaMOkcmVucGFyayBXaWVuZXJ3YWxkIC0gV2llbmVyIFN0ZWluaG9mZ3LDvG5kZS4gCiAyMCByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMSByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDEgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIChGUikuIAogOSByZWNvcmRzIGZyb20gQmlvbG9naWNhbCBhbmQgcGFsYWVvbnRvbG9naWNhbCBjb2xsZWN0aW9uIGFuZCBvYnNlcnZhdGlvbiBkYXRhIE1OSE5MLiAKIDIgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZHUgTGltb3VzaW4uIAogNSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIEJlcm9saW5lbnNlLiAKIDcgcmVjb3JkcyBmcm9tIEF0bGFzIGRlcyBwbGFudGVzIHZhc2N1bGFpcmVzIGRlIExvcnJhaW5lLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDIgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRXNww6hjZXMgVsOpZ8OpdGFsZXMgTWVuYWPDqWVzIGRlIEZyYW5jZSBtw6l0cm9wb2xpdGFpbmUuIAogMzIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IFNwZWNpbWVuIERhdGFiYXNlIG9mIEthbmFnYXdhIFByZWZlY3R1cmFsIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnkuIAogMSByZWNvcmRzIGZyb20gQ09OTi4gCiAzNiByZWNvcmRzIGZyb20gQSBncmlkLWJhc2VkIGRhdGFiYXNlIG9uIHZhc2N1bGFyIHBsYW50IGRpc3RyaWJ1dGlvbiBpbiB0aGUgTWVzaGNoZXJhIE5hdGlvbmFsIFBhcmssIFZsYWRpbWlyIE9ibGFzdCwgUnVzc2lhLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:41:05Z","doi":"10.15468/DL.HWKBFV","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo","References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho"],"publicationYear":"2015"},{"minted":"2015-04-08T07:41:22Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:41:22Z","doi":"10.15468/DL.FKUVZA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dipjcr","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/zk8soo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xnlbke","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/ahunho","References:DOI:10.15468/ke2ody","References:DOI:10.15468/7gudyo","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk"],"publicationYear":"2015"},{"minted":"2015-04-08T07:41:54Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:41:54Z","doi":"10.15468/DL.GYHZKD","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/fdzzal","References:DOI:10.15468/7gudyo","References:DOI:10.15468/ly60bx","References:DOI:10.15468/xnlbke","References:DOI:10.15468/euw5ge","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/ennulm","References:DOI:10.15468/kllkyl","References:DOI:10.15468/qaevz2","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T07:42:04Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:42:04Z","doi":"10.15468/DL.MVSM9N","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/pal1lb","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/gja4jo","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/xnlbke","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/uc1apo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/nema2n","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/s6zhid","References:DOI:10.15468/ahunho","References:DOI:10.15468/ennulm","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.5519/0002965","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/dipjcr","References:DOI:10.15468/c4w4co","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/zrlqok"],"publicationYear":"2015"},{"minted":"2015-04-08T07:42:05Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:42:05Z","doi":"10.15468/DL.MLLUUK","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ennulm","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/eaqv44","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/wqsad9","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:42:11Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:42:11Z","doi":"10.15468/DL.RJL6RQ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/xnlbke","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/wqsad9","References:DOI:10.15468/wtlymk","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/g1zohr","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.5519/0002965","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ennulm","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:44:31Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:44:31Z","doi":"10.15468/DL.RRKQ36","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ypoair","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/bkzv1l","References:DOI:10.15468/k3m1qc","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/dipjcr","References:DOI:10.5519/0002965","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/dqb9za","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T07:47:20Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:47:20Z","doi":"10.15468/DL.ABSPI4","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/dqb9za","References:DOI:10.5519/0002965","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/w8gru5","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/k88vjq","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/iawody","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dipjcr","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0"],"publicationYear":"2015"},{"minted":"2015-04-08T07:47:21Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjh4ZjZ2ZzwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNDYtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2dqYTRqbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2p4YmhxeDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3RtNTZzYzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d0bHltazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3R2bmprNzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96azhzb288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC93OGdydTU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8yZzZpMHY8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9yaHpyeHc8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC96cmxxb2s8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wajJ5cmg8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9tYmhtbXQ8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9rbGxreWw8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9pNWNxZGs8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41NTE5LzAwMDI5NjU8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC8wZWE3cWk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+Mzc3MjA0PC9zaXplPgogICAgPC9zaXplcz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQ+RGFyd2luIENvcmUgQXJjaGl2ZTwvZm9ybWF0PgogICAgPC9mb3JtYXRzPgogICAgPHJpZ2h0c0xpc3Q+CiAgICAgICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMCI+VGhlIGRhdGEgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBhcmUgcHJvdmlkZWQgdG8gdGhlIHVzZXIgdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIEJZLU5DIDQuMCBsaWNlbnNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IGFyZSBmcmVlIHRvIHVzZSwgc2hhcmUsIGFuZCBhZGFwdCB0aGUgZGF0YSBwcm92aWRlZCB0aGF0IHlvdSBnaXZlIHJlYXNvbmFibGUgYW5kIGFwcHJvcHJpYXRlIGNyZWRpdCAoYXR0cmlidXRpb24pIGFuZCB0aGF0IHlvdSBkbyBub3QgdXNlIHRoZSBtYXRlcmlhbCBmb3IgY29tbWVyY2lhbCBwdXJwb3NlcyAobm9uLWNvbW1lcmNpYWwpLgoKRGF0YSBmcm9tIHNvbWUgaW5kaXZpZHVhbCBkYXRhc2V0cyBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIG1heSBiZSBsaWNlbnNlZCB1bmRlciBsZXNzIHJlc3RyaWN0aXZlIHRlcm1zOyByZXZpZXcgdGhlIGRldGFpbHMgYmVsb3cuPC9yaWdodHM+CiAgICA8L3JpZ2h0c0xpc3Q+CiAgICA8ZGVzY3JpcHRpb25zPgogICAgICAgIDxkZXNjcmlwdGlvbiBkZXNjcmlwdGlvblR5cGU9IkFic3RyYWN0IiB4bWw6bGFuZz0iZW5nIj5BIGRhdGFzZXQgY29udGFpbmluZyAxNDUzIHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggcHVuY3RhdGEgR2F1ZGluIApIYXNDb29yZGluYXRlOiB0cnVlIApIYXNHZW9zcGF0aWFsSXNzdWU6IGZhbHNlLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAxNDUzIHJlY29yZHMgZnJvbSA2NCBjb25zdGl0dWVudCBkYXRhc2V0czogCiAyIHJlY29yZHMgZnJvbSBOU1cgaGVyYmFyaXVtIGNvbGxlY3Rpb24uIAogMTcgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIEFnZGVyIG5hdHVybXVzZXVtIChLTU4pLiAKIDEwIHJlY29yZHMgZnJvbSBWSVQgSGVyYmFyaXVtIC0gVmFzY3VsYXIgUGxhbnRzIChUaGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBvZiBBbGF2YSkuIAogNDAgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiAxIHJlY29yZHMgZnJvbSBEb3JzZXQgRW52aXJvbm1lbnRhbCBSZWNvcmRzIENlbnRyZSAtIERvcnNldCBTU1NJIFNwZWNpZXMgUmVjb3JkcyAxOTUyIC0gMjAwNCAoTmF0dXJhbCBFbmdsYW5kKS4gCiAxIHJlY29yZHMgZnJvbSBNaXNzb3VyaSBCb3RhbmljYWwgR2FyZGVuLiAKIDcgcmVjb3JkcyBmcm9tIEhlcmJhcmlvIGRlIFBsYW50YXMgVmFzY3VsYXJlcyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTYWxhbWFuY2E6IFNBTEEuIAogMzIgcmVjb3JkcyBmcm9tIER1dGNoIFZlZ2V0YXRpb24gRGF0YWJhc2UgKExWRCkuIAogOCByZWNvcmRzIGZyb20gQmlvRm9rdXMuIAogMiByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogOCByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBkZSBTZXZpbGxhLCBTRVYuIAogMjIgcmVjb3JkcyBmcm9tIE5vcndlZ2lhbiBCaW9kaXZlcnNpdHkgSW5mb3JtYXRpb24gQ2VudHJlIC0gT3RoZXIgZGF0YXNldHMuIAogMzcgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiA3NSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBPc2xvIChPKS4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiA3IHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIE9ic2VydmF0aW9ucywgT3NsbyAoTykuIAogMyByZWNvcmRzIGZyb20gQm90YW5pY2FsIEluZm9ybWF0aW9uIFN5c3RlbSBvZiBHZW5ldmEuIAogMTIgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDE3IHJlY29yZHMgZnJvbSBPYnNlcnZhdGlvbnMgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgZHUgQmFzc2luIHBhcmlzaWVuLi4gCiA2MiByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDggcmVjb3JkcyBmcm9tIERyIEZyYW5jaXMgUm9zZSBGaWVsZCBOb3RlYm9vayBQcm9qZWN0IC0gRmllbGQgTm90ZWJvb2sgUmVjb3JkcyBvZiBEciBGcmFuY2lzIFJvc2UgMTk1MCdzIHRvIDE5OTAncy4gCiAxMSByZWNvcmRzIGZyb20gT0hOLiAKIDE5IHJlY29yZHMgZnJvbSBOb3J3ZWdpYW4gU3BlY2llcyBPYnNlcnZhdGlvbiBTZXJ2aWNlLiAKIDcgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiA1NSByZWNvcmRzIGZyb20gQlNCSSB0ZXRyYWQgZGF0YSBmb3IgSXJlbGFuZC4gCiAxMyByZWNvcmRzIGZyb20gRmxvcmFiYW5rMSAtIEEgZ3JpZC1iYXNlZCBkYXRhYmFzZSBvbiB2YXNjdWxhciBwbGFudCAgZGlzdHJpYnV0aW9uIGluIHRoZSBub3J0aGVybiBwYXJ0IG9mIEJlbGdpdW0gKEZsYW5kZXJzIGFuZCB0aGUgQnJ1c3NlbHMgQ2FwaXRhbCByZWdpb24pLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgVXRyZWNodC4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08uIAogMSByZWNvcmRzIGZyb20gQ29sZWNjacOzbiBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIGhlcmJhcmlvIGRlIGxhIFVuaXZlcnNpdGF0IGRlIFZhbMOobmNpYSAoVkFMKS4uIAogMTQgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIE9zbG8gKE8pLiAKIDEgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDE5IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdleGZvcmQuIAogNzQgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIHBsYW50IGhlcmJhcml1bSwgQWdkZXIgbmF0dXJtdXNldW0gb2cgYm90YW5pc2tlIGhhZ2UuIAogMiByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkJ0lsbGUtZXQtVmlsYWluZS4gCiAxNyByZWNvcmRzIGZyb20gQXVzdHJhbGlhJ3MgVmlydHVhbCBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gS2FybCBGcmFuemVucyBVbml2ZXJzaXR5IG9mIEdyYXosIEluc2l0dXRlIGZvciBCb3RhbnkgLSBIZXJiYXJpdW0gR1pVLiAKIDcgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVHJvbmRoZWltIChUUkgpLiAKIDEgcmVjb3JkcyBmcm9tIE1mTiAtIEZvc3NpbCBwbGFudHMgKENlbm9waHl0aWMpLiAKIDggcmVjb3JkcyBmcm9tIEFyYW56YWRpIFppZW50emkgRWxrYXJ0ZWEuIAogMSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkdSBMaW1vdXNpbi4gCiAyIHJlY29yZHMgZnJvbSBHZW9ncmFwaGljYWxseSB0YWdnZWQgSU5TREMgc2VxdWVuY2VzLiAKIDE0IHJlY29yZHMgZnJvbSBCb3RhbmljYWwgU29jaWV0eSBvZiB0aGUgQnJpdGlzaCBJc2xlcyAtIFNOSCBTaXRlIENvbmRpdGlvbiBNb25pdG9yaW5nIC0gVmFzY3VsYXIgcGxhbnRzICgyMDAwLTIwMDYpLiAKIDMgcmVjb3JkcyBmcm9tIEluc3RpdHV0IEJvdGFuaWMgZGUgQmFyY2Vsb25hLCBCQy1IaXN0w7NyaWNvLiAKIDIgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgTXVzZXVtIG9mIEFyY2hhZW9sb2d5LCBVbml2ZXJzaXR5IG9mIFN0YXZhbmdlci4gCiA4IHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogNCByZWNvcmRzIGZyb20gQ2F0w6Fsb2dvIEZsb3LDrXN0aWNvIEhpc3TDs3JpY28gZGUgTmF2YXJyYS4gR29iaWVybm8gZGUgTmF2YXJyYS4gCiAxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBIZXJiYXJpdW0sIE5NQlUuIAogNCByZWNvcmRzIGZyb20gVHJvbXPDuCBNdXNldW0sIFZhc2N1bGFyIHBsYW50cy4gCiAzIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogOTEgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlIGFkZGl0aW9ucyBzaW5jZSAyMDAwLiAKIDEzNSByZWNvcmRzIGZyb20gQXJ0ZGF0YS4gCiA1NiByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMSByZWNvcmRzIGZyb20gTmV3IFplYWxhbmQgTmF0aW9uYWwgUGxhbnQgSGVyYmFyaXVtIChDSFIpLiAKIDMgcmVjb3JkcyBmcm9tIENvbnNvcnRpdW0gb2YgQ2FsaWZvcm5pYSBIZXJiYXJpYS4gCiA0NDUgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLiAKIDEgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gTWFhc3RyaWNodCAoTkwpIC0gSGVyYmFyaXVtLiAKIDMgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMjMgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgVWlCLiAKIDE2IHJlY29yZHMgZnJvbSBUaGUgRmxvcmEgb2YgQ291bnR5IFdhdGVyZm9yZC4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuIAogMiByZWNvcmRzIGZyb20gV2V0bGFuZCBJbnZlbnRvcnkgKE5WKS4gCiA3IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCAoSTA5MykgOiBGbG9yZSBkdSBNYXNzaWYgQXJtb3JpY2Fpbi4gCiAxIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:47:21Z","doi":"10.15468/DL.8XF6VG","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/gja4jo","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/tm56sc","References:DOI:10.15468/wtlymk","References:DOI:10.15468/tvnjk7","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/zk8soo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/i5cqdk","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T07:48:21Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:48:21Z","doi":"10.15468/DL.1MCNUD","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/48pwft","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/uc1apo","References:DOI:10.15468/hrztgn","References:DOI:10.15468/xnlbke","References:DOI:10.15468/nema2n","References:DOI:10.15468/l8vpay","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/ly60bx","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/dqb9za","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/tm56sc","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ennulm","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:48:34Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:48:34Z","doi":"10.15468/DL.PP7OQP","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ypoair","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.15468/ennulm","References:DOI:10.5519/0002965","References:DOI:10.15468/fdzzal","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/c4w4co","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/qaevz2","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T07:48:47Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:48:47Z","doi":"10.15468/DL.Z5VLSB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ennulm","References:DOI:10.15468/ke2ody","References:DOI:10.15468/hrztgn","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dqb9za","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/c4w4co","References:DOI:10.15468/s6zhid","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/pal1lb","References:DOI:10.15468/xnlbke","References:DOI:10.15468/ahunho","References:DOI:10.15468/eaqv44","References:DOI:10.5519/0002965","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/iawody","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:52:12Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLm01ejdpMDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNTMtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4yNzM0MTwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMzQgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBzZWNhbGluYSBXaWxsZC4gZXggV2FobGVuYi4gCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDM0IHJlY29yZHMgZnJvbSAxMCBjb25zdGl0dWVudCBkYXRhc2V0czogCiA3IHJlY29yZHMgZnJvbSBUaXJvbGVyIExhbmRlc211c2V1bSBGZXJkaW5hbmRldW0uIAogMiByZWNvcmRzIGZyb20gTWZOIC0gRm9zc2lsIHBsYW50cyAoQ2Vub3BoeXRpYykuIAogMSByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAyIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiA5IHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVy4gCiAxIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogOSByZWNvcmRzIGZyb20gRmxvckthcnQgLSBGbG9yZW5LYXJ0aWVydW5nIEdlZmFlc3NwZmxhbnplbi4gCiAxIHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gQmVyb2xpbmVuc2UuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:52:13Z","doi":"10.15468/DL.M5Z7I0","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo"],"publicationYear":"2015"},{"minted":"2015-04-08T07:52:28Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnlqcGJvcDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNTUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2dqYTRqbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3pybHFvazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BhbDFsYjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3d0bHltazwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3BqMnlyaDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2trYjJ4MDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzJnNmkwdjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L21iaG1tdDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3c4Z3J1NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT41NzU1Nzk8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDI2NTUgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBDYXJleCBzZXJvdGluYSBNw6lyYXQgCkhhc0Nvb3JkaW5hdGU6IHRydWUgCkhhc0dlb3NwYXRpYWxJc3N1ZTogZmFsc2UuIFRoZSBkYXRhc2V0IGluY2x1ZGVzIDI2NTUgcmVjb3JkcyBmcm9tIDI5IGNvbnN0aXR1ZW50IGRhdGFzZXRzOiAKIDE1NSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIChJQ0VMKS4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBQbGFudGFzIFZhc2N1bGFyZXMgZGUgbGEgVW5pdmVyc2lkYWQgZGUgU2FsYW1hbmNhOiBTQUxBLiAKIDIgcmVjb3JkcyBmcm9tIEludmVudGFpcmUgTmF0aW9uYWwgZHUgUGF0cmltb2luZSBOYXR1cmVsIDogRmxvcmUgZHUgTGltb3VzaW4uIAogNDkgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSAoQU1OSCkuIAogMjIgcmVjb3JkcyBmcm9tIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhIHZlZ2V0YWNpw7NuIEliw6lyaWNhIHkgTWFjYXJvbsOpc2ljYS4gCiA3MCByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBGaWVsZCBub3RlcywgQWdkZXIgbmF0dXJtdXNldW0gKEtNTikuIAogMSByZWNvcmRzIGZyb20gTHVuZCBCb3RhbmljYWwgTXVzZXVtIChMRCkuIAogMTQyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0sIFRyb25kaGVpbSAoVFJIKS4gCiAxIHJlY29yZHMgZnJvbSBDb2xlY2Npw7NuIGRlIHBsYW50YXMgdmFzY3VsYXJlcyBkZWwgaGVyYmFyaW8gZGUgbGEgVW5pdmVyc2l0YXQgZGUgVmFsw6huY2lhIChWQUwpLi4gCiAzIHJlY29yZHMgZnJvbSBCaW9sb2dpZXplbnRydW0gTGluei4gCiAxIHJlY29yZHMgZnJvbSBOYXR1cmFsaXMgQmlvZGl2ZXJzaXR5IENlbnRlciAoTkwpIC0gQm90YW55IExlaWRlbi4gCiAxMyByZWNvcmRzIGZyb20gRnVuZGFjacOzbiBCaW9kaXZlcnNpZGFkLCBSZWFsIEphcmTDrW4gQm90w6FuaWNvIChDU0lDKTogQW50aG9zLiBTaXN0ZW1hIGRlIEluZm9ybWFjacOzbiBkZSBsYXMgcGxhbnRhcyBkZSBFc3Bhw7FhLiAKIDIgcmVjb3JkcyBmcm9tIEZsb3JhIG9mIFPFgm93acWEc2tpIE5hdGlvbmFsIFBhcmssIFBvbGFuZC4gCiAyNDggcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSwgT3NsbyAoTykuIAogMSByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnRzLCBNdXNldW0gb2YgQXJjaGFlb2xvZ3ksIFVuaXZlcnNpdHkgb2YgU3RhdmFuZ2VyLiAKIDQ2IHJlY29yZHMgZnJvbSBJQkYgTW9uaXRvcmluZyBvZiBWYXNjdWxhciBQbGFudHMuIAogMTMxIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudHMsIEZpZWxkIG5vdGVzLCBUcm9uZGhlaW0gKFRSSCkuIAogMSByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogNSByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBkJ0lsbGUtZXQtVmlsYWluZS4gCiA0MyByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnQgaGVyYmFyaXVtLCBBZ2RlciBuYXR1cm11c2V1bSBvZyBib3Rhbmlza2UgaGFnZS4gCiA4NiByZWNvcmRzIGZyb20gT2JzZXJ2YXRpb25hbCBkYXRhYmFzZSBvZiBJY2VsYW5kaWMgcGxhbnRzLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFueSByZWdpc3RyYXRpb24gZGF0YWJhc2UgYnkgRGFuaXNoIGJvdGFuaXN0cy4gCiA1NiByZWNvcmRzIGZyb20gVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLCBVaUIuIAogNyByZWNvcmRzIGZyb20gVmFzY3VsYXIgSGVyYmFyaXVtLCBOTUJVLiAKIDEzNzUgcmVjb3JkcyBmcm9tIFZhc2N1bGFyIFBsYW50cywgRmllbGQgbm90ZXMsIE9zbG8gKE8pLiAKIDE2IHJlY29yZHMgZnJvbSBJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCAoSTA5MykgOiBGbG9yZSBkdSBNYXNzaWYgQXJtb3JpY2Fpbi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpbyBkZSBsYSBVbml2ZXJzaWRhZCBQw7pibGljYSBkZSBOYXZhcnJhLCBQYW1wbG9uYTogVVBOQS1ILiAKIDUgcmVjb3JkcyBmcm9tIFZJVCBIZXJiYXJpdW0gLSBWYXNjdWxhciBQbGFudHMgKFRoZSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIG9mIEFsYXZhKS4gCiAxNzEgcmVjb3JkcyBmcm9tIFRyb21zw7ggTXVzZXVtLCBWYXNjdWxhciBwbGFudHMuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:52:28Z","doi":"10.15468/DL.YJPBOP","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/gja4jo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/pal1lb","References:DOI:10.15468/wtlymk","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/w8gru5"],"publicationYear":"2015"},{"minted":"2015-04-08T07:52:33Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:52:33Z","doi":"10.15468/DL.GAFCRI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/kllkyl","References:DOI:10.15468/iawody","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/w8gru5","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965","References:DOI:10.15468/k3m1qc","References:DOI:10.15468/euw5ge"],"publicationYear":"2015"},{"minted":"2015-04-08T07:52:34Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:52:34Z","doi":"10.15468/DL.B2QVAO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/ygtutx","References:DOI:10.15468/gja4jo","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dqb9za","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/euw5ge","References:DOI:10.5519/0002965","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T07:52:35Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:52:35Z","doi":"10.15468/DL.PXG19Z","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/c4w4co","References:DOI:10.15468/eaqv44","References:DOI:10.15468/rhzrxw"],"publicationYear":"2015"},{"minted":"2015-04-08T07:53:08Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:53:08Z","doi":"10.15468/DL.T301EQ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/dqb9za","References:DOI:10.15468/hrztgn","References:DOI:10.15468/l8vpay","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wzw0k2","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/gja4jo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/w8gru5","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/ahunho","References:DOI:10.15468/kllkyl","References:DOI:10.5519/0002965","References:DOI:10.15468/ennulm","References:DOI:10.15468/c4w4co","References:DOI:10.15468/k88vjq","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/zrlqok","References:DOI:10.15468/dipjcr","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T07:55:38Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:55:38Z","doi":"10.15468/DL.Z5IWCU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/jxbhqx","References:DOI:10.15468/pal1lb","References:DOI:10.15468/c4w4co","References:DOI:10.15468/zrlqok","References:DOI:10.15468/wtlymk","References:DOI:10.15468/hrztgn","References:DOI:10.5886/2fva5p4r","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody","References:DOI:10.15468/kaq5ol","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za"],"publicationYear":"2015"},{"minted":"2015-04-08T07:55:43Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjE5bzZyaTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNTktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvMmZ2YTVwNHI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9kcWI5emE8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC41ODg2L3J0dDU3Y2M5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgICAgICA8cmVsYXRlZElkZW50aWZpZXIgcmVsYXRlZElkZW50aWZpZXJUeXBlPSJET0kiIHJlbGF0aW9uVHlwZT0iUmVmZXJlbmNlcyI+MTAuMTU0NjgvaWF3b2R5PC9yZWxhdGVkSWRlbnRpZmllcj4KICAgIDwvcmVsYXRlZElkZW50aWZpZXJzPgogICAgPHNpemVzPgogICAgICAgIDxzaXplPjE4MjkyODwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNTI1IHNwZWNpZXMgb2NjdXJyZW5jZXMgYXZhaWxhYmxlIGluIEdCSUYgbWF0Y2hpbmcgdGhlIHF1ZXJ5OiBUYXhvbktleTogQ2FyZXggc3VwaW5hIFdpbGxkLiBleCBXYWhsZW5iLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNTI1IHJlY29yZHMgZnJvbSAzNyBjb25zdGl0dWVudCBkYXRhc2V0czogCiAxIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxODUgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogNSByZWNvcmRzIGZyb20gUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoTWFkcmlkKSwgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtIChNQSkuIAogMSByZWNvcmRzIGZyb20gR0VPLUhhdXB0dmVyYW5zdGFsdHVuZyAoSW5zZWwgVmlsbSkuIAogMiByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gQ2FybmV0IGVuIExpZ25lLiAKIDE3IHJlY29yZHMgZnJvbSBUaGUgSGltYWxheWFuIFVwbGFuZHMgUGxhbnQgZGF0YWJhc2UgKEhVUCBWZXJzaW9uIDEpLiAKIDIgcmVjb3JkcyBmcm9tIFBhbGVvYmlvbG9neSBEYXRhYmFzZS4gCiAxIHJlY29yZHMgZnJvbSBUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHouIAogMTAgcmVjb3JkcyBmcm9tIE1pc3NvdXJpIEJvdGFuaWNhbCBHYXJkZW4uIAogNDcgcmVjb3JkcyBmcm9tIEZ1bmRhY2nDs24gQmlvZGl2ZXJzaWRhZCwgUmVhbCBKYXJkw61uIEJvdMOhbmljbyAoQ1NJQyk6IEFudGhvcy4gU2lzdGVtYSBkZSBJbmZvcm1hY2nDs24gZGUgbGFzIHBsYW50YXMgZGUgRXNwYcOxYS4gCiA1IHJlY29yZHMgZnJvbSBCaW9sb2dpY2FsIGFuZCBwYWxhZW9udG9sb2dpY2FsIGNvbGxlY3Rpb24gYW5kIG9ic2VydmF0aW9uIGRhdGEgTU5ITkwuIAogNSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBGZWxkYmVvYmFjaHR1bmdzZGF0ZW4gUGZsYW56ZW4uIAogNSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogNiByZWNvcmRzIGZyb20gR2VvZ3JhcGhpY2FsbHkgdGFnZ2VkIElOU0RDIHNlcXVlbmNlcy4gCiAyIHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIE1hbml0b2JhIEhlcmJhcml1bSAoV0lOKSAtIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24uIAogMyByZWNvcmRzIGZyb20gQmlvZGl2ZXJzaXTDpHRzZGF0ZW5iYW5rIGRlcyBMYW5kZXMgU2FsemJ1cmcuIAogMyByZWNvcmRzIGZyb20gSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKS4gCiAyIHJlY29yZHMgZnJvbSBGbG9yaXN0aWMgRGF0YWJhc2VzIG9mIE1lY2tsZW5idXJnLVBvbWVyYW5pYSAtIEhpZ2hlciBQbGFudHMuIAogMSByZWNvcmRzIGZyb20gQm90YW55IChVUFMpLiAKIDkgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQWxiZXJ0YSBWYXNjdWxhciBQbGFudCBIZXJiYXJpdW0gKEFMVEEpLiAKIDIgcmVjb3JkcyBmcm9tIE1hcmllLVZpY3RvcmluIEhlcmJhcml1bSAoTVQpLiAKIDIgcmVjb3JkcyBmcm9tIE5hdGlvbmFsIFN5c3RlbSBvZiBQcm90ZWN0ZWQgQXJlYXMgaW4gUG9sYW5kIC0gUGxhbnRzLiAKIDE4IHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEgSGVyYmFyaXVtIChVQkMpIC0gVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbi4gCiAxNCByZWNvcmRzIGZyb20gVW5pdmVyc2lkYWQgZGUgTmF2YXJyYSwgSGVyYmFyaXVtOiBQQU1QLVZhc2N1bGFyIFBsYW50cy4gCiA5IHJlY29yZHMgZnJvbSBVbml2ZXJzaWRhZCBkZSBPdmllZG8uIERlcGFydGFtZW50byBkZSBCaW9sb2fDrWEgZGUgT3JnYW5pc21vcyB5IFNpc3RlbWFzOiBGQ08tQnJpb2YuIAogMTkgcmVjb3JkcyBmcm9tIFRpcm9sZXIgTGFuZGVzbXVzZXVtIEZlcmRpbmFuZGV1bS4gCiA4MyByZWNvcmRzIGZyb20gVUFNIEhlcmJhcml1bSAoQUxBKSwgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiAoQXJjdG9zKS4gCiAyIHJlY29yZHMgZnJvbSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uIC0gVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uIEhlcmJhcml1bSAoV1RVKS4gCiAzIHJlY29yZHMgZnJvbSBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIE1hYXN0cmljaHQgKE5MKSAtIEhlcmJhcml1bS4gCiAyIHJlY29yZHMgZnJvbSBJbnN0aXR1dCBCb3RhbmljIGRlIEJhcmNlbG9uYSwgQkMuIAogMSByZWNvcmRzIGZyb20gTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBIZXJiYXJpdW0gT2VzYXUuIAogNDEgcmVjb3JkcyBmcm9tIENhbmFkaWFuIE11c2V1bSBvZiBOYXR1cmUgSGVyYmFyaXVtLiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBCZXJvbGluZW5zZS4gCiA1IHJlY29yZHMgZnJvbSBVbml2ZXJzaXR5IG9mIEFsYmVydGEgTXVzZXVtcywgVmFzY3VsYXIgUGxhbnQgSGVyYmFyaXVtLiAKIDUgcmVjb3JkcyBmcm9tIFVuaXZlcnNpZGFkIGRlIE92aWVkby4gRGVwYXJ0YW1lbnRvIGRlIEJpb2xvZ8OtYSBkZSBPcmdhbmlzbW9zIHkgU2lzdGVtYXM6IEZDTy4gCiAzIHJlY29yZHMgZnJvbSBGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T07:55:43Z","doi":"10.15468/DL.19O6RI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/dqb9za","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody"],"publicationYear":"2015"},{"minted":"2015-04-08T07:55:54Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:55:54Z","doi":"10.15468/DL.S2FH1W","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/dqb9za","References:DOI:10.15468/uc1apo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.5519/0002965","References:DOI:10.15468/qaevz2","References:DOI:10.15468/wtlymk","References:DOI:10.15468/c4w4co","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T07:55:56Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:55:56Z","doi":"10.15468/DL.LUDZLP","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/xnlbke","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T07:56:24Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLjlvdmtpeDwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNjItMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3hubGJrZTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2tlMm9keTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU1MTkvMDAwMjk2NTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3JoenJ4dzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2w4dnBheTwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjM4OTcvcGh5dG9rZXlzLjEyLjI4NDk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9wYWwxbGI8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9jNHc0Y288L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9lbm51bG08L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+MTQxNDM2Njwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgNTg0OCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhcmV4IHRyaW5lcnZpcyBEZWdsLiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNTg0OCByZWNvcmRzIGZyb20gMjYgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogNiByZWNvcmRzIGZyb20gTmF0dXJhbGlzIEJpb2RpdmVyc2l0eSBDZW50ZXIgKE5MKSAtIEJvdGFueSBXYWdlbmluZ2VuLiAKIDQxIHJlY29yZHMgZnJvbSBCZWxnaWFuIElGQkwgRmxvcmEgQ2hlY2tsaXN0cyAoMTkzOS0xOTcxKS4gCiA1IHJlY29yZHMgZnJvbSBOYXRpb25hYWwgSGVyYmFyaXVtIE5lZGVybGFuZC4gCiA0NSByZWNvcmRzIGZyb20gVmFzY3VsYXIgcGxhbnRzIGluIERlbm1hcmsgcmVjb3JkZWQgdW5kZXIgdGhlIFRoZSBOYXRpb253aWRlIE1vbml0b3JpbmcgYW5kIEFzc2Vzc21lbnQgUHJvZ3JhbW1lIGZvciB0aGUgQXF1YXRpYyBhbmQgVGVycmVzdHJpYWwgRW52aXJvbm1lbnRzIChOT1ZBTkEpLiAKIDEgcmVjb3JkcyBmcm9tIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKE1hZHJpZCksIFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bSAoTUEpLiAKIDk3IHJlY29yZHMgZnJvbSBGTE9SSVZPTi4gCiAzIHJlY29yZHMgZnJvbSBDYXJuZXQgZW4gTGlnbmUuIAogMSByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBNYWFzdHJpY2h0IChOTCkgLSBIZXJiYXJpdW0uIAogMiByZWNvcmRzIGZyb20gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSwgVmllbm5hIC0gSGVyYmFyaXVtIFcuIAogMSByZWNvcmRzIGZyb20gQm90YW5pY2FsIFNvY2lldHkgb2YgdGhlIEJyaXRpc2ggSXNsZXMgLSBWYXNjdWxhciBQbGFudHMgRGF0YWJhc2UgYWRkaXRpb25zIHNpbmNlIDIwMDAuIAogMTUgcmVjb3JkcyBmcm9tIE5hdHVyYWwgSGlzdG9yeSBNdXNldW0gKExvbmRvbikgQ29sbGVjdGlvbiBTcGVjaW1lbnMuIAogMjEgcmVjb3JkcyBmcm9tIEZsb3JLYXJ0IC0gRmxvcmVuS2FydGllcnVuZyBHZWZhZXNzcGZsYW56ZW4uIAogNCByZWNvcmRzIGZyb20gQmFzZSBkZSBkYXRvcyBkZSBwbGFudGFzIHZhc2N1bGFyZXMgZGVsIFBhw61zIFZhc2NvOiBBUkFOLUVILiAKIDEgcmVjb3JkcyBmcm9tIEF1c3RyYWxpYSdzIFZpcnR1YWwgSGVyYmFyaXVtLiAKIDUgcmVjb3JkcyBmcm9tIFZlZ2V0YXRpb24gZGF0YSBmcm9tIHByb3RlY3RlZCBhcmVhcyBpbiBEZW5tYXJrICjCpyAzIGluIHRoZSBEYW5pc2ggTmF0dXJlIFByb3RlY3Rpb24gQWN0KS4gCiAyIHJlY29yZHMgZnJvbSBGdW5kYWNpw7NuIEJpb2RpdmVyc2lkYWQsIFJlYWwgSmFyZMOtbiBCb3TDoW5pY28gKENTSUMpOiBBbnRob3MuIFNpc3RlbWEgZGUgSW5mb3JtYWNpw7NuIGRlIGxhcyBwbGFudGFzIGRlIEVzcGHDsWEuIAogMyByZWNvcmRzIGZyb20gbmF0dXJndWNrZXIuIAogMSByZWNvcmRzIGZyb20gSGVyYmFyaXVtIG9mIFZhc2N1bGFyIFBsYW50cyBDb2xsZWN0aW9uIG9mIHRoZSBVbml2ZXJzaXR5IG9mIEV4dHJlbWFkdXJhIChTcGFpbikuIAogNDg5NiByZWNvcmRzIGZyb20gRHV0Y2ggVmVnZXRhdGlvbiBEYXRhYmFzZSAoTFZEKS4gCiAyNCByZWNvcmRzIGZyb20gSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBGbG9yZSBGcmFuY28tQmVsZ2UuIAogNjI3IHJlY29yZHMgZnJvbSBGbG9yYWJhbmsxIC0gQSBncmlkLWJhc2VkIGRhdGFiYXNlIG9uIHZhc2N1bGFyIHBsYW50ICBkaXN0cmlidXRpb24gaW4gdGhlIG5vcnRoZXJuIHBhcnQgb2YgQmVsZ2l1bSAoRmxhbmRlcnMgYW5kIHRoZSBCcnVzc2VscyBDYXBpdGFsIHJlZ2lvbikuIAogMSByZWNvcmRzIGZyb20gTmlqbWVnZW4gTmF0dXJhbCBIaXN0b3J5IE11c2V1bSAoTkwpIC0gSGVyYmFyaXVtLiAKIDggcmVjb3JkcyBmcm9tIE5hdHVyYWxpcyBCaW9kaXZlcnNpdHkgQ2VudGVyIChOTCkgLSBCb3RhbnkgTGVpZGVuLiAKIDE4IHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAxOSByZWNvcmRzIGZyb20gRHV0Y2ggRm91bmRhdGlvbiBmb3IgQXBwbGllZCBXYXRlciBSZXNlYXJjaCAoU1RPV0EpIC0gTGltbm9kYXRhIE5lZXJsYW5kaWNhLiAKIDEgcmVjb3JkcyBmcm9tIEJvdGFuaWNhbCBTb2NpZXR5IG9mIHRoZSBCcml0aXNoIElzbGVzIC0gVmFzY3VsYXIgUGxhbnRzIERhdGFiYXNlLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T07:56:24Z","doi":"10.15468/DL.9OVKIX","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/xnlbke","References:DOI:10.15468/ke2ody","References:DOI:10.5519/0002965","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/uc1apo","References:DOI:10.15468/l8vpay","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/pal1lb","References:DOI:10.15468/c4w4co","References:DOI:10.15468/ennulm"],"publicationYear":"2015"},{"minted":"2015-04-08T07:57:09Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T07:57:09Z","doi":"10.15468/DL.ZU8ANJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/ke2ody","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ygtutx","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/w8gru5","References:DOI:10.15468/ypoair","References:DOI:10.15468/wtlymk","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iv6y8m","References:DOI:10.15468/dqb9za","References:DOI:10.15468/rhzrxw","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/ennulm","References:DOI:10.15468/c4w4co","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/qaevz2","References:DOI:10.15468/pal1lb","References:DOI:10.15468/uc1apo","References:DOI:10.15468/gja4jo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/0ea7qi"],"publicationYear":"2015"},{"minted":"2015-04-08T08:00:29Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:00:29Z","doi":"10.15468/DL.NPXXFA","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/uc1apo","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/c4w4co","References:DOI:10.15468/dqb9za","References:DOI:10.15468/xnlbke","References:DOI:10.5519/0002965","References:DOI:10.15468/g1zohr"],"publicationYear":"2015"},{"minted":"2015-04-08T08:00:44Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:00:44Z","doi":"10.15468/DL.TWEJFJ","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/iawody","References:DOI:10.15468/w8gru5","References:DOI:10.15468/gja4jo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/dqb9za","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/ypoair","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965","References:DOI:10.15468/wtlymk","References:DOI:10.15468/dipjcr","References:DOI:10.15468/k88vjq","References:DOI:10.15468/wqsad9"],"publicationYear":"2015"},{"minted":"2015-04-08T08:00:46Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:00:46Z","doi":"10.15468/DL.DIDGTC","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/l8vpay","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/uc1apo","References:DOI:10.15468/kllkyl","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/wtlymk","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T08:00:47Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:00:47Z","doi":"10.15468/DL.IYAWV3","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/zk8soo","References:DOI:10.15468/ke2ody","References:DOI:10.15468/uc1apo","References:DOI:10.15468/wtlymk","References:DOI:10.15468/kllkyl","References:DOI:10.15468/xzpcvv","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/xnlbke","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/ennulm","References:DOI:10.15468/ahunho","References:DOI:10.15468/zrlqok","References:DOI:10.5519/0002965"],"publicationYear":"2015"},{"minted":"2015-04-08T08:00:53Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLnp2emVuaTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNjktMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4LzdndWR5bzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L28zcHZuaDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2RpcGpjcjwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2x5NjBieDwvcmVsYXRlZElkZW50aWZpZXI+CiAgICA8L3JlbGF0ZWRJZGVudGlmaWVycz4KICAgIDxzaXplcz4KICAgICAgICA8c2l6ZT4zMjA4MDwvc2l6ZT4KICAgIDwvc2l6ZXM+CiAgICA8Zm9ybWF0cz4KICAgICAgICA8Zm9ybWF0PkRhcndpbiBDb3JlIEFyY2hpdmU8L2Zvcm1hdD4KICAgIDwvZm9ybWF0cz4KICAgIDxyaWdodHNMaXN0PgogICAgICAgIDxyaWdodHMgcmlnaHRzVVJJPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAiPlRoZSBkYXRhIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgYXJlIHByb3ZpZGVkIHRvIHRoZSB1c2VyIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBCWS1OQyA0LjAgbGljZW5zZSB3aGljaCBtZWFucyB0aGF0IHlvdSBhcmUgZnJlZSB0byB1c2UsIHNoYXJlLCBhbmQgYWRhcHQgdGhlIGRhdGEgcHJvdmlkZWQgdGhhdCB5b3UgZ2l2ZSByZWFzb25hYmxlIGFuZCBhcHByb3ByaWF0ZSBjcmVkaXQgKGF0dHJpYnV0aW9uKSBhbmQgdGhhdCB5b3UgZG8gbm90IHVzZSB0aGUgbWF0ZXJpYWwgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMgKG5vbi1jb21tZXJjaWFsKS4KCkRhdGEgZnJvbSBzb21lIGluZGl2aWR1YWwgZGF0YXNldHMgaW5jbHVkZWQgaW4gdGhpcyBkb3dubG9hZCBtYXkgYmUgbGljZW5zZWQgdW5kZXIgbGVzcyByZXN0cmljdGl2ZSB0ZXJtczsgcmV2aWV3IHRoZSBkZXRhaWxzIGJlbG93LjwvcmlnaHRzPgogICAgPC9yaWdodHNMaXN0PgogICAgPGRlc2NyaXB0aW9ucz4KICAgICAgICA8ZGVzY3JpcHRpb24gZGVzY3JpcHRpb25UeXBlPSJBYnN0cmFjdCIgeG1sOmxhbmc9ImVuZyI+QSBkYXRhc2V0IGNvbnRhaW5pbmcgMjEgc3BlY2llcyBvY2N1cnJlbmNlcyBhdmFpbGFibGUgaW4gR0JJRiBtYXRjaGluZyB0aGUgcXVlcnk6IFRheG9uS2V5OiBIb2ZtZWlzdGVyaWEgZmlsaWZvbGlhIEkuTS5Kb2huc3QuLiBUaGUgZGF0YXNldCBpbmNsdWRlcyAyMSByZWNvcmRzIGZyb20gMTEgY29uc3RpdHVlbnQgZGF0YXNldHM6IAogMSByZWNvcmRzIGZyb20gSGVyYmFyaW8gSUVCIGRlbCBJbnN0aXR1dG8gZGUgRWNvbG9nw61hLCBBLkMuLCBNw6l4aWNvIChJRS1CQUrDrU8pLiAKIDIgcmVjb3JkcyBmcm9tIENBUyBCb3RhbnkgKEJPVCkuIAogNSByZWNvcmRzIGZyb20gSGVyYmFyaW8gZGVsIENJQk5PUi4gCiAxIHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gb2YgVGhlIE5ldyBZb3JrIEJvdGFuaWNhbCBHYXJkZW4uIAogMiByZWNvcmRzIGZyb20gQm90YW55IChVUFMpLiAKIDQgcmVjb3JkcyBmcm9tIFByb2dyYW1hIGRlIHJlcGF0cmlhY2nDs24gZGUgZGF0b3MgZGUgZWplbXBsYXJlcyBtZXhpY2Fub3MuIAogMSByZWNvcmRzIGZyb20gQXJpem9uYSBTdGF0ZSBVbml2ZXJzaXR5IFZhc2N1bGFyIFBsYW50IEhlcmJhcml1bS4gCiAyIHJlY29yZHMgZnJvbSBNaXNzb3VyaSBCb3RhbmljYWwgR2FyZGVuLiAKIDEgcmVjb3JkcyBmcm9tIEhhcnZhcmQgVW5pdmVyc2l0eSBIZXJiYXJpYS4gCiAxIHJlY29yZHMgZnJvbSBOTU5IIG9jY3VycmVuY2UgRHdDLUEuIAogMSByZWNvcmRzIGZyb20gUm95YWwgQm90YW5pYyBHYXJkZW5zLCBLZXcgLSBIZXJiYXJpdW0gU3BlY2ltZW5zLjwvZGVzY3JpcHRpb24+CiAgICA8L2Rlc2NyaXB0aW9ucz4KPC9yZXNvdXJjZT4K","updated":"2015-04-08T08:00:53Z","doi":"10.15468/DL.ZVZENI","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/7gudyo","References:DOI:10.15468/o3pvnh","References:DOI:10.15468/dipjcr","References:DOI:10.15468/ly60bx"],"publicationYear":"2015"},{"minted":"2015-04-08T08:01:19Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:01:19Z","doi":"10.15468/DL.IJNNGB","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/ke2ody","References:DOI:10.15468/wtlymk","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/hrztgn","References:DOI:10.15468/l8vpay","References:DOI:10.15468/tvnjk7","References:DOI:10.15468/7gudyo","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/zrlqok","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/c4w4co","References:DOI:10.15468/euw5ge","References:DOI:10.15468/ennulm","References:DOI:10.15468/s6zhid","References:DOI:10.15468/ahunho","References:DOI:10.15468/jxbhqx","References:DOI:10.5519/0002965","References:DOI:10.15468/wqsad9","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/kkb2x0","References:DOI:10.15468/0ea7qi","References:DOI:10.15468/gja4jo","References:DOI:10.15468/w8gru5","References:DOI:10.5886/2fva5p4r","References:DOI:10.15468/kllkyl","References:DOI:10.15468/i5cqdk","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T08:01:20Z","datacentre_symbol":"DK.GBIF","xml":"","updated":"2015-04-08T08:01:20Z","doi":"10.15468/DL.D5LKUO","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/pal1lb","References:DOI:10.15468/pj2yrh","References:DOI:10.15468/ke2ody","References:DOI:10.15468/mbhmmt","References:DOI:10.15468/uc1apo","References:DOI:10.15468/xnlbke","References:DOI:10.15468/wtlymk","References:DOI:10.15468/l8vpay","References:DOI:10.15468/w8gru5","References:DOI:10.15468/dqb9za","References:DOI:10.15468/2g6i0v","References:DOI:10.15468/kllkyl","References:DOI:10.5519/0002965","References:DOI:10.15468/0ea7qi","References:DOI:10.3897/phytokeys.12.2849","References:DOI:10.15468/g1wfae","References:DOI:10.15468/c4w4co","References:DOI:10.15468/rhzrxw","References:DOI:10.15468/jxbhqx","References:DOI:10.15468/zrlqok","References:DOI:10.15468/ak7ldg","References:DOI:10.15468/qaevz2"],"publicationYear":"2015"},{"minted":"2015-04-08T08:05:45Z","datacentre_symbol":"DK.GBIF","xml":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8cmVzb3VyY2UgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCIgeG1sbnM9Imh0dHA6Ly9kYXRhY2l0ZS5vcmcvc2NoZW1hL2tlcm5lbC0zIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIj4KICAgIDxpZGVudGlmaWVyIGlkZW50aWZpZXJUeXBlPSJET0kiPjEwLjE1NDY4L2RsLmE1N2hvdTwvaWRlbnRpZmllcj4KICAgIDxjcmVhdG9ycz4KICAgICAgICA8Y3JlYXRvcj4KICAgICAgICAgICAgPGNyZWF0b3JOYW1lPm9jY2Rvd25sb2FkIGdiaWYub3JnPC9jcmVhdG9yTmFtZT4KICAgICAgICA8L2NyZWF0b3I+CiAgICA8L2NyZWF0b3JzPgogICAgPHRpdGxlcz4KICAgICAgICA8dGl0bGU+R0JJRiBPY2N1cnJlbmNlIERvd25sb2FkPC90aXRsZT4KICAgIDwvdGl0bGVzPgogICAgPHB1Ymxpc2hlcj5UaGUgR2xvYmFsIEJpb2RpdmVyc2l0eSBJbmZvcm1hdGlvbiBGYWNpbGl0eTwvcHVibGlzaGVyPgogICAgPHB1YmxpY2F0aW9uWWVhcj4yMDE1PC9wdWJsaWNhdGlvblllYXI+CiAgICA8c3ViamVjdHM+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+R0JJRjwvc3ViamVjdD4KICAgICAgICA8c3ViamVjdCB4bWw6bGFuZz0iZW5nIj5iaW9kaXZlcnNpdHk8L3N1YmplY3Q+CiAgICAgICAgPHN1YmplY3QgeG1sOmxhbmc9ImVuZyI+c3BlY2llcyBvY2N1cnJlbmNlczwvc3ViamVjdD4KICAgIDwvc3ViamVjdHM+CiAgICA8ZGF0ZXM+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IkNyZWF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICAgICAgPGRhdGUgZGF0ZVR5cGU9IlVwZGF0ZWQiPjIwMTUtMDQtMDg8L2RhdGU+CiAgICA8L2RhdGVzPgogICAgPHJlc291cmNlVHlwZSByZXNvdXJjZVR5cGVHZW5lcmFsPSJEYXRhc2V0Ii8+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICAgICAgPGFsdGVybmF0ZUlkZW50aWZpZXIgYWx0ZXJuYXRlSWRlbnRpZmllclR5cGU9IkdCSUYiPjAwMDAzNzUtMTUwNDA3MTAxMzE0NzYwPC9hbHRlcm5hdGVJZGVudGlmaWVyPgogICAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICAgIDxyZWxhdGVkSWRlbnRpZmllcnM+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L2M0dzRjbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjE1NDY4L3VjMWFwbzwvcmVsYXRlZElkZW50aWZpZXI+CiAgICAgICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iRE9JIiByZWxhdGlvblR5cGU9IlJlZmVyZW5jZXMiPjEwLjU4ODYvcnR0NTdjYzk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgICAgIDxyZWxhdGVkSWRlbnRpZmllciByZWxhdGVkSWRlbnRpZmllclR5cGU9IkRPSSIgcmVsYXRpb25UeXBlPSJSZWZlcmVuY2VzIj4xMC4xNTQ2OC9pYXdvZHk8L3JlbGF0ZWRJZGVudGlmaWVyPgogICAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgICA8c2l6ZXM+CiAgICAgICAgPHNpemU+ODY3OTI8L3NpemU+CiAgICA8L3NpemVzPgogICAgPGZvcm1hdHM+CiAgICAgICAgPGZvcm1hdD5EYXJ3aW4gQ29yZSBBcmNoaXZlPC9mb3JtYXQ+CiAgICA8L2Zvcm1hdHM+CiAgICA8cmlnaHRzTGlzdD4KICAgICAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wIj5UaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGlzIGRvd25sb2FkIGFyZSBwcm92aWRlZCB0byB0aGUgdXNlciB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgQlktTkMgNC4wIGxpY2Vuc2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3UgYXJlIGZyZWUgdG8gdXNlLCBzaGFyZSwgYW5kIGFkYXB0IHRoZSBkYXRhIHByb3ZpZGVkIHRoYXQgeW91IGdpdmUgcmVhc29uYWJsZSBhbmQgYXBwcm9wcmlhdGUgY3JlZGl0IChhdHRyaWJ1dGlvbikgYW5kIHRoYXQgeW91IGRvIG5vdCB1c2UgdGhlIG1hdGVyaWFsIGZvciBjb21tZXJjaWFsIHB1cnBvc2VzIChub24tY29tbWVyY2lhbCkuCgpEYXRhIGZyb20gc29tZSBpbmRpdmlkdWFsIGRhdGFzZXRzIGluY2x1ZGVkIGluIHRoaXMgZG93bmxvYWQgbWF5IGJlIGxpY2Vuc2VkIHVuZGVyIGxlc3MgcmVzdHJpY3RpdmUgdGVybXM7IHJldmlldyB0aGUgZGV0YWlscyBiZWxvdy48L3JpZ2h0cz4KICAgIDwvcmlnaHRzTGlzdD4KICAgIDxkZXNjcmlwdGlvbnM+CiAgICAgICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiIHhtbDpsYW5nPSJlbmciPkEgZGF0YXNldCBjb250YWluaW5nIDc1OCBzcGVjaWVzIG9jY3VycmVuY2VzIGF2YWlsYWJsZSBpbiBHQklGIG1hdGNoaW5nIHRoZSBxdWVyeTogVGF4b25LZXk6IENhc3Npb3BlIGh5cG5vaWRlcyAoTC4pIEQuIERvbiAKSGFzQ29vcmRpbmF0ZTogdHJ1ZSAKSGFzR2Vvc3BhdGlhbElzc3VlOiBmYWxzZS4gVGhlIGRhdGFzZXQgaW5jbHVkZXMgNzU4IHJlY29yZHMgZnJvbSAxMSBjb25zdGl0dWVudCBkYXRhc2V0czogCiA0IHJlY29yZHMgZnJvbSBIZXJiYXJpdW0gKMOFYm8gQWthZGVtaSksIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIFR1cmt1IChUVVJBKS4gCiAzIHJlY29yZHMgZnJvbSBMdW5kIEJvdGFuaWNhbCBNdXNldW0gKExEKS4gCiAyIHJlY29yZHMgZnJvbSBuYXR1cmd1Y2tlci4gCiAxIHJlY29yZHMgZnJvbSBUaGUgVmFzY3VsYXIgUGxhbnQgQ29sbGVjdGlvbiBhdCB0aGUgQm90YW5pc2NoZSBTdGFhdHNzYW1tbHVuZyBNw7xuY2hlbi4gCiAxIHJlY29yZHMgZnJvbSBCb3RhbmljIEdhcmRlbiBvZiB0aGUgRmlubmlzaCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5LiAKIDMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSBvZiBKeXbDpHNreWzDpCBVbml2ZXJzaXR5IE11c2V1bS4gCiAzMyByZWNvcmRzIGZyb20gT0hOLiAKIDIgcmVjb3JkcyBmcm9tIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSBIZXJiYXJpdW0gKFVCQykgLSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uLiAKIDIgcmVjb3JkcyBmcm9tIFVBTSBIZXJiYXJpdW0gKEFMQSksIFZhc2N1bGFyIFBsYW50IENvbGxlY3Rpb24gKEFyY3RvcykuIAogNTMgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW5pY2FsIE11c2V1bSwgVW5pdmVyc2l0eSBvZiBPdWx1LCBGaW5sYW5kIChPVUxVKS4gCiA2NTQgcmVjb3JkcyBmcm9tIEhlcmJhcml1bSwgQm90YW55IFVuaXQsIEZpbm5pc2ggTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSAoSCkuPC9kZXNjcmlwdGlvbj4KICAgIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","updated":"2015-04-08T08:05:45Z","doi":"10.15468/DL.A57HOU","publisher":"The Global Biodiversity Information Facility","creator":["occdownload gbif.org"],"title":["GBIF Occurrence Download"],"resourceTypeGeneral":"Dataset","relatedIdentifier":["References:DOI:10.15468/c4w4co","References:DOI:10.15468/uc1apo","References:DOI:10.5886/rtt57cc9","References:DOI:10.15468/iawody"],"publicationYear":"2015"}]}}
    http_version: 
  recorded_at: Sat, 02 Jul 2016 17:01:54 GMT
recorded_with: VCR 2.9.3
