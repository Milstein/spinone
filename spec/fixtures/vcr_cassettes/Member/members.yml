---
http_interactions:
- request:
    method: get
    uri: https://profiles.test.datacite.org/api/members
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - http://264044c521b8
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 10 Mar 2018 10:14:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Connection:
      - keep-alive
      Set-Cookie:
      - AWSALB=KwamKg++P5BkW0sP/wDwPYAJ+a+qM+Q2Yb+mc4MxWur7hVd67KjooXr48BbQX6KNFIrAMDFSfFPcd1gCtvvIp9hRxABEMnciKQc97ZuouqZEvE3O3mE3pwic+kqO;
        Expires=Sat, 17 Mar 2018 10:14:37 GMT; Path=/
      Status:
      - 200 OK
      X-Anonymous-Consumer:
      - 'true'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Vary:
      - Accept-Encoding
      X-Xss-Protection:
      - 1; mode=block
      X-Request-Id:
      - 2798b036-73f8-4985-9d85-38e26db5f68e
      Etag:
      - W/"c845b063116467a545560f69a7f332d4"
      X-Frame-Options:
      - SAMEORIGIN
      X-Runtime:
      - '0.054824'
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger 5.1.12
      Server:
      - nginx/1.12.2 + Phusion Passenger 5.1.12
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      Access-Control-Expose-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 10 Mar 2018 10:14:52 GMT
recorded_with: VCR 3.0.3
